{
  "repository": {
    "discussions": {
      "nodes": [
        {
          "author": {
            "login": "lindseywild"
          },
          "createdAt": "2022-02-03T20:01:50Z",
          "number": 614,
          "url": "https://github.com/github/accessibility/discussions/614"
        },
        {
          "author": {
            "login": "lindseywild"
          },
          "createdAt": "2022-02-03T19:58:05Z",
          "number": 613,
          "url": "https://github.com/github/accessibility/discussions/613"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2022-01-20T16:20:40Z",
          "number": 574,
          "url": "https://github.com/github/accessibility/discussions/574"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2022-01-20T14:26:31Z",
          "number": 573,
          "url": "https://github.com/github/accessibility/discussions/573"
        },
        {
          "author": {
            "login": "owenniblock"
          },
          "createdAt": "2022-01-10T14:29:42Z",
          "number": 533,
          "url": "https://github.com/github/accessibility/discussions/533"
        },
        {
          "author": {
            "login": "inkblotty"
          },
          "createdAt": "2021-12-30T20:55:14Z",
          "number": 510,
          "url": "https://github.com/github/accessibility/discussions/510"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-12-15T14:33:03Z",
          "number": 481,
          "url": "https://github.com/github/accessibility/discussions/481"
        },
        {
          "author": {
            "login": "smockle"
          },
          "createdAt": "2021-12-09T21:39:22Z",
          "number": 472,
          "url": "https://github.com/github/accessibility/discussions/472"
        },
        {
          "author": {
            "login": "inkblotty"
          },
          "createdAt": "2021-12-07T19:57:54Z",
          "number": 460,
          "url": "https://github.com/github/accessibility/discussions/460"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-12-01T08:17:20Z",
          "number": 445,
          "url": "https://github.com/github/accessibility/discussions/445"
        },
        {
          "author": {
            "login": "smockle"
          },
          "createdAt": "2021-11-30T20:31:11Z",
          "number": 443,
          "url": "https://github.com/github/accessibility/discussions/443"
        },
        {
          "author": {
            "login": "smockle"
          },
          "createdAt": "2021-11-30T20:21:26Z",
          "number": 442,
          "url": "https://github.com/github/accessibility/discussions/442"
        },
        {
          "author": {
            "login": "smockle"
          },
          "createdAt": "2021-11-30T20:03:45Z",
          "number": 440,
          "url": "https://github.com/github/accessibility/discussions/440"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-11-30T18:24:00Z",
          "number": 438,
          "url": "https://github.com/github/accessibility/discussions/438"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-11-24T14:33:12Z",
          "number": 432,
          "url": "https://github.com/github/accessibility/discussions/432"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-11-17T11:25:28Z",
          "number": 418,
          "url": "https://github.com/github/accessibility/discussions/418"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-11-17T09:59:38Z",
          "number": 417,
          "url": "https://github.com/github/accessibility/discussions/417"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-11-03T13:34:30Z",
          "number": 395,
          "url": "https://github.com/github/accessibility/discussions/395"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-11-03T13:15:03Z",
          "number": 394,
          "url": "https://github.com/github/accessibility/discussions/394"
        },
        {
          "author": {
            "login": "inkblotty"
          },
          "createdAt": "2021-10-26T20:28:13Z",
          "number": 369,
          "url": "https://github.com/github/accessibility/discussions/369"
        },
        {
          "author": {
            "login": "JoseInTheArena"
          },
          "createdAt": "2021-10-22T19:42:33Z",
          "number": 355,
          "url": "https://github.com/github/accessibility/discussions/355"
        },
        {
          "author": {
            "login": "inkblotty"
          },
          "createdAt": "2021-10-18T17:00:39Z",
          "number": 320,
          "url": "https://github.com/github/accessibility/discussions/320"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-10-04T19:38:09Z",
          "number": 295,
          "url": "https://github.com/github/accessibility/discussions/295"
        },
        {
          "author": {
            "login": "JoseInTheArena"
          },
          "createdAt": "2021-10-04T17:25:43Z",
          "number": 294,
          "url": "https://github.com/github/accessibility/discussions/294"
        },
        {
          "author": {
            "login": "JoseInTheArena"
          },
          "createdAt": "2021-09-27T19:33:15Z",
          "number": 286,
          "url": "https://github.com/github/accessibility/discussions/286"
        },
        {
          "author": {
            "login": "JoseInTheArena"
          },
          "createdAt": "2021-09-27T18:58:48Z",
          "number": 285,
          "url": "https://github.com/github/accessibility/discussions/285"
        },
        {
          "author": {
            "login": "JoseInTheArena"
          },
          "createdAt": "2021-09-27T17:46:46Z",
          "number": 284,
          "url": "https://github.com/github/accessibility/discussions/284"
        },
        {
          "author": {
            "login": "bolonio"
          },
          "createdAt": "2021-09-24T08:45:34Z",
          "number": 280,
          "url": "https://github.com/github/accessibility/discussions/280"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-09-21T15:46:23Z",
          "number": 264,
          "url": "https://github.com/github/accessibility/discussions/264"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-09-20T20:28:09Z",
          "number": 262,
          "url": "https://github.com/github/accessibility/discussions/262"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-09-17T12:42:29Z",
          "number": 252,
          "url": "https://github.com/github/accessibility/discussions/252"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-09-14T13:49:35Z",
          "number": 239,
          "url": "https://github.com/github/accessibility/discussions/239"
        },
        {
          "author": {
            "login": "ichelsea"
          },
          "createdAt": "2021-09-08T20:42:29Z",
          "number": 221,
          "url": "https://github.com/github/accessibility/discussions/221"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-09-03T14:49:48Z",
          "number": 214,
          "url": "https://github.com/github/accessibility/discussions/214"
        },
        {
          "author": {
            "login": "JoseInTheArena"
          },
          "createdAt": "2021-08-26T00:11:29Z",
          "number": 202,
          "url": "https://github.com/github/accessibility/discussions/202"
        },
        {
          "author": {
            "login": "smockle"
          },
          "createdAt": "2021-08-24T17:17:48Z",
          "number": 197,
          "url": "https://github.com/github/accessibility/discussions/197"
        },
        {
          "author": {
            "login": "smockle"
          },
          "createdAt": "2021-08-24T14:05:52Z",
          "number": 196,
          "url": "https://github.com/github/accessibility/discussions/196"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-08-18T15:12:57Z",
          "number": 187,
          "url": "https://github.com/github/accessibility/discussions/187"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-08-10T13:14:46Z",
          "number": 155,
          "url": "https://github.com/github/accessibility/discussions/155"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-08-09T18:06:27Z",
          "number": 151,
          "url": "https://github.com/github/accessibility/discussions/151"
        },
        {
          "author": {
            "login": "benjiallen"
          },
          "createdAt": "2021-08-09T15:54:56Z",
          "number": 149,
          "url": "https://github.com/github/accessibility/discussions/149"
        },
        {
          "author": {
            "login": "khiga8"
          },
          "createdAt": "2021-06-19T01:06:38Z",
          "number": 92,
          "url": "https://github.com/github/accessibility/discussions/92"
        },
        {
          "author": {
            "login": "JoseInTheArena"
          },
          "createdAt": "2021-06-15T06:03:41Z",
          "number": 88,
          "url": "https://github.com/github/accessibility/discussions/88"
        },
        {
          "author": {
            "login": "khiga8"
          },
          "createdAt": "2021-05-03T19:18:59Z",
          "number": 182,
          "url": "https://github.com/github/accessibility/discussions/182"
        },
        {
          "author": {
            "login": "jmilas"
          },
          "createdAt": "2020-06-01T15:48:25Z",
          "number": 34,
          "url": "https://github.com/github/accessibility/discussions/34"
        },
        {
          "author": {
            "login": "jmilas"
          },
          "createdAt": "2020-06-01T15:42:53Z",
          "number": 33,
          "url": "https://github.com/github/accessibility/discussions/33"
        },
        {
          "author": {
            "login": "jmilas"
          },
          "createdAt": "2020-06-01T15:40:05Z",
          "number": 32,
          "url": "https://github.com/github/accessibility/discussions/32"
        },
        {
          "author": {
            "login": "jmilas"
          },
          "createdAt": "2020-06-01T15:38:24Z",
          "number": 31,
          "url": "https://github.com/github/accessibility/discussions/31"
        },
        {
          "author": {
            "login": "jmilas"
          },
          "createdAt": "2020-06-01T15:37:21Z",
          "number": 30,
          "url": "https://github.com/github/accessibility/discussions/30"
        },
        {
          "author": {
            "login": "jmilas"
          },
          "createdAt": "2020-06-01T15:34:56Z",
          "number": 29,
          "url": "https://github.com/github/accessibility/discussions/29"
        }
      ]
    },
    "issues": {
      "nodes": [
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Command Palette] Rework Tab completion and Clear button navigation based on #834",
          "url": "https://github.com/github/accessibility/issues/833",
          "projectItems": {
            "edges": [
              {
                "node": {
                  "project": {
                    "title": "Accessibility"
                  },
                  "fieldValueByName": {
                    "name": "In Progress"
                  }
                }
              }
            ]
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[EPIC] [Command Palette] Screen Reader Remediation: Round 1",
          "url": "https://github.com/github/accessibility/issues/832",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Batch] [Dialog] Developer Experience before Upstreaming",
          "url": "https://github.com/github/accessibility/issues/830",
          "projectItems": {
            "edges": [
              {
                "node": {
                  "project": {
                    "title": "Accessibility"
                  },
                  "fieldValueByName": {
                    "name": null
                  }
                }
              }
            ]
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Dialog] Documentation for Developers on usage",
          "url": "https://github.com/github/accessibility/issues/829",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Dialog] Linting rules to help guide Developers to use the new Dialog",
          "url": "https://github.com/github/accessibility/issues/828",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] Set up Experimental component files in Dotcom for ActionMenu",
          "url": "https://github.com/github/accessibility/issues/815",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[SubTask] Autocomplete in Dotcom: update instances in sponsors",
          "url": "https://github.com/github/accessibility/issues/814",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[SubTask] Autocomplete in Dotcom: update instances in invitations",
          "url": "https://github.com/github/accessibility/issues/813",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[SubTask] Autocomplete in Dotcom: update instances in toggleable_features",
          "url": "https://github.com/github/accessibility/issues/812",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[SubTask] Autocomplete in Dotcom: update instances in feature_flags",
          "url": "https://github.com/github/accessibility/issues/811",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[SubTask] Autocomplete in Dotcom: update instances in billing_managers",
          "url": "https://github.com/github/accessibility/issues/810",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[SubTask] Autocomplete in Dotcom: update instances in stafftools",
          "url": "https://github.com/github/accessibility/issues/809",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Async Meeting] FileTree Audit Refining",
          "url": "https://github.com/github/accessibility/issues/808",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[EPIC] Tooltip Maturity",
          "url": "https://github.com/github/accessibility/issues/807",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] [Common Pattern] Font Sizes and Supporting Zoom / Resizing (with link in The Hub)",
          "url": "https://github.com/github/accessibility/issues/804",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Deep-dive] Topic: Accessibility Settings: Enabling customization for the right reasons",
          "url": "https://github.com/github/accessibility/issues/800",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Deep-dive] Topic: Making Charts and Graphs Accessible",
          "url": "https://github.com/github/accessibility/issues/799",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Deep-dive] Topic: ATAG: What is it, and how does it overlap with WCAG?",
          "url": "https://github.com/github/accessibility/issues/798",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] Create a branch in Dotcom to enable Accessibility team members to update the 5 Autocomplete use cases",
          "url": "https://github.com/github/accessibility/issues/797",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] Bump Primer View Components's auto-complete-element version and publish",
          "url": "https://github.com/github/accessibility/issues/796",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Batch] Primer Autocomplete version bump",
          "url": "https://github.com/github/accessibility/issues/795",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Batch] Discussions Validation of our Self-Serve Platform",
          "url": "https://github.com/github/accessibility/issues/791",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Deep-dive] Topic: Page and Navigation transitions, Dynamic Content, and SPAs ",
          "url": "https://github.com/github/accessibility/issues/790",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] Add a Last Audit SHA in metadata of Primer components",
          "url": "https://github.com/github/accessibility/issues/789",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Batch] Start the Experimental ActionMenu component in Dotcom",
          "url": "https://github.com/github/accessibility/issues/783",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Deep-dive] Topic: Spreadsheets are not Forms",
          "url": "https://github.com/github/accessibility/issues/776",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] [Common Pattern] Managing Focus",
          "url": "https://github.com/github/accessibility/issues/733",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] How to Talk about Disability: People-First versus Identity, Impairment, etc.",
          "url": "https://github.com/github/accessibility/issues/732",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] Where to find Internal and External (vetted) Accessibility Resources",
          "url": "https://github.com/github/accessibility/issues/731",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[EPIC] [Documentation] Primer Accessibility Common Patterns",
          "url": "https://github.com/github/accessibility/issues/645",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[EPIC] [Training] Enable all Hubbers to be Accessibility Aware",
          "url": "https://github.com/github/accessibility/issues/643",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] Review and Prep Onboarding training from Microsoft resources for new Hubbers (Level 1)",
          "url": "https://github.com/github/accessibility/issues/642",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[EPIC] [Documentation] The Basics: Audits, Roles, and How to do Accessibility Work",
          "url": "https://github.com/github/accessibility/issues/641",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[EPIC] [Tooling] Axe Scan",
          "url": "https://github.com/github/accessibility/issues/639",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Bug] Focus is lost after Assigning someone to an Issue",
          "url": "https://github.com/github/accessibility/issues/604",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] [Common Pattern] Designing a link for everyone",
          "url": "https://github.com/github/accessibility/issues/587",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Chore] Clean up existing documentation and remove extras",
          "url": "https://github.com/github/accessibility/issues/559",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Review Request] Documentation Team: Search Docs functionality",
          "url": "https://github.com/github/accessibility/issues/524",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] [Common Pattern] Adding Context to Buttons",
          "url": "https://github.com/github/accessibility/issues/508",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[EPIC] [Tracking] Emoji Picker component",
          "url": "https://github.com/github/accessibility/issues/506",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Tracking] Dropdown component",
          "url": "https://github.com/github/accessibility/issues/505",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Tracking] 6 High-Impact Components",
          "url": "https://github.com/github/accessibility/issues/502",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] Outline of the 3 Levels of Accessibility Training at GitHub",
          "url": "https://github.com/github/accessibility/issues/499",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] Create *How to Set Up your Environment for Accessibility* in The Hub",
          "url": "https://github.com/github/accessibility/issues/498",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Tracking] \"Self-Serve Platform\" grouped by Location",
          "url": "https://github.com/github/accessibility/issues/496",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [Documentation] Create *How to Get Help* documentation in The Hub",
          "url": "https://github.com/github/accessibility/issues/495",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[INITIATIVE] 6 High-Impact Components",
          "url": "https://github.com/github/accessibility/issues/491",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] Autocomplete component: Update accessibility-related information in component documentation in Primer",
          "url": "https://github.com/github/accessibility/issues/385",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [SearchAutocomplete] Implement new Search/Autocomplete component in Discussions dashboard",
          "url": "https://github.com/github/accessibility/issues/378",
          "projectItems": {
            "edges": []
          }
        },
        {
          "createdAt": "2022-04-06T01:53:21Z",
          "title": "[Story] [SearchAutocomplete] Rework Autocomplete in Primer to have a more accessible API",
          "url": "https://github.com/github/accessibility/issues/373",
          "projectItems": {
            "edges": []
          }
        }
      ]
    }
  },
  "prsCreated": {
    "edges": [
      {
        "node": {
          "title": "Create sprint-overview.md",
          "createdAt": "2022-04-20T21:22:40Z",
          "url": "https://github.com/github/accessibility/pull/1062",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "[Proposal] New FR policy",
          "createdAt": "2022-04-20T15:12:15Z",
          "url": "https://github.com/github/accessibility/pull/1055",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Create my-work.yml",
          "createdAt": "2022-04-15T14:58:38Z",
          "url": "https://github.com/github/accessibility/pull/1029",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Update how-we-work.md to improve tab stops",
          "createdAt": "2022-04-07T15:03:32Z",
          "url": "https://github.com/github/accessibility/pull/1001",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "All the updates to our Daily Update workflow",
          "createdAt": "2022-04-05T19:32:54Z",
          "url": "https://github.com/github/accessibility/pull/990",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Update office-hours-meeting.md to align with deep dive template",
          "createdAt": "2022-04-05T18:31:36Z",
          "url": "https://github.com/github/accessibility/pull/988",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Create daily-update-comment.yml",
          "createdAt": "2022-04-05T15:52:21Z",
          "url": "https://github.com/github/accessibility/pull/986",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Automation: Testing daily-update",
          "createdAt": "2022-04-04T19:46:16Z",
          "url": "https://github.com/github/accessibility/pull/985",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Update Audit Process to cross-link to The Hub",
          "createdAt": "2022-04-01T14:58:58Z",
          "url": "https://github.com/github/accessibility/pull/977",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "[Docs] Process for Primer audit issues & Initial outline of Accessibility ownership between a11y Eng and Primer",
          "createdAt": "2022-03-31T23:58:05Z",
          "url": "https://github.com/github/accessibility/pull/972",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Update hww.env",
          "createdAt": "2022-03-17T22:32:03Z",
          "url": "https://github.com/github/accessibility/pull/915",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Update deep-dive.yml",
          "createdAt": "2022-03-17T17:27:59Z",
          "url": "https://github.com/github/accessibility/pull/911",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Update a11y-audit-request.md",
          "createdAt": "2022-03-11T19:30:54Z",
          "url": "https://github.com/github/accessibility/pull/886",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Fix labels on Refining template",
          "createdAt": "2022-03-10T18:41:52Z",
          "url": "https://github.com/github/accessibility/pull/880",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Create Folder for Axe Con notes",
          "createdAt": "2022-03-09T15:49:27Z",
          "url": "https://github.com/github/accessibility/pull/872",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      },
      {
        "node": {
          "title": "Update deep-dive.yml to add timezones",
          "createdAt": "2022-03-02T16:05:00Z",
          "url": "https://github.com/github/accessibility/pull/835",
          "closingIssuesReferences": {
            "edges": []
          }
        }
      }
    ]
  },
  "prReviewsAndCommits": {
    "edges": [
      {
        "node": {
          "createdAt": "2022-06-08T20:12:03Z",
          "title": "Add CODEOWNERS file",
          "url": "https://github.com/github/accessibility-scorecard/pull/13",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "khiga8"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/e53c7ba561fd052db68dc067c088105121afff7a",
                  "pushedDate": "2022-06-08T20:10:52Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": [
              {
                "createdAt": "2022-06-08T22:48:06Z",
                "comments": {
                  "nodes": []
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "createdAt": "2022-06-08T19:57:25Z",
          "title": "Adding stale issues requirement for Accessibility Audit objective",
          "url": "https://github.com/github/accessibility-scorecard/pull/12",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "kendallgassner"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/d1c19927115d1950576932abdae18e8ea6f104f3",
                  "pushedDate": "2022-06-08T18:20:35Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/b0c71fa8f6b8dbbb9949d408602030197236baa6",
                  "pushedDate": "2022-06-08T18:29:20Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/7e2992d0a6a4a6c4c9c2693e76898cf6eb4fcbc2",
                  "pushedDate": "2022-06-08T20:17:22Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/3a731add3857d56f20e96037589ffaca43000817",
                  "pushedDate": "2022-06-08T23:42:29Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/9a877d16bd5f5d06df6c06e418cb2c5e933c0ea3",
                  "pushedDate": "2022-06-08T23:57:11Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/b4ab99800afceef3eb389f4b319fde5b7f71f0f6",
                  "pushedDate": "2022-06-09T00:17:22Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/a220a7b43d36f8b8d3cfe00b9f915563853b1c3c",
                  "pushedDate": "2022-06-09T16:27:07Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/fa996d405c16613c99734e78054a9842eebfb883",
                  "pushedDate": "2022-06-09T17:11:01Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/f37a82586e80e523f8fd8074278706e089de7e01",
                  "pushedDate": "2022-06-09T17:26:21Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/e840679497a4258909ba8232ecd3d4b7f6ff4fa4",
                  "pushedDate": "2022-06-10T15:42:38Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": [
              {
                "createdAt": "2022-06-09T01:33:50Z",
                "comments": {
                  "nodes": [
                    {
                      "createdAt": "2022-06-09T01:33:50Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r892994772"
                    }
                  ]
                }
              },
              {
                "createdAt": "2022-06-09T01:35:17Z",
                "comments": {
                  "nodes": [
                    {
                      "createdAt": "2022-06-09T01:35:18Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r892995249"
                    }
                  ]
                }
              },
              {
                "createdAt": "2022-06-09T01:35:57Z",
                "comments": {
                  "nodes": [
                    {
                      "createdAt": "2022-06-09T01:35:58Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r892995503"
                    },
                    {
                      "createdAt": "2022-06-09T01:43:06Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r892998140"
                    },
                    {
                      "createdAt": "2022-06-09T01:44:56Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r892998794"
                    },
                    {
                      "createdAt": "2022-06-09T01:47:21Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r892999751"
                    },
                    {
                      "createdAt": "2022-06-09T01:48:41Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r893000227"
                    },
                    {
                      "createdAt": "2022-06-09T01:49:38Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r893000593"
                    },
                    {
                      "createdAt": "2022-06-09T01:53:18Z",
                      "url": "https://github.com/github/accessibility-scorecard/pull/12#discussion_r893001944"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      {
        "node": {
          "createdAt": "2022-06-08T16:39:19Z",
          "title": "Break down linter requirements to be granular",
          "url": "https://github.com/github/accessibility-scorecard/pull/11",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "khiga8"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/3450d9950a3bb5bda9461480df905a2d2ccdfd1e",
                  "pushedDate": null,
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/687dea35d191ec2b4ec9d79aae9ac95e531ef3d3",
                  "pushedDate": "2022-06-08T16:42:48Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/af6dd35547997c2171fc4f58d4c532a44a669b32",
                  "pushedDate": "2022-06-08T17:06:22Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/3b197d76027887c6cb97db9ad16b2eb2459669ab",
                  "pushedDate": "2022-06-08T17:43:08Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/67cd56f9ce6f71688c9ae4e44477b064afbeaf0f",
                  "pushedDate": "2022-06-08T18:40:00Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/2951e4a86f362e63418657d77f8c81564943d1bc",
                  "pushedDate": "2022-06-09T13:12:33Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": []
          }
        }
      },
      {
        "node": {
          "createdAt": "2022-06-08T15:04:15Z",
          "title": "Test removing lib",
          "url": "https://github.com/github/accessibility-scorecard/pull/10",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "kendallgassner"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/b3d99463558c78d7392fd82511db67473233555d",
                  "pushedDate": "2022-06-08T15:02:37Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/e439fc7dcd51302c15b87c1478b52936a55e5168",
                  "pushedDate": "2022-06-08T15:06:14Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/bf4cdcb7db48cd3b0974d40b0265ab6cad8bf378",
                  "pushedDate": "2022-06-08T15:29:56Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": []
          }
        }
      },
      {
        "node": {
          "createdAt": "2022-06-07T20:55:11Z",
          "title": "Cleaning up getLabels and getService",
          "url": "https://github.com/github/accessibility-scorecard/pull/9",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "kendallgassner"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/ef73f3579642e211625275004b9e3c1a1090c7a1",
                  "pushedDate": "2022-06-07T20:25:22Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/c0308d1f5f2f491832583599e5a02ff530a50a16",
                  "pushedDate": "2022-06-07T20:38:27Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/74369b7dd9d6f7d86244f7d2eafc003f727fce92",
                  "pushedDate": "2022-06-07T20:57:33Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/6d0ca1cf814846e0ab639e32214543bcda54a2fc",
                  "pushedDate": "2022-06-08T14:30:31Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": []
          }
        }
      },
      {
        "node": {
          "createdAt": "2022-06-06T21:03:30Z",
          "title": "Add score: Percentage of Issues closed ",
          "url": "https://github.com/github/accessibility-scorecard/pull/8",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "kendallgassner"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/e3c1543743822b06d191a6e3a012f712ff8f66d6",
                  "pushedDate": "2022-06-06T20:47:53Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/df849173e4b2e3fe75d98cc4fb77cecb7c38b46e",
                  "pushedDate": "2022-06-06T21:05:38Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/299edaf1ea7ebb1d0e0fb3e8666345b9815f9b57",
                  "pushedDate": "2022-06-06T22:04:04Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/65cb36e6a8afee518d5789d784010e0223f382dc",
                  "pushedDate": "2022-06-06T22:07:59Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/92b9330c9816ebc55aa52713ed65ea494515580e",
                  "pushedDate": "2022-06-06T22:09:03Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/9cef073779ac9992a79a523c0dde72b66e555eb3",
                  "pushedDate": "2022-06-06T22:10:20Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/cec86dd7dee62408b9aa845b07f3ae9c2e6f62c9",
                  "pushedDate": "2022-06-06T22:15:20Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/2658e64e1912b98ed70e5a8c8f33febb570f57a6",
                  "pushedDate": "2022-06-06T22:17:22Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/d6a312662f2abcb6d232a6fb12ce2d0c5636b369",
                  "pushedDate": "2022-06-06T22:17:54Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/a37a29e35a7fcbb1c63fa0fb9bf48ba2e25a3438",
                  "pushedDate": "2022-06-06T22:18:43Z",
                  "author": {
                    "user": {
                      "login": "kendallgassner"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": []
          }
        }
      },
      {
        "node": {
          "createdAt": "2022-06-01T18:46:10Z",
          "title": "Update update-scorecard-staging.yml",
          "url": "https://github.com/github/accessibility-scorecard/pull/7",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "khiga8"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/e7dd9d605382e3266172a5403d4f52f4b4693695",
                  "pushedDate": "2022-06-01T18:45:17Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              },
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/df9a29dd042e9302f68e81ecf1346df206ca9248",
                  "pushedDate": "2022-06-01T18:50:18Z",
                  "author": {
                    "user": {
                      "login": "khiga8"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": []
          }
        }
      },
      {
        "node": {
          "createdAt": "2022-06-01T10:57:53Z",
          "title": "docs: updates overall readme for scorecard work",
          "url": "https://github.com/github/accessibility-scorecard/pull/6",
          "closingIssuesReferences": {
            "edges": []
          },
          "author": {
            "login": "lindseywild"
          },
          "commits": {
            "nodes": [
              {
                "commit": {
                  "url": "https://github.com/github/accessibility-scorecard/commit/aca00a24c16fb3fdaa9b3562b114319b56a94276",
                  "pushedDate": "2022-06-01T10:56:41Z",
                  "author": {
                    "user": {
                      "login": "lindseywild"
                    }
                  }
                }
              }
            ]
          },
          "reviews": {
            "nodes": [
              {
                "createdAt": "2022-06-01T14:08:32Z",
                "comments": {
                  "nodes": []
                }
              }
            ]
          }
        }
      }
    ]
  },
  "issueComments": {
    "nodes": [
      {
        "title": "[Story] [Axe Fundamental] Use Datadog to collect the results of Axe scans",
        "url": "https://github.com/github/accessibility/issues/1028",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-03T15:05:08Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1116207418"
            },
            {
              "createdAt": "2022-05-03T16:45:19Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1116319954"
            },
            {
              "createdAt": "2022-05-05T08:53:18Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1118319152"
            },
            {
              "createdAt": "2022-05-10T08:14:23Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1122073294"
            },
            {
              "createdAt": "2022-05-10T16:05:22Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1122595041"
            },
            {
              "createdAt": "2022-05-17T20:09:30Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1129272162"
            },
            {
              "createdAt": "2022-05-21T01:31:36Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1133494989"
            },
            {
              "createdAt": "2022-05-24T00:18:49Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1135264761"
            },
            {
              "createdAt": "2022-05-25T23:55:42Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1137990156"
            },
            {
              "createdAt": "2022-05-26T13:50:07Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1028#issuecomment-1138600535"
            }
          ]
        }
      },
      {
        "title": "[Chore] Add My-Work-Action",
        "url": "https://github.com/github/accessibility/issues/1032",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-04-25T19:38:32Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1032#issuecomment-1108964181"
            },
            {
              "createdAt": "2022-06-09T17:39:51Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1032#issuecomment-1151413623"
            },
            {
              "createdAt": "2022-06-10T22:18:50Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1032#issuecomment-1152774757"
            },
            {
              "createdAt": "2022-06-10T22:21:02Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1032#issuecomment-1152775669"
            },
            {
              "createdAt": "2022-06-13T21:47:00Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1032#issuecomment-1154471325"
            }
          ]
        }
      },
      {
        "title": "[Test] For adding coach points to issues via Hubot",
        "url": "https://github.com/github/accessibility/issues/1042",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-04-20T18:28:40Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1104289217"
            },
            {
              "createdAt": "2022-04-20T18:34:16Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1104308618"
            },
            {
              "createdAt": "2022-04-20T18:37:25Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1104324092"
            },
            {
              "createdAt": "2022-04-21T10:21:53Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1105022256"
            },
            {
              "createdAt": "2022-04-21T10:22:47Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1105023453"
            },
            {
              "createdAt": "2022-04-21T10:55:12Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1105055010"
            },
            {
              "createdAt": "2022-04-21T10:57:16Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1105056755"
            },
            {
              "createdAt": "2022-04-21T10:58:01Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1105057384"
            },
            {
              "createdAt": "2022-05-12T10:25:35Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1124823469"
            },
            {
              "createdAt": "2022-05-12T10:31:58Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1124829258"
            },
            {
              "createdAt": "2022-05-12T10:34:18Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1124831260"
            },
            {
              "createdAt": "2022-05-12T10:35:04Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1124831885"
            },
            {
              "createdAt": "2022-05-26T11:36:10Z",
              "author": {
                "login": "accessibility-bot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138438245"
            },
            {
              "createdAt": "2022-05-26T11:36:19Z",
              "author": {
                "login": "accessibility-bot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138438359"
            },
            {
              "createdAt": "2022-05-26T11:42:35Z",
              "author": {
                "login": "hubot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138443363"
            },
            {
              "createdAt": "2022-05-26T11:43:28Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138443993"
            },
            {
              "createdAt": "2022-05-26T11:44:09Z",
              "author": {
                "login": "accessibility-bot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138444508"
            },
            {
              "createdAt": "2022-05-26T11:44:17Z",
              "author": {
                "login": "accessibility-bot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138444604"
            },
            {
              "createdAt": "2022-05-26T13:44:01Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138595267"
            },
            {
              "createdAt": "2022-05-26T13:44:53Z",
              "author": {
                "login": "accessibility-bot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138596060"
            },
            {
              "createdAt": "2022-05-26T13:46:10Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138597205"
            },
            {
              "createdAt": "2022-05-26T14:04:52Z",
              "author": {
                "login": "accessibility-bot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138614479"
            },
            {
              "createdAt": "2022-05-26T14:05:01Z",
              "author": {
                "login": "accessibility-bot"
              },
              "url": "https://github.com/github/accessibility/issues/1042#issuecomment-1138614620"
            }
          ]
        }
      },
      {
        "title": "[Story] [Documentation] Checkboxes versus Toggle Buttons: When to use which",
        "url": "https://github.com/github/accessibility/issues/1048",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "Add Closed label to open Discussions that are answered / inactive",
        "url": "https://github.com/github/accessibility/issues/1050",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-03T15:42:00Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1050#issuecomment-1116246956"
            },
            {
              "createdAt": "2022-05-09T20:49:36Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1050#issuecomment-1121567934"
            }
          ]
        }
      },
      {
        "title": "[Sprint Overview] FY22 Q4 Sprint 2",
        "url": "https://github.com/github/accessibility/issues/1060",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-04-20T21:04:37Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1104454644"
            },
            {
              "createdAt": "2022-04-20T21:08:43Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1104457722"
            },
            {
              "createdAt": "2022-04-20T21:12:05Z",
              "author": {
                "login": "ichelsea"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1104460085"
            },
            {
              "createdAt": "2022-04-20T23:37:57Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1104554560"
            },
            {
              "createdAt": "2022-04-21T00:31:15Z",
              "author": {
                "login": "benjiallen"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1104579880"
            },
            {
              "createdAt": "2022-04-21T10:11:57Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1105008717"
            },
            {
              "createdAt": "2022-04-22T12:53:47Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1106485294"
            },
            {
              "createdAt": "2022-04-22T14:00:17Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1106546327"
            },
            {
              "createdAt": "2022-04-25T11:32:51Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1108455154"
            },
            {
              "createdAt": "2022-04-25T15:33:03Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1108728862"
            },
            {
              "createdAt": "2022-04-28T17:12:49Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1112457166"
            },
            {
              "createdAt": "2022-05-02T18:25:18Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1115219933"
            },
            {
              "createdAt": "2022-05-03T22:56:02Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1116735584"
            },
            {
              "createdAt": "2022-05-04T20:57:48Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1117932089"
            },
            {
              "createdAt": "2022-05-09T14:25:26Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1060#issuecomment-1121173802"
            }
          ]
        }
      },
      {
        "title": "[Meeting] Office Hours May 4, 2022",
        "url": "https://github.com/github/accessibility/issues/1061",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-04T16:35:39Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1061#issuecomment-1117565552"
            },
            {
              "createdAt": "2022-05-05T10:23:30Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1061#issuecomment-1118395639"
            },
            {
              "createdAt": "2022-05-17T16:33:08Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1061#issuecomment-1129081507"
            }
          ]
        }
      },
      {
        "title": "[EPIC] Careers Page Remediation",
        "url": "https://github.com/github/accessibility/issues/1065",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-04-21T18:01:07Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1065#issuecomment-1105548495"
            },
            {
              "createdAt": "2022-04-27T03:20:35Z",
              "author": {
                "login": "TamariaS"
              },
              "url": "https://github.com/github/accessibility/issues/1065#issuecomment-1110490101"
            },
            {
              "createdAt": "2022-04-27T03:42:32Z",
              "author": {
                "login": "jscholes"
              },
              "url": "https://github.com/github/accessibility/issues/1065#issuecomment-1110502147"
            },
            {
              "createdAt": "2022-04-27T14:10:25Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1065#issuecomment-1111051803"
            },
            {
              "createdAt": "2022-06-10T15:43:33Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1065#issuecomment-1152496635"
            }
          ]
        }
      },
      {
        "title": "[Story] [Axe Fundamental] Swap tooltip on Staffbar's accessibility toggle with new one",
        "url": "https://github.com/github/accessibility/issues/1069",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Epic] Coaching in Memex",
        "url": "https://github.com/github/accessibility/issues/1071",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-12T14:12:08Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1071#issuecomment-1125046234"
            },
            {
              "createdAt": "2022-05-19T12:56:17Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1071#issuecomment-1131655178"
            },
            {
              "createdAt": "2022-05-27T06:54:39Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1071#issuecomment-1139338018"
            },
            {
              "createdAt": "2022-05-31T16:04:08Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1071#issuecomment-1142326374"
            },
            {
              "createdAt": "2022-06-01T14:08:57Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1071#issuecomment-1143661357"
            },
            {
              "createdAt": "2022-06-10T08:56:36Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1071#issuecomment-1152136861"
            },
            {
              "createdAt": "2022-06-15T17:18:43Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1071#issuecomment-1156734753"
            }
          ]
        }
      },
      {
        "title": "[Story] [Memex Coaching] Complete a full Accessibility Engineering Component Review for PRC's SelectPanel",
        "url": "https://github.com/github/accessibility/issues/1072",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Audit] npm",
        "url": "https://github.com/github/accessibility/issues/1076",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-19T15:59:50Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1076#issuecomment-1131904749"
            },
            {
              "createdAt": "2022-05-21T02:46:23Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1076#issuecomment-1133514409"
            },
            {
              "createdAt": "2022-05-23T06:16:32Z",
              "author": {
                "login": "narula0781"
              },
              "url": "https://github.com/github/accessibility/issues/1076#issuecomment-1134227062"
            },
            {
              "createdAt": "2022-05-23T06:19:55Z",
              "author": {
                "login": "narula0781"
              },
              "url": "https://github.com/github/accessibility/issues/1076#issuecomment-1134229717"
            },
            {
              "createdAt": "2022-06-09T15:40:11Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1076#issuecomment-1151295191"
            },
            {
              "createdAt": "2022-06-09T15:53:33Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1076#issuecomment-1151313859"
            },
            {
              "createdAt": "2022-06-13T06:53:27Z",
              "author": {
                "login": "20shivangi"
              },
              "url": "https://github.com/github/accessibility/issues/1076#issuecomment-1153541834"
            }
          ]
        }
      },
      {
        "title": "[Story][Axe Fundamental] Better developer experience for surfacing axe issues",
        "url": "https://github.com/github/accessibility/issues/1080",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-04-26T20:55:39Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1080#issuecomment-1110240127"
            },
            {
              "createdAt": "2022-04-28T22:51:07Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1080#issuecomment-1112725165"
            },
            {
              "createdAt": "2022-05-04T21:50:03Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1080#issuecomment-1117968476"
            }
          ]
        }
      },
      {
        "title": "[Story] [Our Progress] Track the average Points of Engagement used on Aware and Partner issues",
        "url": "https://github.com/github/accessibility/issues/1085",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-16T16:54:09Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1085#issuecomment-1127908044"
            },
            {
              "createdAt": "2022-05-20T18:08:16Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1085#issuecomment-1133179230"
            }
          ]
        }
      },
      {
        "title": "[Story] [Audit Metrics] Create a scorecard in our Service Catalog for Accessibility",
        "url": "https://github.com/github/accessibility/issues/1086",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-24T19:19:58Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1136342300"
            },
            {
              "createdAt": "2022-05-24T21:22:48Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1136444805"
            },
            {
              "createdAt": "2022-05-25T15:25:19Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1137435838"
            },
            {
              "createdAt": "2022-05-25T15:50:23Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1137463667"
            },
            {
              "createdAt": "2022-05-25T18:33:21Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1137698514"
            },
            {
              "createdAt": "2022-05-26T00:11:31Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1138003781"
            },
            {
              "createdAt": "2022-05-26T15:49:30Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1138722438"
            },
            {
              "createdAt": "2022-05-27T18:36:09Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1139929087"
            },
            {
              "createdAt": "2022-05-27T18:40:26Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1139932436"
            },
            {
              "createdAt": "2022-06-01T10:59:05Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1086#issuecomment-1143453425"
            }
          ]
        }
      },
      {
        "title": "Secure code training",
        "url": "https://github.com/github/accessibility/issues/1097",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Sprint Overview] FY22 Q4 Sprint 3",
        "url": "https://github.com/github/accessibility/issues/1101",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-02T16:05:43Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1115071726"
            },
            {
              "createdAt": "2022-05-02T16:59:40Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1115123269"
            },
            {
              "createdAt": "2022-05-04T09:02:21Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1117080882"
            },
            {
              "createdAt": "2022-05-04T14:04:19Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1117354578"
            },
            {
              "createdAt": "2022-05-05T14:43:57Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1118641965"
            },
            {
              "createdAt": "2022-05-07T23:02:19Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1120313262"
            },
            {
              "createdAt": "2022-05-09T12:33:29Z",
              "author": {
                "login": "benjiallen"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1121040851"
            },
            {
              "createdAt": "2022-05-09T14:24:47Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1121172888"
            },
            {
              "createdAt": "2022-05-09T14:46:16Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1121200217"
            },
            {
              "createdAt": "2022-05-12T21:50:56Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1125452637"
            },
            {
              "createdAt": "2022-05-17T22:42:59Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1129391929"
            },
            {
              "createdAt": "2022-05-23T14:34:47Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1134757900"
            },
            {
              "createdAt": "2022-05-23T14:34:48Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1101#issuecomment-1134757927"
            }
          ]
        }
      },
      {
        "title": "[Story][Axe Fundamental] Add docs: how do I make a custom axe rule? ",
        "url": "https://github.com/github/accessibility/issues/1102",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Meeting] Office Hours May 18, 2022",
        "url": "https://github.com/github/accessibility/issues/1104",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Deep-dive] Topic: Audio Descriptions and Accessible Video Content",
        "url": "https://github.com/github/accessibility/issues/1105",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-18T18:29:59Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1105#issuecomment-1130369534"
            }
          ]
        }
      },
      {
        "title": "[Story] [React Framework] Evaluate the announcements of navigating from one page to the next",
        "url": "https://github.com/github/accessibility/issues/1108",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-24T08:11:12Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1108#issuecomment-1135550287"
            },
            {
              "createdAt": "2022-05-30T15:31:37Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1108#issuecomment-1141284181"
            },
            {
              "createdAt": "2022-05-31T19:17:35Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1108#issuecomment-1142549671"
            },
            {
              "createdAt": "2022-06-07T11:42:12Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1108#issuecomment-1148553280"
            }
          ]
        }
      },
      {
        "title": "[Post mortem] Axe and performance issues",
        "url": "https://github.com/github/accessibility/issues/1110",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-05T18:08:46Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1110#issuecomment-1118895459"
            }
          ]
        }
      },
      {
        "title": "[Story] [React Framework] Ensure dynamic (state-driven) content changes are correctly announced from the framework level (no url changes)",
        "url": "https://github.com/github/accessibility/issues/1111",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-30T15:52:37Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1111#issuecomment-1141301402"
            },
            {
              "createdAt": "2022-05-31T18:59:59Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1111#issuecomment-1142535081"
            },
            {
              "createdAt": "2022-06-01T15:18:43Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1111#issuecomment-1143745637"
            },
            {
              "createdAt": "2022-06-03T13:04:19Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1111#issuecomment-1145942902"
            },
            {
              "createdAt": "2022-06-07T11:42:46Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1111#issuecomment-1148553884"
            }
          ]
        }
      },
      {
        "title": "[Story] [React Framework] Ensure Error 400 and 500 pages are correctly announced",
        "url": "https://github.com/github/accessibility/issues/1112",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-09T12:51:06Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1112#issuecomment-1151080379"
            },
            {
              "createdAt": "2022-06-10T10:28:43Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1112#issuecomment-1152217463"
            }
          ]
        }
      },
      {
        "title": "[Review Request] [React Framework] Review the GitHub Header and ensure it meets all Accessibility requirements",
        "url": "https://github.com/github/accessibility/issues/1113",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-24T15:37:03Z",
              "author": {
                "login": "jscholes"
              },
              "url": "https://github.com/github/accessibility/issues/1113#issuecomment-1136085756"
            },
            {
              "createdAt": "2022-05-24T16:09:29Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1113#issuecomment-1136121914"
            }
          ]
        }
      },
      {
        "title": "[Story][Axe Fundamentals] Gather metrics on axe performance on different GitHub pages",
        "url": "https://github.com/github/accessibility/issues/1125",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-05T21:05:13Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1119045099"
            },
            {
              "createdAt": "2022-05-05T21:17:49Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1119054237"
            },
            {
              "createdAt": "2022-05-05T22:21:43Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1119096924"
            },
            {
              "createdAt": "2022-05-06T10:57:01Z",
              "author": {
                "login": "keithamus"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1119494270"
            },
            {
              "createdAt": "2022-05-09T17:41:17Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1121390605"
            },
            {
              "createdAt": "2022-05-09T21:36:41Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1121607163"
            },
            {
              "createdAt": "2022-05-20T17:47:43Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1133164142"
            },
            {
              "createdAt": "2022-05-31T17:09:29Z",
              "author": {
                "login": "benjiallen"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1142397491"
            },
            {
              "createdAt": "2022-06-07T09:16:36Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1148412311"
            },
            {
              "createdAt": "2022-06-07T21:39:36Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1125#issuecomment-1149195493"
            }
          ]
        }
      },
      {
        "title": "SSPA enrollment for vendors is a risk for continuing engagement with PAC",
        "url": "https://github.com/github/accessibility/issues/1129",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-04T03:58:17Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1129#issuecomment-1146521829"
            }
          ]
        }
      },
      {
        "title": "Meeting Notes - Meet the User research team",
        "url": "https://github.com/github/accessibility/issues/1131",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-05T19:35:19Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1131#issuecomment-1118974965"
            },
            {
              "createdAt": "2022-05-05T19:39:50Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1131#issuecomment-1118978184"
            },
            {
              "createdAt": "2022-05-05T21:44:57Z",
              "author": {
                "login": "realkimpossible"
              },
              "url": "https://github.com/github/accessibility/issues/1131#issuecomment-1119074908"
            }
          ]
        }
      },
      {
        "title": "[Story] Create a Hub post about  Global Accessibility Awareness Day",
        "url": "https://github.com/github/accessibility/issues/1134",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] Update Accessibility docs with new The Hub links after new top-level URL is \"EPD\"",
        "url": "https://github.com/github/accessibility/issues/1137",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] [Coaching Metrics] Modify 3 interfaces to provide commented out javascript object to be used by totaling workflow",
        "url": "https://github.com/github/accessibility/issues/1139",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-10T14:10:50Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1139#issuecomment-1122451101"
            },
            {
              "createdAt": "2022-05-18T21:10:50Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1139#issuecomment-1130554277"
            },
            {
              "createdAt": "2022-05-19T09:43:29Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1139#issuecomment-1131477557"
            },
            {
              "createdAt": "2022-05-19T10:20:04Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1139#issuecomment-1131511610"
            },
            {
              "createdAt": "2022-05-20T14:44:26Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1139#issuecomment-1132990725"
            }
          ]
        }
      },
      {
        "title": "[Story][Coaching Metrics] Add documentation for how to add our engagement tools to any given repository",
        "url": "https://github.com/github/accessibility/issues/1140",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-13T19:44:23Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1140#issuecomment-1126399570"
            }
          ]
        }
      },
      {
        "title": "[Story] Deprecate the experimental Autocomplete from dotcom in favor of PVC Autocomplete",
        "url": "https://github.com/github/accessibility/issues/1141",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-20T17:46:09Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1141#issuecomment-1133162876"
            },
            {
              "createdAt": "2022-05-20T17:48:40Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1141#issuecomment-1133164863"
            }
          ]
        }
      },
      {
        "title": "[Story] [Documentation] How to be a Coach / What to expect from Coaches",
        "url": "https://github.com/github/accessibility/issues/1148",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] [Axe Fundamental] Write a The Hub post announcing what Axe is and how to reach us about your experience",
        "url": "https://github.com/github/accessibility/issues/1154",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-15T15:56:06Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1154#issuecomment-1156649456"
            },
            {
              "createdAt": "2022-06-15T17:25:12Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1154#issuecomment-1156740684"
            },
            {
              "createdAt": "2022-06-15T17:34:46Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1154#issuecomment-1156749764"
            }
          ]
        }
      },
      {
        "title": "[Story] [Our Progress] Track the percent of `flag-hcl`-labelled issues in our audits",
        "url": "https://github.com/github/accessibility/issues/1158",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-23T17:34:58Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1158#issuecomment-1134953772"
            }
          ]
        }
      },
      {
        "title": "[Story] [Our Progress] Track the number of Accessibility linting (erblint) rules in dotcom",
        "url": "https://github.com/github/accessibility/issues/1159",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-13T14:54:57Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1159#issuecomment-1126146816"
            },
            {
              "createdAt": "2022-05-17T21:18:30Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1159#issuecomment-1129326929"
            },
            {
              "createdAt": "2022-05-18T10:32:44Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1159#issuecomment-1129844786"
            },
            {
              "createdAt": "2022-05-24T16:09:32Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1159#issuecomment-1136121972"
            },
            {
              "createdAt": "2022-05-24T21:41:14Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1159#issuecomment-1136458715"
            }
          ]
        }
      },
      {
        "title": "[Story] [Our Progress] Track the satisfaction reported from our documentation to guide areas of improvement",
        "url": "https://github.com/github/accessibility/issues/1160",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-07T17:37:28Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1160#issuecomment-1148975112"
            },
            {
              "createdAt": "2022-06-07T17:52:54Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1160#issuecomment-1148990898"
            },
            {
              "createdAt": "2022-06-07T17:57:45Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1160#issuecomment-1148995088"
            }
          ]
        }
      },
      {
        "title": "[Review Request] [React Framework] Review the GitHub Footer and ensure it meets all Accessibility requirements",
        "url": "https://github.com/github/accessibility/issues/1161",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-17T17:59:49Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1161#issuecomment-1129159501"
            },
            {
              "createdAt": "2022-06-02T21:11:37Z",
              "author": {
                "login": "jscholes"
              },
              "url": "https://github.com/github/accessibility/issues/1161#issuecomment-1145345475"
            },
            {
              "createdAt": "2022-06-02T22:41:04Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1161#issuecomment-1145411431"
            },
            {
              "createdAt": "2022-06-06T16:59:19Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1161#issuecomment-1147669545"
            }
          ]
        }
      },
      {
        "title": "[Review Request] [React Framework] Ensure that the Layout adheres to GitHub design standards and content between the Header and Footer responds to zooming and scaling",
        "url": "https://github.com/github/accessibility/issues/1162",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Sprint Overview] FY22 Q4 Sprint 4",
        "url": "https://github.com/github/accessibility/issues/1165",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-17T19:36:37Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1129244818"
            },
            {
              "createdAt": "2022-05-18T11:22:06Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1129886329"
            },
            {
              "createdAt": "2022-05-19T15:24:34Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1131865854"
            },
            {
              "createdAt": "2022-05-23T11:02:18Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1134527593"
            },
            {
              "createdAt": "2022-05-23T15:58:24Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1134856525"
            },
            {
              "createdAt": "2022-05-27T22:11:41Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1140073016"
            },
            {
              "createdAt": "2022-05-31T18:34:05Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1142514152"
            },
            {
              "createdAt": "2022-06-02T21:05:23Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1145340745"
            },
            {
              "createdAt": "2022-06-06T15:04:53Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1165#issuecomment-1147550823"
            }
          ]
        }
      },
      {
        "title": "[Meeting] Office Hours June 1, 2022",
        "url": "https://github.com/github/accessibility/issues/1166",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Meeting] Office Hours May 25, 2022",
        "url": "https://github.com/github/accessibility/issues/1167",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-27T10:36:15Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1167#issuecomment-1139496249"
            }
          ]
        }
      },
      {
        "title": "[Async Meeting] Security Center Refining Request",
        "url": "https://github.com/github/accessibility/issues/1169",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-25T21:16:24Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1169#issuecomment-1137855988"
            },
            {
              "createdAt": "2022-05-31T16:21:53Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1169#issuecomment-1142345706"
            }
          ]
        }
      },
      {
        "title": "[Deep-dive] Topic: More on Markdown: Heading order in Issues, Discussions, PR Descriptions etc.",
        "url": "https://github.com/github/accessibility/issues/1170",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-20T09:51:30Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1170#issuecomment-1132706580"
            },
            {
              "createdAt": "2022-05-23T12:18:18Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1170#issuecomment-1134602254"
            },
            {
              "createdAt": "2022-05-23T12:20:41Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1170#issuecomment-1134604776"
            },
            {
              "createdAt": "2022-05-24T19:14:56Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1170#issuecomment-1136337944"
            },
            {
              "createdAt": "2022-05-25T17:53:42Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1170#issuecomment-1137642975"
            },
            {
              "createdAt": "2022-06-01T17:46:00Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1170#issuecomment-1143945718"
            }
          ]
        }
      },
      {
        "title": "[Deep-dive] Topic: Demo of using GitHub with a screen reader and how to pair with a blind developer",
        "url": "https://github.com/github/accessibility/issues/1171",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-18T18:35:28Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1171#issuecomment-1130374421"
            },
            {
              "createdAt": "2022-05-24T21:53:45Z",
              "author": {
                "login": "jscholes"
              },
              "url": "https://github.com/github/accessibility/issues/1171#issuecomment-1136466764"
            },
            {
              "createdAt": "2022-06-01T15:44:15Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1171#issuecomment-1143776229"
            },
            {
              "createdAt": "2022-06-01T17:37:34Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1171#issuecomment-1143937384"
            },
            {
              "createdAt": "2022-06-01T17:50:33Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1171#issuecomment-1143952122"
            },
            {
              "createdAt": "2022-06-08T15:48:21Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1171#issuecomment-1150093414"
            }
          ]
        }
      },
      {
        "title": "[Deep-dive] Topic: WCAG 2.2 and 3.0 -- What's coming up next?",
        "url": "https://github.com/github/accessibility/issues/1173",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-15T16:29:52Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1173#issuecomment-1156685490"
            },
            {
              "createdAt": "2022-06-15T16:59:14Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1173#issuecomment-1156716571"
            },
            {
              "createdAt": "2022-06-15T17:52:23Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1173#issuecomment-1156764995"
            }
          ]
        }
      },
      {
        "title": "[Deep-dive] Topic: Which accessibility resources are trustworthy, and which could use our help?",
        "url": "https://github.com/github/accessibility/issues/1174",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-03T15:34:30Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1146082969"
            },
            {
              "createdAt": "2022-06-08T14:05:08Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1149964546"
            },
            {
              "createdAt": "2022-06-08T15:04:02Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1150041041"
            },
            {
              "createdAt": "2022-06-08T15:05:03Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1150042305"
            },
            {
              "createdAt": "2022-06-08T15:35:50Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1150079242"
            },
            {
              "createdAt": "2022-06-08T15:39:45Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1150083493"
            },
            {
              "createdAt": "2022-06-08T15:41:30Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1150085561"
            },
            {
              "createdAt": "2022-06-08T15:50:48Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1174#issuecomment-1150096158"
            }
          ]
        }
      },
      {
        "title": "[Deep-dive] Topic: Accessibility and Legal: An overview",
        "url": "https://github.com/github/accessibility/issues/1175",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Audit] GitHub Copilot, Plugins across Supported IDEs",
        "url": "https://github.com/github/accessibility/issues/1179",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-19T09:50:31Z",
              "author": {
                "login": "SmallLemur"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1131484175"
            },
            {
              "createdAt": "2022-05-20T19:30:06Z",
              "author": {
                "login": "hsenag"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1133250847"
            },
            {
              "createdAt": "2022-05-28T03:11:13Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1140152372"
            },
            {
              "createdAt": "2022-05-28T06:35:56Z",
              "author": {
                "login": "hsenag"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1140187139"
            },
            {
              "createdAt": "2022-06-13T07:39:09Z",
              "author": {
                "login": "SmallLemur"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1153580546"
            },
            {
              "createdAt": "2022-06-13T16:06:08Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1154107621"
            },
            {
              "createdAt": "2022-06-13T23:28:21Z",
              "author": {
                "login": "benjiallen"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1154546522"
            },
            {
              "createdAt": "2022-06-14T10:24:12Z",
              "author": {
                "login": "SmallLemur"
              },
              "url": "https://github.com/github/accessibility/issues/1179#issuecomment-1155000173"
            }
          ]
        }
      },
      {
        "title": "[Audit] Insights, Insights for Projects 📈",
        "url": "https://github.com/github/accessibility/issues/1181",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-31T20:05:39Z",
              "author": {
                "login": "cleverfoo"
              },
              "url": "https://github.com/github/accessibility/issues/1181#issuecomment-1142591392"
            },
            {
              "createdAt": "2022-05-31T20:21:36Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1181#issuecomment-1142604352"
            },
            {
              "createdAt": "2022-06-10T17:20:14Z",
              "author": {
                "login": "cleverfoo"
              },
              "url": "https://github.com/github/accessibility/issues/1181#issuecomment-1152577667"
            }
          ]
        }
      },
      {
        "title": "[Story][Bug][Axe Fundamentals] axe causes scroll to snap back",
        "url": "https://github.com/github/accessibility/issues/1182",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T22:05:53Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1182#issuecomment-1150462529"
            }
          ]
        }
      },
      {
        "title": "[Story][Axe Fundamentals] Additional adjustments based on Datadog metrics ",
        "url": "https://github.com/github/accessibility/issues/1191",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-26T15:21:04Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1191#issuecomment-1138693677"
            }
          ]
        }
      },
      {
        "title": "[Story][Axe fundamentals] Sync with Web Systems",
        "url": "https://github.com/github/accessibility/issues/1192",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-01T20:05:56Z",
              "author": {
                "login": "manuelpuyol"
              },
              "url": "https://github.com/github/accessibility/issues/1192#issuecomment-1144081880"
            },
            {
              "createdAt": "2022-06-01T20:48:47Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1192#issuecomment-1144120125"
            }
          ]
        }
      },
      {
        "title": "[Story] [Our Progress] Update audit labels to use for metrics",
        "url": "https://github.com/github/accessibility/issues/1196",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-24T17:08:28Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1196#issuecomment-1136201464"
            }
          ]
        }
      },
      {
        "title": "[Story] Create workflow to add `a11y role: <role>` label to issues",
        "url": "https://github.com/github/accessibility/issues/1203",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T11:30:08Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1203#issuecomment-1149797003"
            },
            {
              "createdAt": "2022-06-08T19:59:15Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1203#issuecomment-1150344971"
            }
          ]
        }
      },
      {
        "title": "Remove aria label on the Accessibility Scan toggle's icon Button",
        "url": "https://github.com/github/accessibility/issues/1205",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Design Story] [Command palette] Entry point",
        "url": "https://github.com/github/accessibility/issues/1207",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-24T22:49:44Z",
              "author": {
                "login": "ichelsea"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1136501616"
            },
            {
              "createdAt": "2022-05-25T14:11:08Z",
              "author": {
                "login": "danielguillan"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137300792"
            },
            {
              "createdAt": "2022-05-25T15:10:53Z",
              "author": {
                "login": "Attamusc"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137414712"
            },
            {
              "createdAt": "2022-05-25T16:17:05Z",
              "author": {
                "login": "danielguillan"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137492204"
            },
            {
              "createdAt": "2022-05-25T16:25:14Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137500699"
            },
            {
              "createdAt": "2022-05-25T17:28:36Z",
              "author": {
                "login": "ichelsea"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137600865"
            },
            {
              "createdAt": "2022-05-25T19:01:16Z",
              "author": {
                "login": "vdepizzol"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137734485"
            },
            {
              "createdAt": "2022-05-25T19:07:16Z",
              "author": {
                "login": "ichelsea"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137747039"
            },
            {
              "createdAt": "2022-05-25T19:29:36Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137768171"
            },
            {
              "createdAt": "2022-05-25T20:00:02Z",
              "author": {
                "login": "tallys"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137793052"
            },
            {
              "createdAt": "2022-05-25T20:07:28Z",
              "author": {
                "login": "ichelsea"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137800068"
            },
            {
              "createdAt": "2022-05-25T20:20:48Z",
              "author": {
                "login": "alliethu"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137811325"
            },
            {
              "createdAt": "2022-05-25T21:39:16Z",
              "author": {
                "login": "alliethu"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137871796"
            },
            {
              "createdAt": "2022-05-25T22:12:58Z",
              "author": {
                "login": "jscholes"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137894339"
            },
            {
              "createdAt": "2022-05-25T22:22:25Z",
              "author": {
                "login": "vdepizzol"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1137899955"
            },
            {
              "createdAt": "2022-05-26T08:04:40Z",
              "author": {
                "login": "danielguillan"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1138275415"
            },
            {
              "createdAt": "2022-05-26T17:27:23Z",
              "author": {
                "login": "maximedegreve"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1138825745"
            },
            {
              "createdAt": "2022-06-01T15:51:07Z",
              "author": {
                "login": "justinbyo"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1143784727"
            },
            {
              "createdAt": "2022-06-01T22:29:37Z",
              "author": {
                "login": "jscholes"
              },
              "url": "https://github.com/github/accessibility/issues/1207#issuecomment-1144206551"
            }
          ]
        }
      },
      {
        "title": "[Story][Axe fundamentals] Connect Datadog events to a Scorecard score",
        "url": "https://github.com/github/accessibility/issues/1212",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-26T18:42:41Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1212#issuecomment-1138897021"
            },
            {
              "createdAt": "2022-05-26T19:33:19Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1212#issuecomment-1138937473"
            }
          ]
        }
      },
      {
        "title": "[Story] [Audit Metrics] Automate the total count of Audit issues within github/github and github/accessibility-audits and ensure the number displays on the Scorecard",
        "url": "https://github.com/github/accessibility/issues/1213",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-31T18:32:52Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1213#issuecomment-1142513027"
            },
            {
              "createdAt": "2022-06-08T15:40:43Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1213#issuecomment-1150084641"
            }
          ]
        }
      },
      {
        "title": "[Story] [Audit Metrics] Automate the total count of Audit issues that have gone stale (>90 days with no remediation)",
        "url": "https://github.com/github/accessibility/issues/1214",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T17:21:15Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1150189682"
            },
            {
              "createdAt": "2022-06-08T18:56:26Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1150280510"
            },
            {
              "createdAt": "2022-06-09T10:26:57Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1150949104"
            },
            {
              "createdAt": "2022-06-09T16:03:32Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1151324699"
            },
            {
              "createdAt": "2022-06-09T17:37:48Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1151411729"
            },
            {
              "createdAt": "2022-06-09T18:03:16Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1151437195"
            },
            {
              "createdAt": "2022-06-15T15:06:24Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1156592534"
            },
            {
              "createdAt": "2022-06-15T15:08:34Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1156595107"
            },
            {
              "createdAt": "2022-06-15T15:31:49Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1156622061"
            },
            {
              "createdAt": "2022-06-15T17:57:42Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1214#issuecomment-1156769538"
            }
          ]
        }
      },
      {
        "title": "[Story] [Command Palette] Unplanned coaching tracking issue",
        "url": "https://github.com/github/accessibility/issues/1216",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-27T12:56:26Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1216#issuecomment-1139593568"
            }
          ]
        }
      },
      {
        "title": "[Spike][Axe Fundamental] Explore alternative scanner to meet our runtime performance needs",
        "url": "https://github.com/github/accessibility/issues/1220",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-10T21:24:31Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1220#issuecomment-1152748622"
            },
            {
              "createdAt": "2022-06-10T21:44:01Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1220#issuecomment-1152758125"
            },
            {
              "createdAt": "2022-06-10T23:12:46Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1220#issuecomment-1152793946"
            },
            {
              "createdAt": "2022-06-14T13:48:15Z",
              "author": {
                "login": "mislav"
              },
              "url": "https://github.com/github/accessibility/issues/1220#issuecomment-1155211410"
            },
            {
              "createdAt": "2022-06-16T22:11:11Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1220#issuecomment-1158182717"
            }
          ]
        }
      },
      {
        "title": "[Story] [Axe Fundamental] Write a new updated ADR to describe the changes to Axe and why we made them",
        "url": "https://github.com/github/accessibility/issues/1221",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story][Axe Fundamental] Set up a Datadog monitoring alert to ping #accessibility-ops when performance is bad",
        "url": "https://github.com/github/accessibility/issues/1222",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-01T18:38:01Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1222#issuecomment-1144001025"
            },
            {
              "createdAt": "2022-06-01T18:43:02Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1222#issuecomment-1144005266"
            }
          ]
        }
      },
      {
        "title": "Task - Review the Accessibility for Web Design Training",
        "url": "https://github.com/github/accessibility/issues/1223",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[A11y Design review] Projects Omnibar",
        "url": "https://github.com/github/accessibility/issues/1225",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-09T20:51:40Z",
              "author": {
                "login": "ichelsea"
              },
              "url": "https://github.com/github/accessibility/issues/1225#issuecomment-1151611748"
            },
            {
              "createdAt": "2022-06-10T12:20:18Z",
              "author": {
                "login": "six7"
              },
              "url": "https://github.com/github/accessibility/issues/1225#issuecomment-1152300169"
            }
          ]
        }
      },
      {
        "title": "[A11y Design review] Navigation 2.0",
        "url": "https://github.com/github/accessibility/issues/1226",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-02T19:30:53Z",
              "author": {
                "login": "justinbyo"
              },
              "url": "https://github.com/github/accessibility/issues/1226#issuecomment-1145256787"
            },
            {
              "createdAt": "2022-06-03T02:58:00Z",
              "author": {
                "login": "vdepizzol"
              },
              "url": "https://github.com/github/accessibility/issues/1226#issuecomment-1145536608"
            },
            {
              "createdAt": "2022-06-03T08:35:46Z",
              "author": {
                "login": "danielguillan"
              },
              "url": "https://github.com/github/accessibility/issues/1226#issuecomment-1145731999"
            }
          ]
        }
      },
      {
        "title": "[Story] [Audit Metrics] Add linting violations from Datadog into the scorecard and attach to each owning service",
        "url": "https://github.com/github/accessibility/issues/1227",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-05-31T18:41:27Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1227#issuecomment-1142520142"
            },
            {
              "createdAt": "2022-05-31T22:14:10Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1227#issuecomment-1142688686"
            },
            {
              "createdAt": "2022-05-31T23:52:04Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1227#issuecomment-1142774962"
            },
            {
              "createdAt": "2022-06-01T18:40:33Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1227#issuecomment-1144003200"
            }
          ]
        }
      },
      {
        "title": "[Meeting] Office Hours June 8, 2022",
        "url": "https://github.com/github/accessibility/issues/1229",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-09T18:29:36Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1229#issuecomment-1151465717"
            }
          ]
        }
      },
      {
        "title": "[Meeting] Office Hours June 15, 2022",
        "url": "https://github.com/github/accessibility/issues/1230",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Sprint Overview] FY22 Q4 Sprint 5",
        "url": "https://github.com/github/accessibility/issues/1231",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-02T16:31:33Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1145069666"
            },
            {
              "createdAt": "2022-06-06T15:05:57Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1147552013"
            },
            {
              "createdAt": "2022-06-06T15:09:37Z",
              "author": {
                "login": "benjiallen"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1147556014"
            },
            {
              "createdAt": "2022-06-06T15:25:46Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1147577212"
            },
            {
              "createdAt": "2022-06-06T16:24:37Z",
              "author": {
                "login": "ichelsea"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1147638691"
            },
            {
              "createdAt": "2022-06-06T21:02:39Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1147927918"
            },
            {
              "createdAt": "2022-06-07T10:38:21Z",
              "author": {
                "login": "bolonio"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1148494970"
            },
            {
              "createdAt": "2022-06-15T18:54:36Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1231#issuecomment-1156816527"
            }
          ]
        }
      },
      {
        "title": "Request First Responder app to be added to new accessibility-owned repos",
        "url": "https://github.com/github/accessibility/issues/1232",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-01T19:26:41Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1232#issuecomment-1144046407"
            },
            {
              "createdAt": "2022-06-02T09:31:11Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1232#issuecomment-1144650788"
            },
            {
              "createdAt": "2022-06-02T10:12:22Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1232#issuecomment-1144687717"
            },
            {
              "createdAt": "2022-06-03T02:13:17Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1232#issuecomment-1145519471"
            },
            {
              "createdAt": "2022-06-03T10:25:02Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1232#issuecomment-1145822203"
            },
            {
              "createdAt": "2022-06-03T10:36:11Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1232#issuecomment-1145830332"
            },
            {
              "createdAt": "2022-06-06T10:16:14Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1232#issuecomment-1147288828"
            }
          ]
        }
      },
      {
        "title": "[Story] [Audit Metrics] Finalize linter requirements in scorecard",
        "url": "https://github.com/github/accessibility/issues/1238",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-02T23:40:08Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1238#issuecomment-1145440136"
            }
          ]
        }
      },
      {
        "title": "[Audit] Blackbird, Blackbird search in dotcom",
        "url": "https://github.com/github/accessibility/issues/1239",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-07T21:51:32Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1149205028"
            },
            {
              "createdAt": "2022-06-07T22:30:14Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1149236532"
            },
            {
              "createdAt": "2022-06-08T22:44:55Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1150485746"
            },
            {
              "createdAt": "2022-06-13T12:28:33Z",
              "author": {
                "login": "owenniblock"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1153853799"
            },
            {
              "createdAt": "2022-06-13T13:43:00Z",
              "author": {
                "login": "colinwm"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1153932569"
            },
            {
              "createdAt": "2022-06-14T16:19:10Z",
              "author": {
                "login": "ndonewar"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1155416489"
            },
            {
              "createdAt": "2022-06-15T17:50:07Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1156763085"
            },
            {
              "createdAt": "2022-06-16T14:02:22Z",
              "author": {
                "login": "ndonewar"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1157698288"
            },
            {
              "createdAt": "2022-06-16T14:52:14Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1157752152"
            },
            {
              "createdAt": "2022-06-16T15:07:41Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1157770271"
            },
            {
              "createdAt": "2022-06-16T15:24:53Z",
              "author": {
                "login": "ndonewar"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1157792337"
            },
            {
              "createdAt": "2022-06-16T15:30:21Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1157798281"
            },
            {
              "createdAt": "2022-06-16T16:03:34Z",
              "author": {
                "login": "ndonewar"
              },
              "url": "https://github.com/github/accessibility/issues/1239#issuecomment-1157847023"
            }
          ]
        }
      },
      {
        "title": "Automation when `accessibility-reviewers` group is added as a PR reviewer",
        "url": "https://github.com/github/accessibility/issues/1244",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-02T21:32:46Z",
              "author": {
                "login": "lindseywild"
              },
              "url": "https://github.com/github/accessibility/issues/1244#issuecomment-1145363146"
            }
          ]
        }
      },
      {
        "title": "[WIP] [Story] [React Framework] Break up our Manual Testing doc to allow for more granular deep linking and add in Screen Reader cheat sheets",
        "url": "https://github.com/github/accessibility/issues/1259",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] [Memex Coaching] Write up document describing when to intercept the browser's default context menu and the pros / cons of doing so",
        "url": "https://github.com/github/accessibility/issues/1266",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[WIP] [Epic] Coaching in PVC's Forms Framework",
        "url": "https://github.com/github/accessibility/issues/1267",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[A11y Design review] Discoverability of existing forks",
        "url": "https://github.com/github/accessibility/issues/1270",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "Education Global Campus Refining Request",
        "url": "https://github.com/github/accessibility/issues/1272",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T16:38:41Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1272#issuecomment-1150146027"
            },
            {
              "createdAt": "2022-06-09T20:29:37Z",
              "author": {
                "login": "alebourne"
              },
              "url": "https://github.com/github/accessibility/issues/1272#issuecomment-1151588146"
            },
            {
              "createdAt": "2022-06-14T17:23:57Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1272#issuecomment-1155488986"
            },
            {
              "createdAt": "2022-06-15T14:29:47Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1272#issuecomment-1156548529"
            },
            {
              "createdAt": "2022-06-15T14:51:22Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1272#issuecomment-1156574691"
            },
            {
              "createdAt": "2022-06-15T16:36:56Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1272#issuecomment-1156692919"
            }
          ]
        }
      },
      {
        "title": "[Story] Chatops to easily add a quick recommendation from Slack to our internal documentation",
        "url": "https://github.com/github/accessibility/issues/1276",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-13T21:51:46Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1276#issuecomment-1154475247"
            }
          ]
        }
      },
      {
        "title": "[A11y Design review] Circle progress bar on the explore tool",
        "url": "https://github.com/github/accessibility/issues/1277",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T14:51:53Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1277#issuecomment-1150026124"
            },
            {
              "createdAt": "2022-06-08T18:03:17Z",
              "author": {
                "login": "dthoma1"
              },
              "url": "https://github.com/github/accessibility/issues/1277#issuecomment-1150228572"
            }
          ]
        }
      },
      {
        "title": "🤖 Your Howie labels in your repository will be standardized in coming weeks",
        "url": "https://github.com/github/accessibility/issues/1281",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T13:58:38Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1281#issuecomment-1149956049"
            }
          ]
        }
      },
      {
        "title": "[Story] Assess publicly available documentation",
        "url": "https://github.com/github/accessibility/issues/1283",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T17:16:17Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1283#issuecomment-1150184097"
            }
          ]
        }
      },
      {
        "title": "[Story][Axe fundamentals] Re-enable axe in development",
        "url": "https://github.com/github/accessibility/issues/1286",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-08T22:24:08Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1286#issuecomment-1150473642"
            }
          ]
        }
      },
      {
        "title": "[Spike] [Command Palette] Investigate using Figma to add wireframes for coaching recommendations",
        "url": "https://github.com/github/accessibility/issues/1288",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] Create team documentation for publishing `erblint-github` gem",
        "url": "https://github.com/github/accessibility/issues/1289",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] Create ERB lint against `DeprecatedComponents`",
        "url": "https://github.com/github/accessibility/issues/1290",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story][Tooling] ERB lint rule against generic link text",
        "url": "https://github.com/github/accessibility/issues/1291",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-16T23:19:39Z",
              "author": {
                "login": "khiga8"
              },
              "url": "https://github.com/github/accessibility/issues/1291#issuecomment-1158255619"
            }
          ]
        }
      },
      {
        "title": "[Story][Tooling] Migrate remaining accessibility rules from dotcom to erblint-github",
        "url": "https://github.com/github/accessibility/issues/1293",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] Investigate support for internal achievements",
        "url": "https://github.com/github/accessibility/issues/1295",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-11T04:41:07Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1295#issuecomment-1152854980"
            },
            {
              "createdAt": "2022-06-11T23:41:05Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1295#issuecomment-1153020190"
            }
          ]
        }
      },
      {
        "title": "[Story] Blog post: So you think you know alt text",
        "url": "https://github.com/github/accessibility/issues/1296",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Batch] memex `visible fields` menu markup and aria issues.",
        "url": "https://github.com/github/accessibility/issues/1297",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] [Fundamentals] Publish v1 of our Scorecard to production!",
        "url": "https://github.com/github/accessibility/issues/1313",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Story] Add Prettier pre-commit hook to Accessibility repo ",
        "url": "https://github.com/github/accessibility/issues/1316",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Sprint Overview] FY22 Q4 Sprint 6",
        "url": "https://github.com/github/accessibility/issues/1320",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-15T17:24:37Z",
              "author": {
                "login": "kendallgassner"
              },
              "url": "https://github.com/github/accessibility/issues/1320#issuecomment-1156740161"
            },
            {
              "createdAt": "2022-06-16T12:14:59Z",
              "author": {
                "login": "andrialexandrou"
              },
              "url": "https://github.com/github/accessibility/issues/1320#issuecomment-1157591921"
            }
          ]
        }
      },
      {
        "title": "[Meeting] Office Hours June 22, 2022",
        "url": "https://github.com/github/accessibility/issues/1321",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Meeting] Office Hours June 29, 2022",
        "url": "https://github.com/github/accessibility/issues/1322",
        "comments": {
          "nodes": []
        }
      },
      {
        "title": "[Async Meeting] Billing Form Refining Request",
        "url": "https://github.com/github/accessibility/issues/1325",
        "comments": {
          "nodes": [
            {
              "createdAt": "2022-06-16T18:21:10Z",
              "author": {
                "login": "inkblotty"
              },
              "url": "https://github.com/github/accessibility/issues/1325#issuecomment-1157998319"
            }
          ]
        }
      }
    ]
  },
  "discussionComments": {
    "nodes": [
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 6, 2022:\n\n⚠️ Tomorrow's [Meeting] Office Hours Apr 6, 2022: Needs a notetaker to volunteer\nAccessibility Team Passion Week - FY22:\nIf you haven't added a comment here on what you're working on this week, please do 🙏  (from comment)\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-06T01:53:21Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2512463"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 8, 2022:\n\n\n⚠️ Tomorrow's [Deep-dive] Topic: Creating Products with Cognitive Disabilities in mind: Needs a leader and a notetaker to volunteer\n\n\n[Async Meeting] Memex Refining Request:\nThe deadline to complete refining is tomorrow. Looking forward to hearing how Refining as a team went in our next Retro :) (from comment)\nAccessibility Team Passion Week - FY22:\nIf you want to demo some of your favorite work from this week, please upload a video and link to it here 😄  (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-08T00:06:46Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2527369"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 9, 2022:\n\n\n[Deep-dive] Topic: ATAG: What is it, and how does it overlap with WCAG?: Needs notes\n\n\n[Meeting] FY22 Q4 Kickoff:\nWe kick off Q4 on Monday! I'll see you all at the meeting to go over our Initiatives, the first Epics we'll tackle, and start Sprint 1. (from comment)\n\n\nAccessibility Team Passion Week - FY22:\nIf you want to demo some of your favorite work from this week, please upload a video and link to it here 😄  (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-09T02:06:45Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2534389"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 11, 2022:\n\n\n[Deep-dive] Topic: ATAG: What is it, and how does it overlap with WCAG?: Needs notes\n\n\n[Meeting] FY22 Q4 Kickoff:\nWe kick off Q4 on Monday! I'll see you all at the meeting to go over our Initiatives, the first Epics we'll tackle, and start Sprint 1. (from comment)\n\n\nAccessibility Team Passion Week - FY22:\nIf you want to demo some of your favorite work from this week, please upload a video and link to it here 😄  (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-11T00:06:58Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2541115"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 12, 2022:\n\n\n⚠️ Deadline: [Deep-dive] Topic: Accessible Command Line Interfaces: Needs a notetaker to volunteer\n\n\n[EPIC] Automate Tracking our Points of Engagement:\nIf you'd like to be DRI of this Epic, it will be a short DRI assignment (~2 weeks) and could be good practice. Please ping @inkblotty if you're interested. (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-12T00:07:06Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2548250"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 13, 2022:\n\n\n[Deep-dive] Topic: Accessible Command Line Interfaces: Needs notes\n\n\n[EPIC] Automate Tracking our Points of Engagement:\nIf you'd like to be DRI of this Epic, it will be a short DRI assignment (~2 weeks) and could be good practice. Please ping @inkblotty if you're interested. (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-13T00:07:23Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2555819"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 14, 2022:\n\n\n[Deep-dive] Topic: Accessible Command Line Interfaces: Needs notes\n\n\n[Announcements] FY22 Q4:\nKendall Gassner has accepted an offer to join the Accessibility team in the Eng III role. She starts May 10. So exciting to see our team continuing to grow 🙌  (from comment)\n\n\n[Async Meeting] Memex Refining Request:\nThere was a mistake in copying over all the issues for Memex Refining. 8 more issues need to be refined by Apr 20. Apologies! Please ping me if you have concerns about meeting the new deadline. 🙏  (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-14T00:07:11Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2563386"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 15, 2022:\n\n\n[Deep-dive] Topic: Accessible Command Line Interfaces: Needs notes\n\n\n[Announcements] FY22 Q4:\nFor those who have time off this weekend, Happy Easter, Happy Passover, and/or Happy Long Weekend. 🎉  (from comment)\n\n\n[Async Meeting] HelpHub Virtual Assistant Refining Request:\nThe HelpHub audit has been completed and there are 19 issues that will need refining. The Handoff meeting with HCL is scheduled for Friday 4/15. The issues will be ready for refining after the recording for the handoff meeting is added to Rewatch. (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-15T00:07:11Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2570303"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 18, 2022:\n\n\n[Deep-dive] Topic: Accessible Command Line Interfaces: Needs notes\n\n\n[Announcements] FY22 Q4:\nFor those who have time off this weekend, Happy Easter, Happy Passover, and/or Happy Long Weekend. 🎉  (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-18T00:06:59Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2583381"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 19, 2022:\n\n⚠️ Deadline: [Deep-dive] Topic: Accessibility of Markdown: Needs a notetaker to volunteer\n⚠️ Deadline: [Meeting] Office Hours April 20, 2022: Needs a notetaker to volunteer\n[Async Meeting] Memex Refining Request:\nReminder that Refining the final set of issues should be completed by Wednesday, April 20. (from comment)\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-19T00:06:53Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2589099"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 20, 2022:\n\n\n[Deep-dive] Topic: Accessibility of Markdown: Needs notes\n\n\n[Async Meeting] Memex Refining Request:\nReminder that Refining the final set of issues should be completed by Wednesday, April 20. (from comment)\n\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-20T00:07:42Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2597192"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 21, 2022:\n\n[Sprint Overview] FY22 Q4 Sprint 2:\nPlease leave a comment on this issue for any time off or other resourcing considerations when preparing for Sprint 2. (from comment)\n[Async Meeting] HelpHub Virtual Assistant Refining Request:\nWe will try group Refining again. Please coordinate with your team to have Refining completed by Wednesday, April 27. 🙏  (from comment)\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-21T00:08:30Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2605260"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 22, 2022:\n\n[Sprint Overview] FY22 Q4 Sprint 2:\nPlease leave a comment on this issue for any time off or other resourcing considerations when preparing for Sprint 2. (from comment)\n[Async Meeting] HelpHub Virtual Assistant Refining Request:\nWe will try group Refining again. Please coordinate with your team to have Refining completed by Wednesday, April 27. 🙏  (from comment)\n\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-22T00:07:44Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2612205"
            },
            {
              "author": {
                "login": "accessibility-bot"
              },
              "bodyText": "Daily Update for Apr 25, 2022:\n\n[Sprint Overview] FY22 Q4 Sprint 2:\nWe kick off Sprint 2 on Monday. See you then :)\n\nIf you haven't already, please review the Proposal for a new FR policy.  (from comment)\n🤖 Automated using daily-update-action",
              "createdAt": "2022-04-25T00:07:12Z",
              "url": "https://github.com/github/accessibility/discussions/989#discussioncomment-2626190"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "These are my opinions on how it should work:\n\nand 3. FRs should:\n\nset aside time each day to review Issues, PRs, Discussions, and #accessibility messages to our team\nroute the request:\n\nif it's a large amount of work, to @inkblotty\nif it's an area the FR doesn't have enough knowledge in, the team member who can help (including James)\n\n\nor respond themselves\n\n\nI like the idea of a Primary & Secondary each week. It might be a little tricky to set up in PagerDuty by timezones, but we could start this style of rotation (similar to how we handled the holidays in December), beginning in April once @owenniblock and @andrialexandrou join the pool in PagerDuty.\n\nI recognize that, as the team grows and awareness of our program picks up steam, FRs will be pinged on more and more reviews. We should have a process that can scale, including lightening the loads for the Primary FR when they're on rotation.",
              "createdAt": "2022-03-07T23:13:51Z",
              "url": "https://github.com/github/accessibility/discussions/838#discussioncomment-2312533"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @inkblotty in #838 (comment):\n\nI recognize that, as the team grows and awareness of our program picks up steam, FRs will be pinged on more and more reviews. We should have a process that can scale…\n\nI propose eliminating incidental FR responsibilities, specifically “Note-taking in planning meetings” and “Reporting epic status”. Doing so unlocks extra FR capacity to focus on incoming requests for review. This is the FR’s most valuable contribution, and it’s the one they are uniquely situated to provide.\nRe: Note-taking in planning meetings, I’d advise dropping this entirely: The project board is a sufficient artifact of our “sprint planning meetings”, and our move to async refinement means we no longer hold “backlog grooming meetings” during which notes could be taken.\nRe: Reporting epic status, as last week’s FR, I added little value to the content given to me by each epic’s DRI. At best, I merely reminded them that the content needed to be submitted, but we have alternative means to send reminders that do not require human action. I posit that DRIs are the best folks to submit epic statuses, since they have the relevant context as a matter of course, as a result of being DRIs.",
              "createdAt": "2022-03-14T21:14:41Z",
              "url": "https://github.com/github/accessibility/discussions/838#discussioncomment-2360708"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Cross posting: #280",
              "createdAt": "2022-04-12T15:43:02Z",
              "url": "https://github.com/github/accessibility/discussions/838#discussioncomment-2553161"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Another thought that came up during retro: could we eliminate feature work for an FR so they have time to focus on responding to questions in a timely manner? What if we fill in the downtime with self-directed learning, such as catching up on deep dives?",
              "createdAt": "2022-04-12T15:51:03Z",
              "url": "https://github.com/github/accessibility/discussions/838#discussioncomment-2553215"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "This is super exciting to think about, thank you! A few notes/questions:\n\nNumber of stale audit issues\nWhat are we hoping this would show? Would this be tracked based on how many issues we close because when we get to them, they're stale?\n\n\nWould it be relevant to add how often we plan on doing audits for each feature once they're healthy? Thinking of a complement to \"Last audit date\" - \"next audit date\"?\nWould we benefit from tracking frequency of common issues? This may be covered in \"Axe errors\". For example, if we track the amount of images missing alt text, and then see that number significantly decrease, that may be helpful. Similarly if we see that number start to spike - it could give us insight into what types of training/linting rules we should focus on.\n\nI will add more notes if I can think of them 😄",
              "createdAt": "2022-03-08T18:34:41Z",
              "url": "https://github.com/github/accessibility/discussions/866#discussioncomment-2318775"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Cross reference: #794 (comment)",
              "createdAt": "2022-03-08T19:30:28Z",
              "url": "https://github.com/github/accessibility/discussions/866#discussioncomment-2319150"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Alternatively: Could be phrased \"Feedback loops\" and could include Linting and team automation",
              "createdAt": "2022-03-08T19:48:46Z",
              "url": "https://github.com/github/accessibility/discussions/866#discussioncomment-2319230"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Probably will use Labels old audit data to Fan Out with a Scorecard -- guinea pig project",
              "createdAt": "2022-03-09T22:30:17Z",
              "url": "https://github.com/github/accessibility/discussions/866#discussioncomment-2327474"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Closing in favor of #998",
              "createdAt": "2022-04-12T18:20:25Z",
              "url": "https://github.com/github/accessibility/discussions/866#discussioncomment-2554214"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "lesliecdubs"
              },
              "bodyText": "The PRC bits look good to me!\nIn reviewing the Q4 Design Infrastructure planning doc, however, I'm not seeing any Command Palette components explicitly mentioned in Primer's KRs - unless those components are represented in some of the tables and I'm just not familiar enough to know.\n@gaknoll are you able to confirm we've got Command Palette components covered in the plan for Primer, for my own peace of mind? 🙏🏻",
              "createdAt": "2022-03-14T22:21:19Z",
              "url": "https://github.com/github/accessibility/discussions/875#discussioncomment-2361037"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Closing in favor of #999",
              "createdAt": "2022-04-12T18:19:41Z",
              "url": "https://github.com/github/accessibility/discussions/875#discussioncomment-2554203"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "There was a comment in Retro about Deep Dive and how difficult it can be to lead with no additional questions added.\n\nLeading a deep dive with no additional questions from anyone is tough, could we encourage more people to ask a question on the issue so we don’t run out of things to talk about?\n\nI would love more thoughts in thread here 🙏  I’ve noticed personally when I lead, it was much easier to be more of an MC than have to think of other topics as I listen and ask follow-up.",
              "createdAt": "2022-04-12T16:58:03Z",
              "url": "https://github.com/github/accessibility/discussions/1013#discussioncomment-2553693"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "I have 5 Accessibility Team Office Hours on my calendar for yesterday.\nIt used to be that Clockwise would copy team events to our personal calendars, but we've been needing to invite everyone directly on the team calendar since Clockwise was removed. I believe this is part of the problem -- whenever we delete something from the team calendar, it doesn't sync to update the personal calendar without Clockwise.\nHas anyone had an opportunity to look at Reclaim and whether it will help with this?",
              "createdAt": "2022-03-24T16:14:46Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2431453"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "I'm a bit of an outlier here, I suspect for two reasons:\n\nI don't use a GitHub calendar; I use my PAC one instead.\nI don't use the calendar UI (Google or otherwise) to join meetings.  Instead, I join via Zoom, either on my phone or my computer, which is authorised to access my PAC calendar.\n\nThe additional context is that I have quite a lot of meetings, many of which are non-GitHub, to the point that I just turn up where and when my phone's reminders tell me to turn up.  Right now, for the Office Hours and Deep Dive, I always get at least two reminders, with different Zoom links, and then am not sure which one to join.\nThis seems to be a shared problem, e.g. for yesterday's Office Hours, we had two Zoom meetings going on concurrently for a little while, each with participants.  It's relatively easy (albeit inefficient) to determine that you're in the wrong place when it's 5 minutes in, and nobody else has shown up.  But yesterday was a case of everyone thinking they were on the right call because other people were present, a perfectly natural reaction.\nSo, those are my concerns.  I want to limit confusion to maximise attendance, but hopefully in a way that just means having appropriate events on a calendar.  For instance, it was mentioned yesterday that some of the invites contain text in the description to help work out where to go, but that text isn't surfaced by the Zoom apps so isn't helpful to me personally.",
              "createdAt": "2022-03-24T17:04:04Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2431855"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Is it possible to enable a notification to appear in the Accessibility channel with the Zoom link for the Deep Dive and the Office Hours a few minutes before the events start?\nAt least that way people can click that link and be assured to get to the right meeting?\nAlso, I also think that the problem is that canceling events is not getting propagated to individual calendars. This would explain why mine is up to date and only shows 1 meeting for each.",
              "createdAt": "2022-03-24T18:36:25Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2432387"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "I think I mentioned already, we are all part of the accessibility@github.com email list, so I would invite that account to the events, so we are ALL invited and if the event changes, everyone will see the change. Same with any other email list. It could be an option.",
              "createdAt": "2022-03-25T14:23:38Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2438044"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "On the weeks we have Deep Dive first and Office Hours second, I don't see any invites on the Accessibility calendar - only my personal calendar.\nOn the weeks we have Office Hours first and Deep Dive second, I see 2 invites on the Accessibility calendar for Office Hours, and 1 invite for Deep Dive.\nI feel like at this rate, it'd be best to do a clean sweep (delete all the events) and start over with fresh ones. Maybe we can even use the same zoom link for every Accessibility meeting. Not sure if it's possible to create an Accessibility Team zoom account specifically for meetings?",
              "createdAt": "2022-03-25T14:29:14Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2438087"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@bolonio\n\nwe are all part of the accessibility@github.com email list\n\nJust noting that I'm not on that list, nor is anyone else at PAC.  I'm not saying we need to be, but highlighting that using it wouldn't solve this problem for us.",
              "createdAt": "2022-03-25T15:56:43Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2438717"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@bolonio Got it.  Sorry, I'm not trying to be overly pedantic here, just wanting to make sure everyone's experience is accounted for.  E.g. if GitHub email lists only allow GitHub.com addresses, that wouldn't work for us either.\nOverall, I agree with @lindseywild that at this point, we should probably just wipe all events from the calendar, make sure people don't have any remaining, and then set them up from scratch.  Even with a specific, unchanging Zoom URL, there are chances people will join the wrong one if the existing/wrong invites remain.",
              "createdAt": "2022-03-25T16:17:17Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2438858"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Hi all --\nThank you for sharing your woes with me.\nOver the next week, I will be removing all events from our shared calendar and remaking them. I'll be looking into how Reclaim can help us and whether a team Zoom account will help too.\nI will also write up an internal policy on Calendar management so we avoid this mess in the future.",
              "createdAt": "2022-03-25T16:42:02Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2439038"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "@inkblotty Hi, I don't know if that's fixed, or if it will be fixed, but I still have 5 times the same calendar event. 2 times by reclaim, 2 times by \"Accessibility Team\" google calendar, and 1 time from Alexandra.\n\nSame with Deep Dive, Q4 Kickoff, sprint planning....etc",
              "createdAt": "2022-04-11T07:29:28Z",
              "url": "https://github.com/github/accessibility/discussions/938#discussioncomment-2542410"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @smockle in #accessibility-internal:\n\nPersonally, I’m fine with any autofixable rules. They strike a good balance between cost (friction) and value.\nPhilosophically, stylistic rules exist to improve readability and writeability through consistency. Because the primary reading interface for Markdown is the preview, not the raw form, stylistic rules provide less value for Markdown than for e.g. TypeScript files. (I say less value, not zero value, because writeability is still improved.)\nSomewhat tangential, but I’ve long liked Prettier’s take on this subject: https://prettier.io/docs/en/comparison.html",
              "createdAt": "2022-03-16T16:49:20Z",
              "url": "https://github.com/github/accessibility/discussions/901#discussioncomment-2374391"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "@khiga8 It seems like we've reached close to consensus here. Let's talk about this in our sync tomorrow and get next steps together. Thank you for bringing up this topic!",
              "createdAt": "2022-03-21T23:04:00Z",
              "url": "https://github.com/github/accessibility/discussions/901#discussioncomment-2410594"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "This has been closed by #991.\nI don't know how to close Discussions polls so I guess I'll lock this.",
              "createdAt": "2022-04-07T15:40:04Z",
              "url": "https://github.com/github/accessibility/discussions/901#discussioncomment-2524837"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "@EricaMo let us know if you have any input on these ideas.",
              "createdAt": "2021-11-24T14:35:31Z",
              "url": "https://github.com/github/accessibility/discussions/432#discussioncomment-1694326"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @benjiallen in #432 (comment):\n\nThe idea would be to ship/announce the following:\n\nDon’t autoplay GIFs #272\n\n\nWe’ve discussed two approaches to this: client-side (replacing GIFs with HTMLCanvasElements using JavaScript) and server-side (converting GIF to MP4 on file upload). I’d love to (staff-)ship a client-side solution (modeled after this demo) well before May 2022.\nI’m not sure anyone is suggesting this, but I don’t want to hold accessibility features back in order to make a big announcement. A retrospective look at our big accessibility ships could be good content for GAAD—highlighting our ongoing commitment in a way that announcing a new batch of ships doesn’t. We could do both; e.g. from the Microsoft GAAD blog post: “We launched Disability Answer Desk with American Sign Language (ASL) support for our deaf customers back in 2015 and introduced ASL Support for Microsoft stores in April to help customers with their buying experience. Today, we are launching Be My Eyes Support for LinkedIn to help answer product and accessibility questions.”",
              "createdAt": "2021-11-24T16:12:45Z",
              "url": "https://github.com/github/accessibility/discussions/432#discussioncomment-1694995"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Another idea: wondering if we could get NVDA setup with Codespaces to reduce friction with the development experience and help encourage other contributors. Not sure how Codespaces billing works for open source so will need to investigate.",
              "createdAt": "2021-11-30T14:13:09Z",
              "url": "https://github.com/github/accessibility/discussions/432#discussioncomment-1722481"
            },
            {
              "author": {
                "login": "EricaMo"
              },
              "bodyText": "Love all these ideas! Given the huge dev community on GitHub, it would be cool to see if there is a way to get more developers submitting accessibility pull requests or contributing to accessibility projects.",
              "createdAt": "2021-11-30T17:06:10Z",
              "url": "https://github.com/github/accessibility/discussions/432#discussioncomment-1723564"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "I love this idea! Also, we could work with the Developer Relations team and maybe have Accessibility-themed virtual meetups or other virtual events during May for Accessibility Awareness day.\ncc @AndreaGriffiths11 @martinwoodward",
              "createdAt": "2021-12-03T23:25:48Z",
              "url": "https://github.com/github/accessibility/discussions/432#discussioncomment-1747217"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Related: Twitter is rolling out automatic captions for videos",
              "createdAt": "2022-01-07T18:22:05Z",
              "url": "https://github.com/github/accessibility/discussions/432#discussioncomment-1927226"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Scaling back our contribution to GAAD based on where we are with Q3 and what we're trying to do in Q4.\nOur main contributions will be:\n\nAbility to play/pause animated images\n\nThis work is already in progress and I feel confident that we will be ready to ship for GAAD\n\n\nDonate money to open source software supporting accessibility causes\n\nI'm still working on this. Next step: providing guidance on what qualifies for donations",
              "createdAt": "2022-03-26T16:30:55Z",
              "url": "https://github.com/github/accessibility/discussions/432#discussioncomment-2443501"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Created an unplanned label. Check out this new markdown editor feature 🎉\n\n\n  unplanned\n  work that started in a sprint but was not planned for",
              "createdAt": "2022-02-08T19:17:19Z",
              "url": "https://github.com/github/accessibility/discussions/635#discussioncomment-2135882"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "Shame the new label links aren't using the tooltip work by @khiga8, to display the label description.  Also, in GitHub emails, only the URL is included, so the rendering hasn't been updated.  Not sure where that should be reported.",
              "createdAt": "2022-02-08T22:42:55Z",
              "url": "https://github.com/github/accessibility/discussions/635#discussioncomment-2136965"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Updated the contributing docs for Primer and the local env setup: primer/view_components#1016",
              "createdAt": "2022-02-16T18:56:35Z",
              "url": "https://github.com/github/accessibility/discussions/635#discussioncomment-2191038"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Do folks feel included in the development of our FY22 Q4 KRs?",
              "createdAt": "2022-03-22T16:23:40Z",
              "url": "https://github.com/github/accessibility/discussions/929#discussioncomment-2416101"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "How do we pass on our learnings to React team from component remediation (e.g. dialog, tooltip)?\nHow do we spread the knowledge so more people feel empowered to answer questions about certain work? For example, Tooltips.",
              "createdAt": "2022-03-22T16:24:10Z",
              "url": "https://github.com/github/accessibility/discussions/929#discussioncomment-2416109"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "How can we collaborate better across libraries/teams? For instance, there was a lot of overlap between ActionMenu/Dropdown and what Allie and Sid had been working on. Maybe there is a better collaboration model",
              "createdAt": "2022-03-22T16:24:22Z",
              "url": "https://github.com/github/accessibility/discussions/929#discussioncomment-2416113"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "I think hard conversations on \"soft\" topics would benefit also from sync meetings, once we've all had time to reflect and provide initial ideas. Do others agree?",
              "createdAt": "2022-03-22T16:24:27Z",
              "url": "https://github.com/github/accessibility/discussions/929#discussioncomment-2416114"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Should we have scheduled work during Passion Week? (e.g. MermaidJS Open Source Day — github/heart-services#717 (comment))",
              "createdAt": "2022-03-22T16:24:35Z",
              "url": "https://github.com/github/accessibility/discussions/929#discussioncomment-2416119"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Should we have a clearer depiction of which tickets are for a designer vs. engineer?",
              "createdAt": "2022-03-22T16:26:18Z",
              "url": "https://github.com/github/accessibility/discussions/929#discussioncomment-2416141"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Should we block time for Days of Learning, like we did for axe-con?",
              "createdAt": "2022-03-22T16:26:39Z",
              "url": "https://github.com/github/accessibility/discussions/929#discussioncomment-2416146"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "I want to share a recent lesson from my communication with another Hubber to kick this off:\nCase Study 1\nRecently, we were approached by a Hubber in the #accessibility Slack channel with a challenge, \"Where's the audit?\"\nMy initial response was surprise. There wasn't an audit planned for this person's area of work. They hadn't requested one from us. Where was this expectation for an audit coming from?\nHoping to learn more, I DMed this person and set up a sync meeting to learn more about this expectation. In our call, I learned they were very passionate about Accessibility work and hadn't been tuned into the new audit process we developed. Independent from our initiatives, they had been improving the Accessibility of their application slowly and surely, with support from their manager. In requesting \"Where's the audit?\" this Hubber was asking for ways to help.\nBy opening a door to talk via video and following up with a DM, the confusion was cleared up. This person wasn't communicating disappointment, but making an offer to work with us. Doors were opened for future collaboration.\nA Suggested Rule\n\nDon't Assume Intention\nOr if focusing on the positive\nAsk clarifying questions to understand intent",
              "createdAt": "2022-03-11T19:21:19Z",
              "url": "https://github.com/github/accessibility/discussions/884#discussioncomment-2341503"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Goals\n\nDiscuss \"Rules for Engagement\"\n\n\nI like the idea of outlining the actions we aspire to take and the principles which inspire them. I don’t have a specific rule to propose, however, I’ll make a meta-proposal: We should review the rules—either individually, or as a group—at some regular interval (e.g. reviewing a single rule per sprint retro, reviewing all rules during quarterly planning). This will keep us aligned with our ideals, and this will allow our ideals to evolve alongside us, as we learn and grow through changing circumstances.",
              "createdAt": "2022-03-14T21:38:29Z",
              "url": "https://github.com/github/accessibility/discussions/884#discussioncomment-2360826"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "I reported a bug in #primer-react. Cole replied immediately about a fix in-progress and then followed-up hours later when the fix shipped. This made me feel great.\nI shared an example from our work related to an ongoing #primer discussion. Joel added a 👍 reaction. This made me feel great.\nI try to reply or react to every message in which someone is vulnerable, e.g. sharing something they love, revealing an insecurity or knowledge gap, apologizing, talking about life outside work. Acknowledging folks’ messages is a way to affirm their individual dignity and their place on/alongside this team.\nI think we should do this as a team, as long as no one feels pressure to respond to every message (ref: “Distraction risk & Discouragement risk”).",
              "createdAt": "2022-03-16T22:06:59Z",
              "url": "https://github.com/github/accessibility/discussions/884#discussioncomment-2376267"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "I guess it might be an obvious use case, but I would like to mentioned a couple of experiences concerning the \"MermaidJS\" release.\nIt all started with the Include diagrams in your Markdown files with Mermaid article in the GitHub blog, and @benjiallen posted it in the #accessibility-interntal slack channel.\nWe had a conversation with @gwincr11, one of the members of the team who integrated Mermaid to learn more about the release and the process followed. One key point of that conversation was the following sentence:\n\nAs a side note I have been at GitHub for five years and did not even know we had an accessibility team.\n\nI can only speak from my side, but I was a bit angry when I read that. I could've responded with what I thought at that time, but I refrain myself because I was not prepared and I didn't know what tone or expressions to use to address this topic.\nI think the posture discussion is a great opportunity to set some standards there, and I'm really looking forward to finding a common way to ensure a good communication towards fellow colleagues.\nAfter a couple of conversations I would like to highlight a couple of sentences from a slack comment by @owenniblock:\n\nI’m not trying to minimise the great work I’m sure you and your team have done to ship this but we also shouldn’t try to minimise the very real sense of disappointment screenreader users must be feeling in GitHub right now.\n\n\nAs a team, we’re trying very hard to put in place documentation and training to help Hubbers make good accessibility choices when they develop on GitHub but it’s early days. We all feel very passionately about Accessibility and I think the fact that you’ve reached out to us here shows that you’re willing to engage with us which is great - maybe one of our team could pair with you some time to show you how a screenreader operates and what the experience would look like on GitHub right now. We can go from there to try and find a good accessible solution for this.",
              "createdAt": "2022-03-17T16:14:27Z",
              "url": "https://github.com/github/accessibility/discussions/884#discussioncomment-2381766"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "I don't think I'm as articulate as the rest of the group so I'm going to drop in some ideas which I think are worth discussion but probably need refinement.\n\nAssume the best in people. Assume that no one woke up deliberately attempting to discriminate against people with disabilities.\n\nSomething like the prime directive of retros \"everyone did their best with the information they had\"\nAnother way of putting it: don't throw rocks at the work of other teams.\n\n\nAccessibility is hard. Especially for people new to the subject. We need to display deep empathy for folks who are new to accessibility and trying to learn.\n\nLike a lot of deep subjects, \"the more you know, the more you realize what you don't know\"\n\n\nPerfection is the enemy of good.\n\nI'm not sure how to articulate this so that it's more actionable but sometimes we have to focus on the wins that are within grasp rather than focus on the unattainable perfect solution. If a solution solves 99% of the a11y issues then that solution still moves us forward and is preferable to no solution at all.\n\n\nWe need to be relentless critics of our own platform.\n\nIf we see ways to improve our ability to make GitHub accessible, document the feedback and engage the team in discussion\n\n\nCelebrate often. Celebrate as broadly as possible.\n\nGiving people the virtual \"pat on the back\" for small wins will establish an association between \"doing accessibility\" and \"feeling great about the work i do\".\nLet others know about it! i.e., the feature team, the engineering team, the product team, Twitter",
              "createdAt": "2022-03-18T20:16:52Z",
              "url": "https://github.com/github/accessibility/discussions/884#discussioncomment-2390215"
            },
            {
              "author": {
                "login": "andrialexandrou"
              },
              "bodyText": "I've been mulling on this, because it's a big and difficult task to direct culture. I think this is going to be an on-going effort for us, and I want to be sure that we understand that every interaction is an opportunity to create, redefine, undo, remake that culture.\nI consider this exercise primarily useful in the conversation it inspires in the team as it stands today, and I agree with @smockle that re-evaluation is going to be necessary. In my opinion, it is in fact continuous, so in that light codification is important as a reminder to have the conversation, to check in, to re-assess. The set of rules is not the same as putting in the effort to stand by them, or to act in the spirit of them when the letter is not necessarily spelled out.\nWith all that in mind, after a few conversations, I think my proposal for a \"rule\" is brief but far-reaching:\nConsider the interactions with those outside our team a first order part of our work.\nI do think it's worth discussing specifics around tone of engagement, impact on our end users, timeliness (of responses if not work itself), emoji reacts, whether and when to prefer DMs or zoom calls, etc, but not sure I would want those things necessarily codified.\nOkay! Leaving it there.",
              "createdAt": "2022-03-21T14:52:33Z",
              "url": "https://github.com/github/accessibility/discussions/884#discussioncomment-2407530"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "I can't think of anything additional to add that others haven't already said! A few points that stuck out to me that I was thinking of initially:\nFrom @owenniblock: \"Always provide a path forward.\"\nYES! I love this. It's great to acknowledge when someone asks a question, but we have to make sure we're being diligent in confirming they have what they need to continue. If they're still left shrugging their shoulders after reaching out to us, that's no good!\nFrom @benjiallen: \"Assume that no one woke up deliberately attempting to discriminate against people with disabilities\"\nI think we're lucky in the sense that it's very easy for us to sell why accessibility is so important, in a few sentences or less. Once someone understands the benefits and how we're making things better for all users, they're usually on board which is great!\nThe mini-summit talk from @ichelsea and I also has some good points of collaboration, maybe we can make a rule out of one or two of them!",
              "createdAt": "2022-03-23T11:27:55Z",
              "url": "https://github.com/github/accessibility/discussions/884#discussioncomment-2421872"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "What a fantastic write-up @owenniblock. I have a few questions:\n\nAccessibility 101: Theoretically, if we could get access to the original video and cut out the parts that aren't relevant to us, how long do you think the video would be?\nOn Accessibility Evolution Model and Procurement: I do agree we should make a decision around these two things. These two topics should not be included in our first round of Training rollout IMO. @alebourne do you think that's a good plan?\nCan you link to the Accessible Events Guide? We're having a meeting with Universe people tomorrow. If it's a helpful resource, I'd love to be able to send it to them.\n\nIt does look like Accessibility Fundamentals is our best bet so far. I'll write up a ticket for the How can I communicate at work... content. This is looking like something we'll have to custom-write.",
              "createdAt": "2022-03-09T17:16:47Z",
              "url": "https://github.com/github/accessibility/discussions/871#discussioncomment-2325771"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "I have no restrictions in mid/late September or October (Not near Halloween please).\nMy only preference is not in San Francisco, although I can definitely understand if others want to check out the office. My preference would be somewhere warm, where we can still sit outside or do things outdoors in case the virus is still around. Also, somewhere that has higher rates of vaccination would be nice. Some suggestions are Palm Springs, San Diego, Los Angeles/Orange  County, New Orleans, and Napa Valley. Possibly Phoenix, Austin, Florida, although sometimes the virus numbers are higher in those cities.\nIf the Primer Accessibility team members can attend, that would be nice.",
              "createdAt": "2022-03-01T02:32:44Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2269992"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "Do you have any restrictions on your calendar or concern over the mid-end of September timeline?\n\nI have a family wedding during mid-September, so I would appreciate and prefer in October if it's possible. Otherwise I would need to check the specific dates.\nEDIT: We've just been invited to a wedding on Oct 22 in Guadalajara, Mexico.\n\nDo you have a preference for locations for the MIni-Summit?\n\nI don't have any preference for locations. Of course, I've never been in US, so if it happens in US I will travel with my wife and we might stay for a couple extra weeks to visit, but if it's in Europe I'm ok as well. I just want to see you all in person and have some good time together. As Ale said, \"somewhere warm\" and with \"higher rates of vaccination\" :)\nEDIT: We've just been invited to a wedding on Oct 22 in Guadalajara, Mexico. Being very selfish here, for me it wold be better to be already in the US in October to travel to Mexico.\n\nDo you think we should have all Accessibility-focused team members there (including Primer, like we did for the Virtual Mini-Summit), or not?\n\nI would love our fellow Accessibility-focused colleagues from Primer (or any other team) to join us :)",
              "createdAt": "2022-03-01T10:02:28Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2272003"
            },
            {
              "author": {
                "login": "owenniblock"
              },
              "bodyText": "Timeline:\nI would prefer it in October - Jasmine starts at high school in September and I already know it's going to be a hard month for all of us.\nThe ideal week for me would be the week starting 24th Oct (the kids are on holiday from school so they might come along with Jem depending on where we meet - or they could stay at my parents and Jem and I might come together). That might be too close to Halloween for @alebourne though!\nI also have concerns about travelling still, Jem has a blood clotting condition and we're not totally sure how she would respond to catching Covid, so if I bought it home from the flight that would be super stressful (we discussed foreign travel last week and decided we'd wait until next year before thinking about holidaying abroad).\nLocation:\nIf we can make it for that week in Oct then somewhere warm with a beach would be amazing. Otherwise no major preference. As already mentioned, somewhere with a high vaccination rate and good control of the virus seems to make sense.\nAttendees:\nI agree with the others regarding Primer team etc, although depends a little on what the focus of the summit will be.",
              "createdAt": "2022-03-01T10:50:51Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2272318"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "Timing\nI have a bunch of fall Holy days in late September, early October.\n\nSeptember 26, Feast of Trumpets (Rosh HaShana)\nOctober 5, Atonement (Yom Kippur)\nOctober 10-17, Feast of Tabernacles (Sukkot)\n\nLocation\nI'd LOVE to go to Europe!\nColleagues\nI'm with @owenniblock, it depends on what the focus of the summit will be but I like the idea of including all Accessibility folks!",
              "createdAt": "2022-03-01T19:16:32Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2275761"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Hey all -- I should have been more specific, but I'd like us to use the MIni-Summit-in-a-Box resources due to the difficulties that can come with international travel. Here is the list of approved locations. Please let me know which of these locations you'd prefer 🙏",
              "createdAt": "2022-03-01T20:01:30Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2276004"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Wow. The list of locations has decreased a lot. 😞  Now it is only locations with offices.\nI wonder if the new way to do these summits is to use the office space in the offices?\nI think the advantage is that if we visit the office we can get to meet other hubbers.\nAccording to the new list:\n\nBellevue\nRaleigh\nSan Francisco\nAmsterdam\nHyderabad\nOxford\nTokyo\n\nI have no preference. Anywhere is fine.",
              "createdAt": "2022-03-02T05:42:38Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2278089"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "I'm with Ale, I have no preference for the location.",
              "createdAt": "2022-03-02T09:05:34Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2279099"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @inkblotty in #817 (comment):\n\n…Additionally, @smockle should be back from his parental leave by [the] time [we meet]…\n\nThanks for including me! ❤️ I’m excited to meet everyone in person at last!\n❧\n\nDo you have any restrictions on your calendar or concern over the mid-end of September timeline?\n\nNope. I’ll return from parental leave by mid-end of August. My personal (and family) calendars are open throughout September and October.\n❧\n\nDo you have a preference for locations for the MIni-Summit?\n\nFrom the mini-summit-in-a-box approved list of cities, my first choice would be Amsterdam (since I’ve never been), and my second choice would be San Francisco (since I lived there for 5 years and could reconnect with old friends, plus see the original HQ).\n❧\n\nDo you think we should have all Accessibility-focused team members there (including Primer, like we did for the Virtual Mini-Summit), or not?\n\nI’d prefer just the Accessibility Team, since it’s our first in-person meet-up. Fewer attendees means we can spend more time getting to know each other, and we can define our identity as a team. My preference aside, I suppose it depends: Are we primarily roadmap-planning, or are we primarily team-building?\n\nIf we’re roadmap-planning, we should meet with as many partners (e.g. Primer) as we can (this could drive the location we select). (Though, if the “Consulting/training/tooling, not components” proposal is accepted, our roadmap will include fewer direct Primer contributions.)\nIf we’re team-building, we should spend time together as the Accessibility Team.\n\n❧\nAdditional questions\n\nWhat are we thinking re: duration (3 days? 1 week?)",
              "createdAt": "2022-03-02T21:12:20Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2283377"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "I'm excited!!!!\nDo you have any restrictions on your calendar or concern over the mid-end of September timeline?\nNot that I'm aware of.\nDo you have a preference for locations for the MIni-Summit?\nEurope would be amazing!\nDo you think we should have all Accessibility-focused team members there (including Primer, like we did for the Virtual Mini-Summit), or not?\nNo strong opinions.",
              "createdAt": "2022-03-02T21:34:34Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2283519"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Hi team --\nThank you for all your ideas and info! I spoke with a lot of you about this. There are some private conversations I'm taking into account for this decision.\nLooking forward:\nI'm going to request the days within Oct 24 - 28.\nI'm going to request San Fransisco.\nThe other details will be worked out soon. I think the when and where can get our reservation started with the Mini-Summit-in-a-Box team.",
              "createdAt": "2022-03-12T00:09:16Z",
              "url": "https://github.com/github/accessibility/discussions/817#discussioncomment-2343308"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Follow-up Discussion on An Accessibility Posture",
              "createdAt": "2022-03-11T19:22:43Z",
              "url": "https://github.com/github/accessibility/discussions/842#discussioncomment-2341509"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Proposal — Integrate accessibility-focused feature in GitHub Markdown editor\nI would love to see: [Proposal] Integrate accessibility-focused feature in GitHub markdown editor #772, as a step to helping GitHub users be more \"self-serve\" when it comes to sharing accessible content.",
              "createdAt": "2022-02-24T20:52:35Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2246857"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "The following proposal was originally posted in FY22Q4 KR Proposal — Consulting/Training/Tooling, not Components (#764). It has been moved here to consolidate discussion about our FY22Q4 KRs and roadmap.\nProposal — Consulting/training/tooling, not components\nProblem\nThe Accessibility Team’s FY22Q3 KRs include: “Prepare 6 high-impact components,” but GitHub has a team—Design Infrastructure—whose AoR includes components.\nAccessibility-focused designers (Chelsea, Allie) and engineers (Charlotte, Héctor) have joined the Design Infrastructure team, while the Accessibility Team continues to provide staff-augmentation (e.g. Adrián & Owen’s Dialog component work). Our team has experienced friction due to diverging project timelines and priorities. Moreover, this work has prevented us from focusing1 on projects that specifically require accessibility expertise:\n\nAdding ERB support to the axe extension for VS Code\nRe-enabling axe scans for staff in production\nWriting GitHub Blog posts and team posts\nReviewing planned ships\nCurating and producing role-appropriate accessibility training\n\nProposal\nIn FY22Q2, we worked on audit issue burndown in Discussions. In FY22Q3, we pivoted—we worked on component solutions that scale product-wide. In FY22Q4, I propose we pivot again—Design Infrastructure’s increased headcount affords that team capacity to own component solutions, which affords us capacity to work on consulting (on components, on upcoming ships), training, and tooling, in support of an Accessibility Fundamental.\nFootnotes\n\n\nThis isn’t speculation; engineers on the Accessibility Team have explicitly stated this, e.g. “I’ve been planning on catching up with this meeting and writing the [Semantic HTML and ARIA Deep Dive] meeting notes all day…but been super focused on dialog work and didn’t want to break my train of thought.” ↩",
              "createdAt": "2022-02-24T20:56:20Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2246884"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Proposal — Audit primer.style\nWe should audit the documentation and demos on primer.style.\nInspired by a comment in #accessibility from @jscholes re: issues with the examples on https://primer.style/react/FormControl.",
              "createdAt": "2022-02-25T19:33:14Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2253645"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Proposal — Accessibility dashboard\nIdea: An accessibility dashboard that displays both tooling insights (e.g. number of issues found by axe, number of ERBLint disable comments for accessibility rules) and human insights (i.e. Azure Cognitive Services-aggregated feedback from Twitter, number of open discussions in github/feedback’s “Accessibility” category).",
              "createdAt": "2022-03-02T19:33:53Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2282836"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Proposal — Notification sounds\n\nThis was discussed in the “Page and Navigation transitions, Dynamic Content, and SPAs” deep dive: Audio notifications.\nNotification sounds are less disruptive than role: alert and aria-live: polite/aria-live: assertive, because if a screen reader is outputting a long comment, a notification sound (e.g. to indicate a new comment) will not interrupt the output (whereas live regions and alerts will interrupt).\nThere isn’t a WCAG Success Criterion for “Use of Sound” (a la “Use of Color”), but we should be cautious about using only sound to indicate an event has occurred.\nI’m not aware of vibration APIs, but there are many scenarios where vibrations may be preferable to sounds (e.g. a user next to a sleeping baby, a user in a loud coffeeshop, a user who is deafblind).",
              "createdAt": "2022-03-02T19:43:28Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2282892"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "I think that transitioning into a consulting role will be a natural progression, because as the audit progresses, more and more teams will need our help.\nAlso, we are currently working on 4 audits (File Tree, Secret Scanning, Memex and HelpHub), in the immediate future, they will need help in the special triage, resolving coach issues, and answering questions from the feature team while they work on remediation. I think we will be able to get some excellent learnings from them that can help us to polish our processes before embarking in the accessibility fanout.\nOne of the big questions I have is how much effort helping the teams will take. Today, I provided the results to the File Tree team, so I guess we will be finding out soon enough!\nProposal — More involvement in open source\nSomething else that I would like to see in the future is for the team to be more involved in open source, or in other ways that are more outward-focused. Although this is probably a longer-term idea. I like how this can help make our work even more impactful.",
              "createdAt": "2022-03-02T20:32:53Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2283162"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Non-goal — Rotation for the Accessibility Team (#440)\nFrom @smockle in #348 (comment) via #440 (comment):\n\nWithin the next year, I’d love for the Accessibility Team to support a rotation—like the Special Projects and Ruby & Rails Dotcom Upgrade team rotations—so that we can encourage and equip accessibility advocates across many teams at GitHub.\n\nI remain committed to this idea, but I am explicitly and deliberately excluding it from FY22 Q4 proposals. We can define the program and identify pre-requisite tasks in FY22 Q4, but I propose deferring the rotation itself.",
              "createdAt": "2022-03-03T20:47:32Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2290876"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Creating some visibility into the process the leads are going through, I wrote up a Draft KR around our Data needs :)",
              "createdAt": "2022-03-07T23:03:38Z",
              "url": "https://github.com/github/accessibility/discussions/794#discussioncomment-2312441"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Thanks for opening up this issue @smockle! Just speaking from a place of my own personal preferences, I would be down for a break from components in Q4 after the intense time spent around tooltips (of which I still need to upstream) and then diving into the Dropdown spike. I feel excited by tooling work and would love for our team to have dedicated time for writing posts.\nI do acknowledge there's a lot of work still to do with Primer components and getting them remediated is very high-impact work, but the things you've proposed for next quarter are equally very high impact and we should devote time. If Primer team has the bandwidth to prioritize remediation of components, I think it makes sense for our team to dedicate time to the other areas currently neglected. I am thumbs up for your proposal!",
              "createdAt": "2022-02-17T18:12:26Z",
              "url": "https://github.com/github/accessibility/discussions/764#discussioncomment-2199111"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Thank you for posting this! I fully agree. In my previous experience, churning on fixing issues/creating new components doesn't prevent others from popping up faster than we can fix. Educating other teams on accessibility and making them more self-serve (which is another one of our Initiatives) is what will maximize our success. Then, once more people are trained and know where to come for questions, we can spread the work of fixing components/creating more accessible components to the people doing the component work (as @smockle said). I don't think we should completely halt making accessible components, but maybe take a step back from being the main implementers and more of the outside consultants when it comes to accessibility.\nFrom doing the ActionMenu spike, I was able to get a glimpse of the process the Primer React team used for updating the ActionMenu PRC component. The collaboration with James before designing and building, looping him into the process during, and iterating on his feedback is a great example of how I see our team playing a similar role in future features/components/decisions etc.",
              "createdAt": "2022-02-17T19:34:17Z",
              "url": "https://github.com/github/accessibility/discussions/764#discussioncomment-2199630"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Thank you for contributing to this discussion, @lindseywild and @khiga8!\nTo consolidate all discussion around our FY22Q4 KRs and roadmap, I’ve copied this proposal to #794 (comment). Let’s continue discussing there! 🚀",
              "createdAt": "2022-02-24T20:57:42Z",
              "url": "https://github.com/github/accessibility/discussions/764#discussioncomment-2246888"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Creating some visibility into the process the leads are going through, I wrote up a Draft KR around our Data needs :)",
              "createdAt": "2022-03-07T23:02:57Z",
              "url": "https://github.com/github/accessibility/discussions/764#discussioncomment-2312430"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @benjiallen in #755 (comment):\n\nOur team was not consulted prior to the release of this feature…\n\nTo elaborate on this point: Accessibility is best considered at the design phase (before implementation has begun), not as a pre-release check (after implementation is complete).\n\nMy initial assessment would suggest we have 2 long term options [including to]…go with another tool…\nMermaid can output charts including:\n\nFlowchart\n[…]\nGantt\nPie Chart\n\n\nIf we’re open to replacing the renderer for individual chart types, we could consider Highcharts. It has accessibility features, including support for keyboard navigation, screen readers, low vision features, voice input, tactile export, signification, cognitive accessibility, and internationalization. It supports pie charts (accessible example) and Gantt charts out-of-the-box, and its org chart or Sankey diagram could potentially be adapted as a flowchart replacement.",
              "createdAt": "2022-02-15T19:51:12Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2183604"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@benjiallen First of all, I think this is a fantastic summary.  I'll note a couple of additional points:\n\nMaking complex images accessible is not just limited to a textual, long description.  It can also involve other techniques, including but not limited to:\n\ninteractive exploration of the data;\nsonification of the data or trends within it (e.g. an ascending and descending tonal curve and/or stereo panning); and\nallowing the raw data to be downloaded or viewed in some form.\n\n\nBe careful about assuming that there is a fully accessible option out there as an alternative.  For example, I looked at the example linked to by @smockle; it does get some things right, e.g. offering access to the data as a table.  But at the same time, the amount of screen reader verbosity is overwhelming, and I had no idea how to actually interact with the chart itself at first glance.",
              "createdAt": "2022-02-15T21:34:22Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2184109"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Feedback from other experts on Twitter\nhttps://twitter.com/aardrian/status/1493731666761850880",
              "createdAt": "2022-02-16T02:09:22Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2185296"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Thank you so much for taking the time to write this! I think this will be an important example for how we collaborate with teams outside of our own. If it's feasible could we add some messaging about how our team could help? Maybe hopping on a call with them to show what you've written, offer to help review alternatives, etc? That way this message is less of \"here is everything you did wrong\" and more of a \"let's get this right together\".",
              "createdAt": "2022-02-16T11:29:38Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2187902"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "While I agree that positive reenforcement is important, please let's not forget that multiple web developers/designers probably worked on this feature.  The fact that apparently, not a single one of them thought about the accessibility of what is purely graphical content is not a good thing.  If it was a more textual/UI-related feature, it would be more understandable.  And I also wouldn't expect them to get diagram/graph/chart accessibility anywhere near correct.  But to not think about it at all doesn't send a great message to anyone.",
              "createdAt": "2022-02-16T15:01:49Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2189281"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "It has come to my attention that the blog post announcing this feature includes the following text:\n\n...clients requesting content with embedded Mermaid in a non-JavaScript environment (such as a screen reader or an API request) will see the original Markdown code.\n\nThis is, to put it bluntly, unacceptably wrong.  Screen readers do not imply a JavaScript-free environment.  At this point, GitHub is actively disseminating misinformation, which I feel is worse than the feature/documentation simply not acknowledging accessibility as a concern in the first place.  I recommend immediate action to address this issue, publically and without delay.",
              "createdAt": "2022-02-16T19:09:56Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2191097"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "Related: mermaid-js/mermaid#2732",
              "createdAt": "2022-02-17T00:14:56Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2192622"
            },
            {
              "author": {
                "login": "sinabahram"
              },
              "bodyText": "This is roughly 20 years or so old at this point. Very old browser+AT combinations didn't work as well when JavaScript was manipulating the page because there was no updates for the AT to know about said updates. We're talking when IE 6 was becoming a widely used browser, Flash was non-ironically used, and people used the blink/marque tags, to contextualize things (very much even before DHTML really took off). Even a bit before that, honestly. I was using Home Page Reader, out of IBM, at the time, which plugged in alongside  Netscape Navigator.\nAnyways, then this incorrect advice gained some popularity with the text-only browser crowd, except all those arguments have been moot for at least a decade, if not longer, because even the text only browsers support JavaScript. Think Links VS Lynx. Which, fun fact, always resulted in blind people saying \"the chain\" vs \"the cat\" to distinguish what they were emailing about :).\nAfter that, various myths based on partial truths got born e.g. it's slower with JAWS, but obviously it was because they were barely running in-process at the time, then some universities made that their rule, and so on.\nAt least this is what I recall. I could be pretty off as this feels like a true lifetime ago.",
              "createdAt": "2022-02-17T02:47:22Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2193226"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Intro\nOther thoughts which are less to do with an analysis of Mermaid output and more to do with GitHub principles.\nWinners and losers\nAs a large organization with an engaged community we have a deep responsibility to select technologies which make sense for all of our community and the ecosystems where this community exists. In this case, the web. Whether we like it or not, we will have a large impact on open source and commercial products that win and products that lose.\nFor example, when GitHub chose Markdown as the markup language to use within comment boxes, this choice was a bad day for reStructuredText and AsciiDoc. The Markdown ecosystem goes from strength to strength partly because GitHub makes it a first-class citizen within GitHub.\nWhen GitHub choose Mermaid, GitHub is implicitly saying \"we choose this winner\". More and more people will choose Mermaid simply because GitHub did. This is bad for an accessible web.\nIt's also important to recognize that product changes related to user generated content (UGC) are different to other changes. GitHub give up a certain amount of ownership with UGC, therefore it's harder to update.\nAs the business grows so does our responsibility. I would recommend that we work to solve the following:\n\nHow do we prioritize short term bandaids described in the opening comment?\nHow do we make Mermaid a winner for everyone?\nWhen do we determine that Mermaid is actually a loser?\n\nFor example, if no accessibility changes are made in the next 12 months, would GitHub still recommend this format?\n\n\nIs there an alternative winner? If our due diligence included accessibility, what would we find?\nHow do we ensure that GitHub don't start using Mermaid in other places within the product?\nHow do we make sure that product decisions concerning user generated content always incorporate accessibility?\nHow do we do all this without delaying our accessibility roadmap?\n\nA successfully executed roadmap will have a larger and more meaningful customer impact than any changes to our approach to \"diagrams in markdown\"",
              "createdAt": "2022-02-17T15:02:39Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2197450"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Semi-related Discussion on MermaidJS release and our response.",
              "createdAt": "2022-03-03T23:29:01Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2291654"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "@benjiallen outlined next steps in github/heart-services#718 (comment):\n\nIdeas\nStuff that's within our control\n\n\nProvide an iframe title\n\n\nUse an accessible dialog for full screen view. @github/accessibility is shipping a component on Monday (2022-03-07) which should do the trick. Get in touch and we'll help you through it.\n\n\nProduce product docs which communicate how to create accessible content with Mermaid. I'm mainly thinking about ways in which you could add text to a markdown doc, around the diagram, which would communicate what's going on within the diagram. For example, adding a markdown table to communicate data in a pie chart diagram.\n\nIf we could automate this step then amazing!\n\n\n\nStuff that would require library changes\n\nAdd role=\"img\" attribute to the <svg> tag. Sounds weird but has an impact and enables other ideas below.\nAdd the ability to add <title> to SVG output. This would be used for short descriptions.\nAdd the ability to add <desc> to SVG output. This would be used for long descriptions. The <desc> element also needs to be associated with the <svg> using aria-describedby.\n\nIf we do all 3 ideas above we get this:\n<svg role=\"img\" aria-describedby=\"short-desc long-desc\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <title id=\"short-desc\">Short description goes here</title>\n    <desc id=\"long-desc\">Long description goes here</desc>\n    <!-- Rest of SVG follows -->\n</svg>",
              "createdAt": "2022-03-04T22:04:18Z",
              "url": "https://github.com/github/accessibility/discussions/755#discussioncomment-2298020"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "@alebourne I love the sentiment and the initiative to reach out but I would recommend that we stay focused on current priorities.\nFor me, given this is 2 weeks out, I can't support this with my time. If you want to pursue it, please go ahead.\nI'd be happy to collaborate and work out how we can support axe-con in 2023.",
              "createdAt": "2022-03-01T14:26:21Z",
              "url": "https://github.com/github/accessibility/discussions/821#discussioncomment-2273603"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "We can chat about this at our sync meeting today.\nI had reached out to Corporate communications (Jennie Chow), and she provided with approved boilerplate text that we can use:\nhttps://github.com/github/public-relations/blob/master/Messaging/Boilerplates.md\nor\n\nGitHub is the developer company. As home to more than 73M developers across the globe, we make it easier for developers to be developers: to work together, to solve challenging problems, to create the world’s most important technologies. We foster a collaborative community that can come together—as individuals and in teams—to create the future of software and make a difference in the world.\n\nAnd I also have the standard high-res logos to use.",
              "createdAt": "2022-03-01T17:58:34Z",
              "url": "https://github.com/github/accessibility/discussions/821#discussioncomment-2275269"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Here is an update on this.\nThe accessibility leads discussed this topic and decided to proceed with the sponsorship for Black Girls Code.\nIn addition, I will document the process so that we can plan additional sponsorships in the future.",
              "createdAt": "2022-03-04T02:46:37Z",
              "url": "https://github.com/github/accessibility/discussions/821#discussioncomment-2292387"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "This idea of having a separate repo for audit issues could be a good solution for us. It also solves some of the discussions around issues being closed without our feedback in github/github, complaints of issues being open too long, etc.\nMy largest concern for moving them out of github/github would be if we chose individual teams' repos, which would potentially have different labels and ways of tracking, which would create a lot of overhead for us in automation and planning. I like that we're avoiding this solution.",
              "createdAt": "2022-02-08T14:53:38Z",
              "url": "https://github.com/github/accessibility/discussions/628#discussioncomment-2133967"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Related issue: [Spike] can we find a good home of all of the audit data? (#464)",
              "createdAt": "2022-02-08T19:03:18Z",
              "url": "https://github.com/github/accessibility/discussions/628#discussioncomment-2135804"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Are folks thinking github/accessibility would be a good place for audit issues, or are folks envisioning a new repo (named something like github/accessibility-audits or github/accessibility-issues)? Should the repo be in the github org, in githuba11y, or in another org?",
              "createdAt": "2022-02-08T19:09:36Z",
              "url": "https://github.com/github/accessibility/discussions/628#discussioncomment-2135839"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "I am thinking:\ngithub/accessibility-audits\nI would be concerned about having too many issues in the accessibility repo (clutter issue) because we use that for logistics and all other things besides the audit.",
              "createdAt": "2022-02-08T19:55:37Z",
              "url": "https://github.com/github/accessibility/discussions/628#discussioncomment-2136084"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Also, I want to add that it needs to be in the github org because other teams will need to be able to add tickets to  their project boards, etc.",
              "createdAt": "2022-02-11T19:19:47Z",
              "url": "https://github.com/github/accessibility/discussions/628#discussioncomment-2159749"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "I would like for us to discuss one more thing:\nDo we envision ALL issues in the new Audit repo?\nDo we want to treat issues differently depending on the role?\nFor example, transferring the more advanced ones to the accessibility repo (Coach level for example)? What would be the advantages or disadvantages? Personally, I still need to think about this to give an opinion. My only concern is whether not having all issues in one repo will make it harder for us to track their progress?",
              "createdAt": "2022-02-25T23:16:39Z",
              "url": "https://github.com/github/accessibility/discussions/628#discussioncomment-2254558"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "I've added to my calendar in google the Holidays in Austria and Holidays in United States, that could be a good first step for everyone.",
              "createdAt": "2021-11-03T13:35:39Z",
              "url": "https://github.com/github/accessibility/discussions/395#discussioncomment-1582030"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "I've added to my calendar in google the Holidays in Austria and Holidays in United States, that could be a good first step for everyone.\n\nI like this. It's simple and straightforward, and when someone onboards in a new country, we can ask if they observe their country's holidays and add that calendar.\nThis led me to thinking of a related subject: Do we as a team want to mark milestones for our teammates in a calendar? Work anniversaries, birthdays, that sort of thing?",
              "createdAt": "2021-11-03T13:53:27Z",
              "url": "https://github.com/github/accessibility/discussions/395#discussioncomment-1582174"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "Another suggestion is to put yourself as OOO in your calendar for all bank holidays for the rest of the year",
              "createdAt": "2021-11-03T13:53:34Z",
              "url": "https://github.com/github/accessibility/discussions/395#discussioncomment-1582176"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "@octopotato created a calendar for US bank holidays and shared it in #human-resources (thread).",
              "createdAt": "2021-12-15T21:24:14Z",
              "url": "https://github.com/github/accessibility/discussions/395#discussioncomment-1817315"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "It's been some time without activity in this discussion so we need to take action about it.\nAs far as I've been reading your comments I end up with some conclusions:\n\nWe have a common calendar in clockwise called \"accessibility\" where we have everyone's birthdays.\nI would say that everyone can invest 5mins on setting whole days off according to the PTO, vacation, & holidays page in theHub. This will make clockwise to take them and put them directly in the common calendar.\nWhenever you ask for days off, please do the same and set that day in the calendar, so everyone's aware (including clockwise).\n\nI hope that helps to sync between us :)",
              "createdAt": "2022-01-14T09:23:02Z",
              "url": "https://github.com/github/accessibility/discussions/395#discussioncomment-1968240"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "I think in addition to the \"Who is going to create all this content?\" question, we also have the question of \"who is going to review all this content?\" Not only for grammar, spelling, etc, but also for accuracy. I think we'd also need to decide how often we'd want to release new content. Once a month? Twice a month? More/less often?\nI am not sure how much of a time commitment being a FR is, but maybe we could tack on some of the responsibility to this role. Some examples could be reviewing an article or paying attention to our team Twitter account (assuming we do this). Or, do we want to create a new group of interested individuals and rotate through them?\nRe: content creation, I like the idea of everyone being responsible for an article or two over a defined period of time, maybe a year? Just my personal opinion 😄\nWherever we post, it'd be great to have access to analytics to see how much engagement we're getting.\n\nWhere can we share all this content?\nI like the idea of a Twitter account, but I have hesitations about who will be responsible for it 😅\n\nHow do conference talks fit into this? Would we want to encourage the team to speak at conferences on these things once we get GitHub into a healthier place? I hope the answer is yes 😄\nThanks for thinking about all of this - it's super exciting to discuss and can greatly benefit the tech community.",
              "createdAt": "2022-02-07T12:38:02Z",
              "url": "https://github.com/github/accessibility/discussions/622#discussioncomment-2125033"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "I would use recognised, official GitHub social media ccounts, and the on-site blog, at first.  Once the Accessibility team has built momentum, then it would be good to have your own Twitter and so-on, and make that an announcement in itself.  Putting things on the GitHub on-site blog, instead of dev.to or whatever, gives people more of a feeling that GitHub are committed to this as a company.\nPAC are more than happy to throw in on reading through content within our allotment of weekly hours, to make sure it's striking a good tone.",
              "createdAt": "2022-02-07T14:55:13Z",
              "url": "https://github.com/github/accessibility/discussions/622#discussioncomment-2125977"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "In addition to sharing with dev community outside of GitHub, we also discussed writing internal team posts! These get surfaced to the #engineering slack channel. One thing we could do is announce when we ship a component and are confident it is ready for general use.\nMaybe in the post, we can detail the problems with the component that came up in the audit, the changes that were made, best practices for using the component, and a call to action to help migrate to that new component. Even if we have a more accessible component, we will definitely need people's help to migrate away from the old components. There may also be best practices we can highlight with the post.",
              "createdAt": "2022-02-07T19:46:10Z",
              "url": "https://github.com/github/accessibility/discussions/622#discussioncomment-2128194"
            },
            {
              "author": {
                "login": "andrialexandrou"
              },
              "bodyText": "Another topic idea: Example use cases of axe-core\nI’m not seeing a lot of independent materials provided for how to use axe-core. the Deque docs exist, but I think a significant way to encourage adoption in this industry is to provide little example solutions so that people may imagine how to use these tools in their work.",
              "createdAt": "2022-02-10T10:16:38Z",
              "url": "https://github.com/github/accessibility/discussions/622#discussioncomment-2148402"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "I think so, then one person doesn't have to be responsible for giving access on an as-needed basis. If we decide to do this, maybe we can update the onboarding templates as well to include adding a new Hubber to the shared google drive.",
              "createdAt": "2022-02-16T11:24:16Z",
              "url": "https://github.com/github/accessibility/discussions/756#discussioncomment-2187886"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Could you please clarify the scope? The title of this discussion says “all other accessibility channels”, but only 5 are listed under “The Problem”. The channels I found are listed below—are you proposing we consolidate all of these?\nPublic\n\na11y-insights-dri\na11y-insights-pipelines\na11y-insights-pull-requests\naccessibility\naccessibility-discussions\naccessibility-internal\naccessibility-ops\naccessibility-rm\naccessibility-triage\nazuredevops-accessibility\nmobile-accessibility\nmsft-accessibility\nmsft-ose-accessibility\nnpm-accessibility\nnpm-ui-accessibility-guild\n\nPrivate\n\na11y-virtual-mini-summit-2022\naccessibility-interviewers\naccessibility-party\naccessibility-planning",
              "createdAt": "2022-02-11T17:54:25Z",
              "url": "https://github.com/github/accessibility/discussions/730#discussioncomment-2159286"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @bolonio in #730 (comment):\n\nDear colleagues, this channel will be closed in X days.\n\nEspecially in channels without recent messages, I’d suggest closing (archiving) channels immediately, not X days in the future. Channels can always be reopened. Since this change is reversible, I’d suggest we minimize deliberations, in alignment with High Performance Culture’s emphasis on decision Tempo.",
              "createdAt": "2022-02-11T17:58:16Z",
              "url": "https://github.com/github/accessibility/discussions/730#discussioncomment-2159308"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "This is a great prompt. I see our Self-Serve Platform being able to collect feedback more easily than our in-person and in-Slack interactions. So brainstorming:\nSelf-Serve:\n\n\"Was this helpful?\" thumbs up / down at the end of The Hub documentation\nanalytics tracking page hits\npotentially track the time it takes for a ticket we hand to another team to go from In Progress to Done\n\nIn-Person:\n\nask if they've got the answers they need / are you unblocked?\nDeep Dive feedback surveys\n\nIt feels weird to ask someone to fill out a survey after a one-on-one though\n\n\n\nAs I'm typing this out, I actually think we want to avoid pushing people toward Slack for collecting feedback since it's ephemeral and may be inconsistent. I would see it as a great tool for bringing awareness to feedback surveys.\nI also want to plant a seed here that we will have a formal process for Accessible Feature feedback coming soon. Still in legal approvals.",
              "createdAt": "2022-02-04T22:15:51Z",
              "url": "https://github.com/github/accessibility/discussions/613#discussioncomment-2114601"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Would you mind posting a link to the security team training/video that was part of onboarding? It has been a while and it would be helpful to see again what kind of training there is :)",
              "createdAt": "2022-02-07T22:38:19Z",
              "url": "https://github.com/github/accessibility/discussions/614#discussioncomment-2129116"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "I agree that this is part of \"Accessibility Aware\", because all our Hubbers should know how to use alt text in their Slack posts, PRs, Discussions, etc. This feature of Accessible images is essential to good Accessibility communication:\n\nHow can I communicate at work (Slack, GitHub, etc.), with images, content, language, etc. in an Accessible way?\n\nfrom our Accessibility Aware definition\nI believe deeper discussions on complex imagery, like graphs, would be part of Accessibility Partner, but I don't have as strong of a stance on that opinion.",
              "createdAt": "2022-02-04T15:08:07Z",
              "url": "https://github.com/github/accessibility/discussions/617#discussioncomment-2111883"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "I think this decision tree is comprehensive and clear, and will help us write some excellent docs on getting help. I do think the how will get fleshed out further in those docs. I like where this decision tree stands 👍",
              "createdAt": "2022-01-20T16:34:45Z",
              "url": "https://github.com/github/accessibility/discussions/574#discussioncomment-2008028"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @benjiallen in #574 (comment):\n\nDecision tree\n[…]\n\nToday’s Mermaid template staff-ship inspired me to create a flowchart based on this decision tree: getting-help-from-us.md. I found and filed one bug (github/heart-services#630); assuming it’ll be fixed soon, this could be a good way to present this data. (Sidebar: Has anyone talked to the Heart Services team re: Mermaid chart accessibility?)",
              "createdAt": "2022-01-20T18:55:47Z",
              "url": "https://github.com/github/accessibility/discussions/574#discussioncomment-2009044"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "Thanks for doing this! Given my very limited context of everything GitHub, it seems like a pretty easy thing for someone to come to and figure out where they should go. I also like the catch-all at the end if someone is just unsure!",
              "createdAt": "2022-01-20T20:09:20Z",
              "url": "https://github.com/github/accessibility/discussions/574#discussioncomment-2009548"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "As others have already voiced, I really like what you've come up with! It is a great start and we can modify it as we have new learnings 👍.\nMaybe there will be a decision tree we'll need on our side like:\n\n\"Someone reached out about an accessibility issue with this Primer React component. As a FR on Accessibility team, I am not aware of what work is taking place in Primer React ecosystem. Should I redirect the individual to the Primer React channel and expect the engineer on the PRC team to handle that request and reach out to Accessibility if needed, or is there a decision tree on our end for handling that request?\n\"Someone reached out about a color contrast issue with colors in Primer CSS. As a FR on Accessibility team, how should I handle that request?\"",
              "createdAt": "2022-01-21T19:39:15Z",
              "url": "https://github.com/github/accessibility/discussions/574#discussioncomment-2018254"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Oh wow!! I did not know that there are teams with rotation programs but I really love this idea!!!! 😍",
              "createdAt": "2021-11-30T23:55:16Z",
              "url": "https://github.com/github/accessibility/discussions/440#discussioncomment-1725418"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "In https://github.com/github/technical-program-management/issues/30#issuecomment-991181741, @alebourne explained that “Progress [toward our KRs] is slower than previously anticipated,” partly due to the “onboarding of temporary resources from NPM.”\nSince a rotation would similarly require onboarding “temporary resources”—how can we minimize the short-term productivity impact we faced in Q2? Can we minimize it, or is an inherent cost we need to plan around?\nIncidentally, the same comment justifies a rotation (and other fan-out investments):\n\nRisk: We're getting more and more requests for detailed reviews / audits from other teams. This is good for us as a company (more care for accessibility!) but also means a strain on our team resources to do these reviews and it hampers our ability to work on components and close issues.\nMitigation: We need additional resources to work on accessibility. We are also working on documentation to better enable teams to learn. However, this will not be available until Q3/Q4 and it will need resources to improve it beyond Q4.",
              "createdAt": "2021-12-13T14:36:25Z",
              "url": "https://github.com/github/accessibility/discussions/440#discussioncomment-1798637"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @inkblotty in https://github.slack.com/archives/C01UWR2MEUB/p1641297600257800:\n\nIn my next one-on-one with each of you, I’ll be asking about any open Discussions you created and we’ll decide if they’ve been answered and can be closed. Please look over your Discussions before then.\n\nSeveral Accessibility Team members have agreed there is value in this proposal. The timeline is uncertain—definitely not in FY22Q3, but the FY22Q3 KR 1.2 about training, docs, and tooling is related.",
              "createdAt": "2022-01-05T15:46:11Z",
              "url": "https://github.com/github/accessibility/discussions/440#discussioncomment-1913280"
            },
            {
              "author": {
                "login": "lindseywild"
              },
              "bodyText": "I think this is a great idea! Spread the wealth of knowledge 😄 I stumbled upon this article about how LinkedIn has an Accessibility Champions program that seems relevant.",
              "createdAt": "2022-01-21T18:30:27Z",
              "url": "https://github.com/github/accessibility/discussions/440#discussioncomment-2017799"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Here’s the survey for prospective members of the Rails upgrade rotation, from “A Year of Rails Upgrades”. We could use something similar.",
              "createdAt": "2022-01-27T05:50:49Z",
              "url": "https://github.com/github/accessibility/discussions/440#discussioncomment-2056071"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nNo resizing",
              "createdAt": "2022-01-20T14:44:11Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007011"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nRestricted size: 200x200",
              "createdAt": "2022-01-20T14:47:52Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007064"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nRestricted size: 100x100",
              "createdAt": "2022-01-20T14:48:35Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007070"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nRestricted size: 50x50",
              "createdAt": "2022-01-20T14:49:09Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007075"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nRestricted size: 25x25",
              "createdAt": "2022-01-20T14:49:29Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007078"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nRestricted size: 12x12",
              "createdAt": "2022-01-20T14:50:00Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007080"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nRestricted size: 12x12\nIn running text\n\nHello gif world <img src=\"https://user-images.githubusercontent.com/16546334/150360747-c64bf105-5d99-4a33-9a2d-1c9e25cb8a0f.gif\" alt=\"white-red\" width=\"12px\" height=\"12px\"> how are you?\nIn a 1-liner\nHello gif world  how are you?\nIn multiline text\nI'm baby man braid portland helvetica trust fund pabst blog gochujang. Tattooed sriracha edison bulb fixie heirloom microdosing. Schlitz chartreuse you probably haven't heard of them, affogato bicycle rights taxidermy adaptogen gentrify thundercats four loko tbh paleo.  Lyft ethical truffaut photo booth affogato fingerstache plaid distillery umami succulents. Bespoke umami lo-fi humblebrag. Humblebrag lumbersexual poutine, stumptown iPhone single-origin coffee flannel umami cardigan irony freegan vice YOLO banh mi. Letterpress ramps lumbersexual ethical etsy hot chicken brunch, narwhal tbh banh mi photo booth 8-bit shoreditch mustache.",
              "createdAt": "2022-01-20T14:52:57Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007095"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Native size: 400x400\nRestricted size: 50x50\nIn running text\n\nHello gif world <img src=\"https://user-images.githubusercontent.com/16546334/150360747-c64bf105-5d99-4a33-9a2d-1c9e25cb8a0f.gif\" alt=\"white-red\" width=\"50px\" height=\"50px\"> how are you?\nIn a 1-liner\nHello gif world  how are you?\nIn multiline text\nI'm baby man braid portland helvetica trust fund pabst blog gochujang. Tattooed sriracha edison bulb fixie heirloom microdosing. Schlitz chartreuse you probably haven't heard of them, affogato bicycle rights taxidermy adaptogen gentrify thundercats four loko tbh paleo.  Lyft ethical truffaut photo booth affogato fingerstache plaid distillery umami succulents. Bespoke umami lo-fi humblebrag. Humblebrag lumbersexual poutine, stumptown iPhone single-origin coffee flannel umami cardigan irony freegan vice YOLO banh mi. Letterpress ramps lumbersexual ethical etsy hot chicken brunch, narwhal tbh banh mi photo booth 8-bit shoreditch mustache.",
              "createdAt": "2022-01-20T14:53:55Z",
              "url": "https://github.com/github/accessibility/discussions/573#discussioncomment-2007105"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Proposal: Inline Decorated Links\nIn the Hovercards deep-dive, I mentioned Hovercards answer two questions for me:\n\nDo I recognize the full name or avatar associated with this username?\nDoes this person work for GitHub?\n\nAt around 35:45, I explained that the same information could be made available in a different way: “avatars could be displayed inline”.\nLater, I expanded on this idea; calling usernames with prepended avatars or appended staff badges “decorated links”, and I compared them to the ↗️ arrow some sites append to external links.\nI suggested we follow the setting in https://github.com/settings/profile#staff-profile-settings-heading for determining whether to show a staff badge, but clarified that “staff badges are just an example of appended content; we may want to display, say, up to 3 badges, which could indicate folks who sponsor the repo, the original poster, collaborators in the repo, GitHub stars, GitHub staff, etc.”",
              "createdAt": "2021-12-09T21:44:19Z",
              "url": "https://github.com/github/accessibility/discussions/472#discussioncomment-1782245"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Proposal: Sidebar\nI proposed we replace the current “Participants” section in the sidebar (which currently merely lists avatars) with a more-detailed list of at-mentioned users & participants, including (a subset of) the contextualizing information currently found in hovercards. On further reflection, this would be similar to the “Linked issues” section.",
              "createdAt": "2021-12-09T21:45:40Z",
              "url": "https://github.com/github/accessibility/discussions/472#discussioncomment-1782257"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Proposal: Footnotes\nDecorated links within a body of text add visual clutter and increase screen reader announcement verbosity.\nI proposed an alternative which mitigates this: “Maybe instead of displaying [decorated links] inline, they’d appear at the bottom of a comment? Could footnotes replace hovercards?”",
              "createdAt": "2021-12-09T21:47:38Z",
              "url": "https://github.com/github/accessibility/discussions/472#discussioncomment-1782281"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "Just had a chat with Sarah Higley at Microsoft and we talked about the possibility of activating preview information with a shortcut like alt + up arrow.\nWith something like this, we could keep the helpful mouse behavior, and still give keyboard and screen reader users a way to access the information. While it's not standard behavior, it also shouldn't do any harm. If we can document this and even announce it in some blog, we could get the word out there about the behavior.\nEssentially, the hovercard should appear on focus or on hover and be able to be closed with esc without removing focus. If a sighted keyboard user wants to interact with the links in any way, they can move focus and access the card with alt + up arrow. Same with a screen reader - if they want a preview of information without having to open a new window they can move focus with the alt + up arrow shortcut.\nA method like this will likely take significant scrutiny to implement the needed custom roles and behaviors, but I think it can be done appropriately!\nI'm planning on talking to Scott O'Hara at Microsoft as well on the topic of using aria-haspopup. It's likely that the use of this role will imply that selecting the link will activate a popup, but will talk to Scott to get his thoughts and opinions.",
              "createdAt": "2021-12-20T19:17:17Z",
              "url": "https://github.com/github/accessibility/discussions/472#discussioncomment-1849012"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "The latest suggestions in this thread will need careful testing.  For example, I don't agree that links with related hovercards should use aria-expanded, nor aria-keyshortcuts, because it will add a significant amount of verbosity and reading disruption for screen reader users.  On the other hand, if a non-standard keyboard shortcut is added to the product, there has to be some way of surfacing it, otherwise nobody will use it and the work will be pointless.  @ichelsea let's discuss at some point.",
              "createdAt": "2022-01-18T17:32:05Z",
              "url": "https://github.com/github/accessibility/discussions/472#discussioncomment-1992097"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "owenniblock"
              },
              "bodyText": "As a counterpoint - I have used (and quite liked) Conventional Commits in the past: https://www.conventionalcommits.org/en/v1.0.0/ - if we're looking for some enforceable standard - then we could do worse than choose something like this.\nHaving said that - I prefer the sort of approach outlined above since it gives us more flexibility 🙂",
              "createdAt": "2021-11-17T11:44:49Z",
              "url": "https://github.com/github/accessibility/discussions/418#discussioncomment-1657452"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "I love the idea of giving Future Us better context, but are we sure commit messages are the right level of granularity? As an alternative, we could enforce squash-merges (so each PR = 1 commit in main) and normalize detailed PR write-ups.",
              "createdAt": "2021-11-17T14:36:23Z",
              "url": "https://github.com/github/accessibility/discussions/418#discussioncomment-1658452"
            },
            {
              "author": {
                "login": "koddsson"
              },
              "bodyText": "I think writing a \"Guide to better commit messages\" in the Hub would be a great addition to our documentation and onboarding!\nI, like many hubbers, appreciate a well-written commit message. They are useful when reading through commits and useful when bisecting to figure out where functionality or bugs were introduced in the codebase.\nWith that being said, I don't feel like those reasons are good enough to start enforcing any kind of commit messages for people other than myself. As @smockle suggests, I find the granularity of Pull Requests to be good enough since I can always find what Pull Request a commit belongs to.",
              "createdAt": "2021-11-18T13:26:16Z",
              "url": "https://github.com/github/accessibility/discussions/418#discussioncomment-1664493"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Thanks for starting this conversation! It is always interesting to discuss different schools of thought around code collaboration.\nGitHub as a whole doesn’t have much of a practice around commit messages but personally it hasn't bothered me too much because I can usually find the information I need as a reviewer in PR descriptions (at least in dotcom since a PR template is used). Generally, when I'm trying to gain context on the whats and whys of a change, I look through the PR description and comments. I don't really care about the intermediate commit messages though one can argue I would if they were written in a way that provides a lot of value. I do rely on commit messages more for my own benefit as I am working, but focus on writing a detailed PR description to provide context for others (and my future self). That's not to say I wouldn't be open to trying something new.\nI do think that implementing a set of practices reaps the most benefits when it is consistently adopted by those working together on the same codebase. More often than not, we are reviewing PRs of people on other teams and people in other teams are reviewing our PRs. What do you think about extending this discussion to outside our team? Some months ago we had a topic at UI engineering code review around squashing vs not squashing commits, so I think this would be a really interesting discussion to have in the next one (December 2nd).",
              "createdAt": "2021-11-22T03:09:42Z",
              "url": "https://github.com/github/accessibility/discussions/418#discussioncomment-1679167"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "@bolonio  Thank you for bringing up this idea! I love that we're shooting to create consistency and reduce ambiguity in our contributions.\nSome thoughts:\n\nI like the idea of adopting a suggested format for commit messages. It can reduce mental overhead switching for new joiners and allow us to communicate more effectively with fewer words.\nI also like the idea of opening this up further to other teams in Engineering. Accessibility Team tends to work across several projects / repos, so I would like thoughts from at least those teams too if we're going to shoot for that consistency everywhere.\n@owenniblock 's suggestion of using Conventional Commits is a strong one IMO. We'd all have to learn an existing standard instead of iterating on a newly-formed one we created, and if it stops serving our needs, we can revisit.\n\nI tend to squash and edit my commits when they get messy, so 👍  to @smockle 's point about enforcing better merge-to-main messages. It may be easier to enforce. However, I'd be more interested in a cross-team agreement than my own personal preferences here.",
              "createdAt": "2021-11-22T15:12:30Z",
              "url": "https://github.com/github/accessibility/discussions/418#discussioncomment-1682111"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "Hi team, I would like to close this discussion with a final decision. I read all your messages and I arrived to a conclusion. Some of you said:\n\nI find the granularity of Pull Requests to be good enough since I can always find what Pull Request a commit belongs to.\n\n\nGenerally, when I'm trying to gain context on the whats and whys of a change, I look through the PR description and comments. I don't really care about the intermediate commit messages though one can argue I would if they were written in a way that provides a lot of value.\n\n\nI tend to squash and edit my commits when they get messy\n\nSo it's clear that forcing a commit message policy within the accessibility team is not shared across all members of the team. So I will leave this discussion as a recommendation to write better commit messages. It's up to you all to choose if to follow it or not.\nTo wrap up the discussion, and following @koddsson's advice, I will write a \"Guide to better commit messages\" in the Hub.",
              "createdAt": "2022-01-13T14:11:53Z",
              "url": "https://github.com/github/accessibility/discussions/418#discussioncomment-1962718"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "alliethu"
              },
              "bodyText": "👋🏼 @owenniblock Interesting thoughts! In all honesty, I don't have much context for why the process exists the way it is today. However, as the person leading the accessibility of our Primer components, this seems like something worth trying.\nRequirements on my end, would include:\n\nA design review during the component's initial stages\n\nPotentially an exploration of how/where this component would be used on GitHub\n\n\nA comprehensive review to ensure we have accounted for all Accessibility criteria",
              "createdAt": "2022-01-10T15:55:09Z",
              "url": "https://github.com/github/accessibility/discussions/533#discussioncomment-1941200"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Overall, I agree with this approach with the following caveats:\n\nOccasionally, we will want to fix something in Primer directly, such as Autocomplete. The initial plan was to create an alternative and replace it, but Autocomplete is still Beta and dotcom only uses it in ~5 places total, so the Primer team agreed we should fix it in place.\nI believe there should be a step 1.a. that uses that dotcom-version component in Discussions to ensure it fits all our needs.\nI agree your proposed process can be our process until it's more reliable to create something in Primer directly.\n\n\nAnother huge advantage of building directly in Primer is we are 100% sure the component is stand-alone and won't have any decoupling to do before upstreaming. (Maybe you included this in your \"intentional component design\" point.)\nOur talk on Ephemeral environments might also make it easier to validate Primer work before we integrate into Dotcom if we can replicate our decisions in the Primer repos.\n\nRe:\n\nIf we make mistakes with functionality, we may not know until we come to integrate it with github/github\n\nI think we could import Primer using a GitHub commit url in package.json or a gemfile to validate in dotcom. Not that it's a perfect system, but it could allow us to be more confident with the integration before finishing Primer work.\nLast thought:\nI believe this is the anticipated workflow that Primer wants from us. They've set aside some resources this quarter to do Upstreaming, which is point #2 in your process proposal.",
              "createdAt": "2022-01-10T15:55:58Z",
              "url": "https://github.com/github/accessibility/discussions/533#discussioncomment-1941212"
            },
            {
              "author": {
                "login": "tallys"
              },
              "bodyText": "I think everyone's aligned that a goal of Primer being a design system that speeds up work, serves components that are dependable and accessible for all of GitHub, and our team is not a bottleneck. Ideally, Primer components can be made in Primer-first or app-level-first. We are working on paving a better path there. But. as our team name suggests, those processes takes some infrastructure work to set up 😄\nA north star for Primer is to be more self-serve.  That being said, components made app-level and upstreamed into the ecosystem (whether Alpha, Beta, Stable) have different requirements. Because they serve GitHub product as a whole, upstreaming components or creating them directly in the Primer repo requires these designs to serve at the system level. Shifting to developing directly in Primer right now would likely make Design Infrastructure a bottleneck. Experimental candidate components built app-level but aligned closely for upstreaming is a path forward.  As an example, we're working with @inkblotty on accessibility creating an app-level component and then us upstreaming it into Primer, with Design Infrastructure designers helping to get those components as 'upstream-ready' as possible. Meanwhile, the Design Infrastructure team is working on creating new system-level components directly in Primer as well as pushing the maturity of existing components forward.\nBasically, the idea of Experimental Candidate components (created outside of the Primer ecosystem initially) is to allow teams to create components as closely aligned with Primer Alpha components without creating an extra dependency.  @owenniblock can you tell me more about the specific case where you're encountering friction that's making you want to work in Primer directly?",
              "createdAt": "2022-01-10T17:17:59Z",
              "url": "https://github.com/github/accessibility/discussions/533#discussioncomment-1941787"
            },
            {
              "author": {
                "login": "mperrotti"
              },
              "bodyText": "I don't think we require that first step of building in github/github, but I've mostly been working with primer/react. I assumed we were just using our best judgment to decide whether a component should be built in Primer.\nHere's what I'd consider when choosing to add directly to Primer:\n\nWhether other products or features might use the component\nHow quickly the product team needs the component\nHow much design and engineering effort will be required to properly maintain this component in the Primer ecosystem\nHow much bigger this component and it's dependencies will make the component package\n\nFor example, a team needs a date picker component for a feature that allows users to filter issues created with in date range:\nI'd recommend this starts in github/github because a date picker is a very complex design pattern that isn't common on GitHub or other products that use Primer. It would be much faster for the team to design and build the component in a way that works for their specific use case, and then upstream to Primer when and if we find more use cases for that component.\nIf we're pretty sure we're going to want a component in Primer, but we won't be able to get it to Alpha status in time to launch the feature, we can treat it as an Experimental Candidate that isn't in the component package's main bundle. For example: primer/react has \"draft\" components: https://github.com/primer/react/blob/main/src/drafts.ts",
              "createdAt": "2022-01-10T19:28:08Z",
              "url": "https://github.com/github/accessibility/discussions/533#discussioncomment-1942665"
            },
            {
              "author": {
                "login": "pouretrebelle"
              },
              "bodyText": "I fully agree with the principle that we should build new accessible patterns directly into our design system for general use, but right now I think it’s much more practical to build them in github.com with a view to upstreaming. As well as the points others have noted about requiring a higher level of maturity and being locked into Primer release cycles, I have to stress how difficult the current workflow is for building a Primer ViewComponent that requires CSS additions/changes.\nUntil now ViewComponents have only been made when there was already an equivalent Primer CSS pattern in use so there hasn’t been any library race conditions. Some more recent changes to ViewComponents have used Primer CSS utility classes instead of dedicated Primer CSS component classes which have caused so many issues that we’re removing them all and outlawing that method of styling. Primer CSS and Primer ViewComponents are in separate repos and on separate releasing cycles so all the development has to happen separately. Testing your Primer CSS changes in Primer ViewComponents locally is painful (although @hectaherz and I are working on improving this), but the real problems arise if you want to make any changes to the API or styling after a component has first been introduced, which could mean 3 releases of each library to add a change, deprecate the previous feature, and then remove the previous feature. If a component is being developed inside github.com all you’d have to do is make the change in one PR. (n.b. Primer React doesn’t have this dependency issue because the CSS is written within the React libray)\nI’m with @tallys that I’d love love love adding to Primer directly to be the obvious choice which empowers people to make great, accessible components, but currently the infrastructure isn’t set up for that to be a productive workflow.",
              "createdAt": "2022-01-11T15:53:46Z",
              "url": "https://github.com/github/accessibility/discussions/533#discussioncomment-1948671"
            },
            {
              "author": {
                "login": "owenniblock"
              },
              "bodyText": "I have created a tracking issue here: #551 - I will update this with the friction everyone has highlighted in this discussion and also any items we find along our development 🎉",
              "createdAt": "2022-01-12T11:56:10Z",
              "url": "https://github.com/github/accessibility/discussions/533#discussioncomment-1954310"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Thank you for starting this @inkblotty! I will provide a specific example I am running across in my tooltip work.\nAt GitHub, we have several custom web component elements that live in a standalone repo such as details-dialog, auto-complete. Following these paradigms, I am working on a tooltip web component with an HTML markup like:\n<button id=\"some-button\">👍</button>\n<tooltip data-type=\"label\"  for=\"some-button\">This is tooltip text for button</tooltip>\nwhich may eventually live in a standalone repo.\nWith this custom tooltip element, there are a couple of accessibility requirements I'd like to enforce:\n\nTooltip is adjacent to the trigger element.\nTooltip is set on interactive elements.\n\nThis check is very easy to do in runtime in JavaScript as one has access to exactly the trigger element renders as, and its location within the HTML tree. One approach would be throw a client-side JS error in the custom element code and prevent tooltip from appearing at all:\nthrow new Error('Tooltip is only allowed on interactive elements')\nThe downside is that client-side errors are not surfaced well to developers unless people are paying attention to their console. The one benefit is that it lets us take an explicit stance on how the element should be used (by not allowing an inaccessible element to render at all), without expecting the consumer to have a system like ours set up (axe, erblint, eslint, etc.) One idea we also discussed is to throw errors only in development mode or modify the UI in a very obvious way. This would achieve a similar purpose to axe, but\nmaybe there is a way to achieve this in standalone code for those outside our ecosystem.\nAnother route is not throwing errors at all even when a consumer is using the element inaccessible, and rely entirely on dev tools like axe and linters to surface accessibility violation. Linters are ideal as it shifts these accessibility checks as left as possible, but there are limitations. Some checks just won't be reliably enforced with ERB which doesn't have access to runtime info. You can see my full comment on limitations of ERB. Axe checks are also great but may still allow inaccessible code to be shipped. However, axe may still be surfaced more explicitly than a console error.\nThis has lead to some conversations we as a team don't have a clear stance on:\n\nWhat approach does our team want to take when it comes to enforcing accessible usage? Do we want inaccessible usage to break things completely?\nFor something like the standalone custom element repos we have, are there ways we can strongly nudge developers to consume the element accessibly outside of just documentation/pointing to other tools?\n\nParticularly, client-side errors aren't surfaced well and curious if others have some experience/ideas with this issue :)",
              "createdAt": "2021-12-07T22:00:37Z",
              "url": "https://github.com/github/accessibility/discussions/460#discussioncomment-1769123"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "One solution I'd like thoughts about for repos outside of dotcom (like auto-complete-element) is to export a custom validation function1 that uses JS Dom to validate the use case the developer has implemented.\nThis would not throw errors in development or remove problematic items from the DOM, but it also wouldn't rely on the developer to have aXe or ES Lint configured in their project.\nHowever, it does require that the end developer use the validation function in their own testing suite.\nFootnotes\n\n\nThis example is a WIP for discussion purposes / not production ready ↩",
              "createdAt": "2021-12-10T15:34:06Z",
              "url": "https://github.com/github/accessibility/discussions/460#discussioncomment-1786320"
            },
            {
              "author": {
                "login": "andrialexandrou"
              },
              "bodyText": "These are my general preferences for how to surface such things, but I need more time in dotcom and with our current tooling to understand the specifics of how these might be applied. Generally I like:\n\npushing the \"error\" left, as in, earlier in the development process.\nsurfacing it as loudly as possible, as in, failing to render a whole page if need be,\nproviding a link to documentation with guidelines for the fixes, and\nintroducing the violation rules in a staged manner, so as to avoid throwing dotcom development into a total standstill before everything is fixed, or possibly applying the rules only to new work and not existing work, until a baseline of compliance is met",
              "createdAt": "2021-12-10T16:43:49Z",
              "url": "https://github.com/github/accessibility/discussions/460#discussioncomment-1786814"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Also, previously in other teams we have purchased gift cards (around 75-100 USD) or gifts and sent them out. This is how I have learned that in many countries shipments of food or even candy are stopped/confiscated by customs. Shipping to Europe from the USA can exceed the cost of the gift and it is generally over 100 USD for a small package.\nIf we were to do something like that it is easier to have each person buy the equipment needed for the activity and then expense it.",
              "createdAt": "2021-12-03T23:08:51Z",
              "url": "https://github.com/github/accessibility/discussions/443#discussioncomment-1747170"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Here are some other ideas:\n\nWe could have a \"holiday\" zoom party where we play a game and we can expense a meal. There is a $25 or $75 limit per finance rules.\nThere are some online events that we can do as a group: see AirBnB online experiences. I have done a few with other teams: escape room, virtual cooking classes (we expense the ingredients), and other cultural experiences.",
              "createdAt": "2021-12-03T23:16:14Z",
              "url": "https://github.com/github/accessibility/discussions/443#discussioncomment-1747187"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @inkblotty in https://github.slack.com/archives/C01UWR2MEUB/p1641297600257800:\n\nIn my next one-on-one with each of you, I’ll be asking about any open Discussions you created and we’ll decide if they’ve been answered and can be closed. Please look over your Discussions before then.\n\nClosing this discussion; we had a virtual party on 2021-12-13: https://github.com/github/accessibility/blob/main/docs/2021-12-13-virtual-party.md",
              "createdAt": "2022-01-05T15:42:40Z",
              "url": "https://github.com/github/accessibility/discussions/443#discussioncomment-1913268"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "If we automate this, I suggest we also write automation to suggest new questions to Geekbot and a way to label them as rotation questions or one-off questions.",
              "createdAt": "2021-11-30T21:15:59Z",
              "url": "https://github.com/github/accessibility/discussions/442#discussioncomment-1724787"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @inkblotty in https://github.slack.com/archives/C01UWR2MEUB/p1641297600257800:\n\nIn my next one-on-one with each of you, I’ll be asking about any open Discussions you created and we’ll decide if they’ve been answered and can be closed. Please look over your Discussions before then.\n\nThere is consensus about both what we should build and how we should build it, but I’d suggest the proposed workflow is low-priority:\n\nIt’s not directly related to a FY22Q3 KR\nIt doesn’t directly benefit customers\nIt saves a moderate amount of time for our team\nIt has a low ongoing maintenance cost",
              "createdAt": "2022-01-05T15:41:17Z",
              "url": "https://github.com/github/accessibility/discussions/442#discussioncomment-1913262"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @inkblotty in https://github.slack.com/archives/C01UWR2MEUB/p1641297600257800:\n\nIn my next one-on-one with each of you, I’ll be asking about any open Discussions you created and we’ll decide if they’ve been answered and can be closed. Please look over your Discussions before then.\n\nWe can close this discussion. We’re focused on new epics and KRs in FY22Q3.\n[Data] [Story] Data.GitHubApp tracking: Progress on Epic Issues (#511) is something of a spiritual successor to this—although that issue is not strictly automation-related, it serves the same root goal as the automation discussed here: Making our work easier to track.",
              "createdAt": "2022-01-05T15:32:48Z",
              "url": "https://github.com/github/accessibility/discussions/196#discussioncomment-1913213"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "I’ve created the discussion to gather new ideas on How to handle holidays/calendars/availability? You can find it here: #395",
              "createdAt": "2021-11-03T13:51:17Z",
              "url": "https://github.com/github/accessibility/discussions/394#discussioncomment-1582152"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @bolonio in #394 (comment):\n\nThings that we should improve\n\n\nSince we're a very distributed team, how about the idea of having a bank-holiday calendar for the different countries/states we are located, so we all know when that happens? I know we can always rely on the OOO calendar booking for everyone, but maybe knowing the bank-holidays would be beneficial when talking to different teams as well. It's just an idea.\n\nDiscussion: communities of belonging from Clay. Seen this idea play out here.\nCalendar: GitHub calendar with all holidays? Not accurate?\nhttps://thehub.github.com/github/celebrations/\nhttps://thehub.github.com/hr/total-rewards/pto-vacation-and-holidays/#holidays\nhttps://seramount.com/articles/category/heritage-months/\n\n\n\n\n@octopotato created a calendar for US bank holidays and shared it in #human-resources (thread)\nUpdate: I’ll link to this in #395",
              "createdAt": "2021-12-15T21:22:22Z",
              "url": "https://github.com/github/accessibility/discussions/394#discussioncomment-1817265"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "This is super hard because there is a school of thought that suggests \"checklists are dangerous\" because they convey a sense that complex issues can be reduced to a simple list. I don't subscribe to this school but it gives me pause.\nChecklist improvements\nI think the checklist is pretty good but could be improved in a few of ways:\n\nEven if it's mentioned elsewhere in the list, we should be very clear that we recommend the use of Primer\nNo mention of automation e.g., axe.\n\nI can't help but think that this should be the first thing devs should be doing. I like axe because it has remediation steps and links to more info.\n\n\nIt would be good to see links to deep dives related to each point in the checklist.\n\nThis way if i forget what \"Are error descriptions programmatically associated with their form element?\" means I can quickly look it up.\n\n\n\nAims\nShould we be aiming for full WCAG compliance as part of production readiness?\n\nPurist view: yes, definitely. This is what we want.\nPractical view: If the dev is 100% flying solo (i.e., no testing by an a11y SME), is this realistic?\nIs there a middle ground? Something like:\n\nUse Primer (get a11y for free)\nNo issues when running a \"Fast Pass\"\nMore?\n\n\n\nTooling\nTo be blunt, do we have the right tools available to our devs? Are there tools that can go further than Fast Pass without needing to be an a11y SME? I think axe DevTools Pro does a good job here.\nHappy to work with the tools we have for now but tooling bugs me.\nProgrammatic testing\nWhat role does a11y automation play in unit tests, CI/CD, end-to-end testing? Who should write these tests? Should this be in the checklist?\nSorry - more questions than answers from me!",
              "createdAt": "2021-08-26T13:35:26Z",
              "url": "https://github.com/github/accessibility/discussions/202#discussioncomment-1239390"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Are our expectations for “production-ready” feature code exactly the same as our expectations for “stable” UI library components? If so, we can reuse the checklist we’re developing in #184.\n\n\nWe’ve previously rejected the idea of adding an “Accessibility Impact” section (for now) to github/github’s PR template for two reasons (which I’m absolutely open to reconsidering, but wanted to mention):\n\nWe expect that’d result in an increase in the number of team pings, exceeding our current capacity (especially since support would require non-scalable 1:1 conversations until we have more self-serve documentation)\nThough not mutually-exclusive with a production-readiness check, we believe in “shifting left” accessibility planning towards the design phase (i.e. we don’t want to raise blocking concerns after a developer has sunk time into a PR they believe is near-ready).",
              "createdAt": "2021-08-26T14:54:14Z",
              "url": "https://github.com/github/accessibility/discussions/202#discussioncomment-1239799"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "My issue with a checklist like the one linked from the hub is, it's very long and it doesn't provide any guidance on how to test for each item. I can see how even an experienced engineer without a lot of web accessibility context could get overwhelmed by it, leading to just ignoring it. Here's a proposal:\n\nPrioritize #189\nAs part of #189, write docs on how to use axe and recommend an \"axe-clean\" build\nSelect a subset of the Checklist for Developers that doesn't overlap with what axe give us and write documentation on how to test for and remediate that subset of issues\nRecommend other things for the production readiness checklist (e.g. are you using primer? was an accessibility design review conducted for this feature?\n\nThis proposal gives me a bit of pause though in terms of being too narrow in intent (compliance vs. actual accessibility and good user experience). I'd be great to get some feedback on this from @jscholes + @sinabahram",
              "createdAt": "2021-08-26T18:51:02Z",
              "url": "https://github.com/github/accessibility/discussions/202#discussioncomment-1240961"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Feedback from @jscholes\n\"My gut reaction is that this comment from yourself is right on-point: \"This proposal gives me a bit of pause though in terms of being too narrow in intent (compliance vs. actual accessibility and good user experience).\".  Checklists and automation are, unfortunately, not sufficient on their own to guarantee any particular outcome.  However, trying to increase the use of Primer (or other components that are in a known good state) is a positive thing.\"\n\"Overall, this topic is extremely complex and should probably be prioritised for some synchronous time post-September.\nThe comments from @khiga8 are also worth talking about, i.e. \"It's very hard to convince a team to not release a feature after they've already built it...\".  I absolutely agree with this, and it is a recurring problem to solve at many orgs we have worked with.  There are times to be somewhat heavy-handed as in, having a policy that something proven to be inaccessible cannot ship, or timelines that teams must stick to in terms of fixing less severe a11y issues.  But those have to be paired with some strategies and willingness to work with a team earlier in the lifecycle, otherwise it's just like, \"we didn't tell you how to build an accessible component and now we're telling you how badly you did on your own\", sort of thing.\"",
              "createdAt": "2021-08-30T21:00:47Z",
              "url": "https://github.com/github/accessibility/discussions/202#discussioncomment-1256193"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "I'm going to schedule a call with @katestud to go over this feedback and brainstorm on where to go from here. Could I get some 👍  from those who want to join us?\ncc: @github/accessibility",
              "createdAt": "2021-08-30T21:05:54Z",
              "url": "https://github.com/github/accessibility/discussions/202#discussioncomment-1256235"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "The Security teams announced a new checklist that reminded me of this discussion, especially given @benjiallen’s suggestion that we could benefit from emulating Security’s messaging and tactics.",
              "createdAt": "2021-12-11T02:03:03Z",
              "url": "https://github.com/github/accessibility/discussions/202#discussioncomment-1789388"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "divais"
              },
              "bodyText": "Thanks Ben for the audit and sharing your findings. Let me look at the issues created as well as Scenarios and Product classification and we can meet next week.\ncc @richakumar",
              "createdAt": "2021-09-21T16:56:20Z",
              "url": "https://github.com/github/accessibility/discussions/264#discussioncomment-1363369"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Hi @divais When you schedule the meeting with @benjiallen please add me as well, I am the technical program manager for accessibility.",
              "createdAt": "2021-09-24T15:13:32Z",
              "url": "https://github.com/github/accessibility/discussions/264#discussioncomment-1380482"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "7 Steps to Make Learning More Accessible posting here just in case there is interest from the education team.",
              "createdAt": "2021-10-09T20:34:24Z",
              "url": "https://github.com/github/accessibility/discussions/264#discussioncomment-1453553"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "Hi :wave Education team @divais  @kevinsawicki\nThe Accessibility Audit for the Education website was performed in May-July of 2021, and the results (288 issues) are here: https://github.com/github/github/issues?q=is%3Aopen+is%3Aissue+label%3A%22a11y+audit+2021%22+in%3Atitle+%22%5BEDU%22+\n@kevinsawicki  I recently learned that the older Education sites are now maintained by the India Education team, and we need to work with you to get on their schedule so they can work on remediation. We are in the process of scheduling audits and remediation for Q3 and Q4.\nSince the Education audit was completed several months ago, we need to understand if/how much the sites have changed. This will give us an idea if the findings from the audit still apply.\nIf some of the sites have changed, then a new audit would need to be scheduled in the future and aligned with engineering resources to start remediation shortly after the issues are reported.\nFor the findings that still apply we would need to schedule some time for your engineering team to work with the Accessibility team for remediation. There is some urgency to do this before all bugs become stale. At this time we are trying to schedule teams for Q3 and Q4. So we would need to know if this timing works for you. Please let us know.\nOur Accessibility audit and remediation process has also been evolving, this document explains how it currently works for all new audits:\nhttps://github.com/github/accessibility/blob/main/audit/process.md\nThanks! and I am happy to set up some time to chat and answer any questions.\ncc @arelia",
              "createdAt": "2021-12-09T19:25:34Z",
              "url": "https://github.com/github/accessibility/discussions/264#discussioncomment-1781414"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Thanks for starting this discussion, @bolonio! ❤️\n[Proposal] Reactions experience #421, describes (among other things) new aria-labels for reaction buttons which identify the associated comment. Comment identifiers are as succinct as possible for disambiguation. @ichelsea listed examples from @jscholes in #421 (comment):\n\n\nUpvote (4): benjiallen, 2:45PM today\nUpvote (4): benjiallen, 2:45:03PM today\nUpvote (4): benjiallen, 2:45PM yesterday\nUpvote (4): benjiallen, 2:45PM on November 19\nUpvote (4): benjiallen, 2:45PM on November 19, 2021\n\n\nA cursory search of Making Content Usable for People with Cognitive and Learning Disabilities lead me to 4.4.13 Provide Alternatives for Numerical Concepts (Pattern), which includes the following:\n\n4.4.13.2 What to Do\nProvide alternatives for numbers and numerical concepts.\n4.4.13.5 Examples\nUse:\n\nExtra support for numerical content such as:\n\n\ntime\ndate\n\n\nIs there an alternative to the aria-labels listed above that would better align with the guidance in 4.4.13 Provide Alternatives for Numerical Concepts (Pattern)?",
              "createdAt": "2021-11-30T20:55:26Z",
              "url": "https://github.com/github/accessibility/discussions/438#discussioncomment-1724706"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@smockle\n\nIs there an alternative to the aria-labels listed above that would better align with the guidance in 4.4.13 Provide Alternatives for Numerical Concepts (Pattern)?\n\nI did read over this section on our call, when we were putting the examples together.  I think the proposed patterns already do a decent job, e.g. by distinguishing \"today\" and \"yesterday\" as relative, textual cases.  But anything beyond that, e.g. \"last Tuesday\", would be more of a cognitive burden than less.\nI'll also note that, as is the W3C's standard practice when it comes to neurodiversity, they don't provide any concrete examples of what \"alternatives\" and \"extra support\" represent.  The fact that \"Numerical content without extra support\" is listed as an example of something to avoid is so vague as to be useless.",
              "createdAt": "2021-12-01T19:52:48Z",
              "url": "https://github.com/github/accessibility/discussions/438#discussioncomment-1731152"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "@bolonio Were there any next steps that came out of this call? I would love to partner with WAI on the changes we're making now and plan to make in the future.",
              "createdAt": "2021-12-02T18:39:10Z",
              "url": "https://github.com/github/accessibility/discussions/438#discussioncomment-1739307"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "New email from Steve (W3C):\n\nHi Ben, Adrián\nHere are some resources I mentioned in our chat\n\nThe WAI website - a real Treasure Chest of info https://www.w3.org/WAI/\nCognitive Accessibility Content Usable summary section as introduction https://w3c.github.io/coga/content-usable/#summary\nDraft of interactive web version of the COGA Design Guide (expect lots of churn)\nhttps://619622708365e0000810ef64--wai-wcag-supplemental.netlify.app/wcag-supplemental/supplemental-guidance/\n\nWe didn't discuss low vision - we're developing a design guide to go along beside the COGA one. That's not in a fit state to share quite yet.\nWCAG\nI think one of the most WAI useful tools for WCAG is the Quick Ref. It acts as useful gateway into all the WCAG resources at W3C. It is due a refresh very soon :)\n\nhttps://www.w3.org/WAI/WCAG21/quickref/\n\nIn addition were are working on providing easier access to WCAG supporting resources like the techniques and ACT rules via the WAI website\nATAG\nI'm not sure how familiar you are with ATAG but it definitely seems relevant to you. I've picked up a ATAG tool project after Hidde left and I think it is very relevant to you. We've contacted a number of vendors who are keen to be involved and I'd love to add the GitHub a11y team.\nThe idea is to work with you as I refine the tool, providing feedback on how to make it most useful to you.\nThere are actually two tools capturing different but related information from Vendors like GitHub.\nATAG Report Tool\n\nhttps://www.w3.org/WAI/atag/report-tool/\n\nUseful to assess your maturity and highlight features. Also a good entry point for you on ATAG. We have a number of vendors working with us - mostly CMSs\nList of Vendors who provide authoring tools\nEarly Prototype - https://61aa02abfd6f71000883bec6--wai-authoring-tools-list.netlify.app/authoring-tools-list/\nMetadata about the vendor to supplement the Report\nPlease do let me know if you'd like to be involved in this effort.\nCollaboration\nI'm looking forward to working more with you both. I'll discuss the options with the WAI Team and get back to you.\nNormally people work with the W3C and hence the WAI by becoming a member. A W3C member organisation nominates a single representative who have access to various benefits. GitHub doesn't appear to be a member.\nhttps://www.w3.org/Consortium/membership",
              "createdAt": "2021-12-03T13:11:57Z",
              "url": "https://github.com/github/accessibility/discussions/438#discussioncomment-1743947"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @bolonio in #445 (comment):\n\n\n@smockle: Assess ownership of all our meetings and make sure have co-owners\n\n\nOpened #441 to track this work",
              "createdAt": "2021-12-01T17:52:59Z",
              "url": "https://github.com/github/accessibility/discussions/445#discussioncomment-1729962"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "From @bolonio in #445 (comment):\n\n\n@smockle and @inkblotty: Discuss where .a11y bot can go\n\n\nAdded this to our 1:1 doc for discussion.",
              "createdAt": "2021-12-01T17:53:57Z",
              "url": "https://github.com/github/accessibility/discussions/445#discussioncomment-1729965"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Semi-related: #440, by way of #348 (comment), where @smockle suggests: “I’d recommend we…[c]onduct a retro at the end of the quarter to capture outcomes and learnings…[from the npm partnership]”",
              "createdAt": "2021-11-30T20:05:36Z",
              "url": "https://github.com/github/accessibility/discussions/355#discussioncomment-1724471"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "What was the last README¹ you² liked, and why did you like it?\n⁂\n¹ Considering both public project READMEs and ones for internal teams at GitHub\n² Addressing everyone, not just Ben",
              "createdAt": "2021-08-09T16:46:24Z",
              "url": "https://github.com/github/accessibility/discussions/149#discussioncomment-1150404"
            },
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "I like the idea of the High level - what is a11y?, maybe a bit more specific, something like \"a11y in GitHub\" where we can write what we do, why, the value of the team, the tools that we provide...a bit of information for the rest of the engineering teams.",
              "createdAt": "2021-08-10T08:46:05Z",
              "url": "https://github.com/github/accessibility/discussions/149#discussioncomment-1153112"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Start Proposal\n[Header - Team Name]\n\n[Org Breadcrumbs]\n\n[What We Do]\n\nSummary of our role and guiding principles\nList of our AoR\nLink to our latest OKRs [each quarter we can create a new md file with ORKs and add them to a docs folder]\nLink to our team charter [separate md doc that talks about our vision, mission, and principles in more detail ]\nLink to our project board\n\n[Who We Are]\n\nTeam roster\n\n[How to Work with Us]\n\nTalk about how to report an accessibility issue, request a PR review, request a consult on accessibility, etc\nLink to our FR docs\n\n[How to Learn?]\n\nMentions any docs or trainings we have produced for helping people learn about accessibility\nLinks to The Hub docs\nLinks to trainings we recommend [on thehub?]\nLinks to tools we recommend [on thehub?]\n\nEnd Proposal\nNotes:\n\nMove the parts of the current content we want to keep to a separate md file we link from the README. I mean the ones on these sections:\n\nDesigning for human diversity,\nThe current state of accessibility within the GitHub Universe,\nHelpful Links, and\nAdditional resources to a separate\n\n\nIs this accurate \"The #accessibility Slack uses hubot to print out any tweets with \"github\" and \"accessibility\" in them, so it's a good place to hear about site issues or new a11y-related projects.\"?\nCould I get some feedback and suggestions for improving all this @github/accessibility? Thanks! 🙇🏻‍♂️",
              "createdAt": "2021-08-31T09:12:11Z",
              "url": "https://github.com/github/accessibility/discussions/149#discussioncomment-1258497"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "This is fun https://readme.so/\nLink found on this site:\nhttps://github.com/matiassingers/awesome-readme",
              "createdAt": "2021-09-17T19:51:51Z",
              "url": "https://github.com/github/accessibility/discussions/149#discussioncomment-1349094"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "I proposed some updates in here: #344\nAlso, I would like to publish this soon since we published the team post for recruiting teams who want to work on accessibility and I think it would be nice to provide some high-level information.",
              "createdAt": "2021-11-04T17:32:15Z",
              "url": "https://github.com/github/accessibility/discussions/149#discussioncomment-1590269"
            },
            {
              "author": {
                "login": "alebourne"
              },
              "bodyText": "The main change I am proposing is to add a high level overview of the Accessibility program. You can read my proposal in the PR above.",
              "createdAt": "2021-11-04T17:33:18Z",
              "url": "https://github.com/github/accessibility/discussions/149#discussioncomment-1590281"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Action Items\n[…]\n\n@smockle Make sure everyone has access to the accessibility 1password vault\n\n\nOpened github/entitlements#31593 to resolve this!",
              "createdAt": "2021-10-06T05:46:51Z",
              "url": "https://github.com/github/accessibility/discussions/294#discussioncomment-1433773"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Action Items\n[...]\n\n@JoseInTheArena Give everyone permissions to edit Rewatch captions\n\n\nAsked IT about this and it looks like there's no way to edit the transcript for a video you didn't upload. See slack thread.\n\nPatrick BenitezAPP  18 hours ago\nHi Jose I tried testing this out with my manager and we tried poking around in the Rewatch admin portal and we weren't able to find permissions that allowed user's to do that. Please let me know if you have any questions or need anything else.",
              "createdAt": "2021-10-06T17:20:06Z",
              "url": "https://github.com/github/accessibility/discussions/294#discussioncomment-1437957"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "Iteration 1 - Week of Aug 30th\nFirst iteration and subsequent comments/feedback were posted in Epic #110",
              "createdAt": "2021-09-08T20:44:01Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1298227"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "@ichelsea thanks for getting this started. Going back to my questions about keyboard hints in the UI. If we turn off all keyboard hints in the UI, how would this affect our internal communication? Any ideas on how we tell everyone about it? Would we just do a staff ship and wait for feedback? Perhaps that's a question for @gaknoll.\nI'm just thinking that those hints will involve us putting our hands in a lot more feature team code.\ncc: @khiga8",
              "createdAt": "2021-09-08T21:11:50Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1298311"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "@ichelsea @alliethu I had a follow up from sprint planning to go looking for save patterns and potentially draft a proposal. I don't think a proposal is needed but I wanted to share what I found:\n\nSaving patterns docs #36\nPrimer messaging\n\nWas there a save pattern that you were thinking of for this problem?",
              "createdAt": "2021-09-09T18:36:42Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1303217"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "Iteration 2 - Week of Sept 6\nIteration 2 Figma link\nTrying my best to keep the page as simple as possible as to not overwhelm users. Here is a GIF of an exploration of a progressive disclosure option. Description is below\n\nFlow description:\n\nUser comes to the accessibility settings tab in settings and is presented with the Keyboard shortcuts setting\nFirst selected checkbox encountered is \"Enable keyboard shortcuts\"\nUnderneath the first checkbox is a second, \"Enable single character shortcuts\" (for implementation purposes, the second checkbox is not nested within the first, but is visually shifted to the right to indicate hierarchy)\nUnderneath the second checkbox is a button, \"Customize shortcuts\"\nIf the user unselects \"Enable keyboard shortcuts\", then both customize and the second checkbox would not appear.\n\nNotes:\n\nThis flow lends itself to start as an MVP and grow into a more robust solution.\n\nStep 1: Enable/Disable all\nStep 2: Enable/Disable single character shortcuts\nStep 3: Customize shortcuts\n\n\n\"Customize shortcuts\" will allow you to customize any shortcut created by GitHub. Anything that is a single key shortcut will have some kind of indicator if \"enable single key shortcuts\" is not selected.\n\nQuestions:\n\nWill screen reader users easily discover this second option and the customize button? (i.e., when they reach the first checkbox will they think to search further?)\nDo we already have settings that disappear or are they disabled? (I will check for this)",
              "createdAt": "2021-09-09T19:08:53Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1303385"
            },
            {
              "author": {
                "login": "broccolini"
              },
              "bodyText": "I'm not sure this is the best location to post all of this as some discussion was started in the original issue, but there's lots of new questions here, so here's my thoughts:\n\nLet's put the settings in their own Accessibility tab. This helps communicate to customers that we're working on Accessibility and that there will be more controls added in future.\nIf we can do this iteratively so as to get the most important controls to users asap, here's how I think we could prioritize. It would be great to align on this so that the design can be broken into near term and long term, and I'd guess you'd want the same for eng too.\n\nShip the on/off switch for keyboard users. Leave it defaulted to on by default for now, and not worry about hiding keyboard short hints from users. This seems like something we need to do asap so we solve problems immediately for customers and also show we are listening to feedback.\nFollow up with rollout to offer granularity with single vs multi-character keyboard shortcuts\nNext, change the default to off (it looks like y'all agree that's the right call). This will require communication to customers (though we could leave it on for all customers who haven't otherwise customized their settings to off, and default to off for any new customers, and introduce them to keyboard shortcuts settings via the existing tips)\nTips don't cause UX issues or address fine grained controls, so I'd de-prioritize this to later, at worst it might be a little confusing to those who switched them off, but I think we can live with that in the interim. When we do address, I think we should consider tips as a place to introduce them to the settings too, as per above. In terms of communicating to hubbers, I would suggest this be an item in part of a larger ship checklist for accessibility. Ideally we look for a systematic approach rather than individual one-off solutions too.\nNext, explore customizing, if we want to do that. That seems far into the nice to have category compared to the other issues.",
              "createdAt": "2021-09-13T22:16:15Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1320921"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "Interaction patterns for remapping\nI've looked into some interaction patterns for remapping based on our deep dive with @jscholes! This page looks at having the keyboard shortcuts on the page and not hidden behind a button. There are no checkboxes to bulk enable/disable various features (though the options are available through a separate menu). Listing two GIFs along with explanatory text:\nFlow 1:\nRight now, some features have two different shortcuts that perform the same action. This first flow looks at how we could potentially keep them separate if users still wanted to different ways, or just one.\n\n\nUser clicks on the first shortcut key area for activating search, s, the area activates and the user presses the command and s keys to set a remap.\nTabbing brings the user to the next additional shortcut for the same feature. The user does not need a second method to reach the search feature on the keyboard so they tab to the next section, effectively leaving it blank.\nThe third area here is the 'more' menu, which provide the option to reset to default mapping or clear the keys mapping (rendering no shortcuts for the search feature)\n\nFlow 2:\nWhile GitHub has the ability to give multiple shortcuts for a feature (not recommended), if a user wants to remap, they can only choose one shortcut combo.\n\n\nUser clicks on the shortcut labeled, \" s or / \". It is activated by a click (or enter on a keyboard after focus).\nUser sets their desired shortcut by typing on the keyboard, command + s\nUser tabs out of the shortcut area to set their desired shortcut and moves to the \"more\" option on that row.\n\nNotes:\n\nThere are more questions that need to be answered on this page, like how do we display this if users set single key shortcuts to off?This was an exploration of interaction patterns with remapping only.\nZoom has a pattern that if you don't type anything after activating, the default stays the same when you exit. They also don't allow you to type more than one single character, even if you've used modifier keys. We could do something like that to set instead of \"tab\" or \"enter\".\nUsers will not be able to use escenter or tab as keyboard shortcuts",
              "createdAt": "2021-09-13T23:31:02Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1321099"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@ichelsea Maybe another deep dive on this would be helpful at some point, so we can talk through the various options?",
              "createdAt": "2021-09-13T23:48:31Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1321140"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "MVP proposal for enable/ disable control.\nThis covers the control and interaction for the MVP of our accessibility keyboard settings epic.\nTo be solidified:\n\nSave pattern\ncc: @alliethu\n\nDirect MVP Figma link.\n\nThe description under the Keyboard shortcuts header gives direction on how to view all screenshots with both a link to this information and a shortcut to view on any page (if shortcuts are enabled)\nThe help text under this enable shortcuts setting may or may not be necessary but gives more context into what shortcuts will be disabled on github.com.\nFeedback and next steps:\n\ncc: @benjiallen @broccolini",
              "createdAt": "2021-09-15T21:50:13Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1335663"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Non-blocking question - what happens if you can only access a feature via keyboard shortcut? I don't like the idea of having these 2 experiences:\n\nA product with keyboard shortcuts and access to all features\nA product with no keyboard shortcuts and limited access to all features\n\nLet's assume for a second that you could only get to the web editor experience via keyboard shortcut and you turn off keyboard shortcuts. Is it ok that we don't provide another option to activate the web editor via the UI?\nI think my preference would be to provide equal access wherever possible.\nPlaying devil's advocate - the user has a setting, they can always toggle the setting. Is that a good argument? I'm thinking \"no\" because the keyboard shortcut enabled experience may still be a problem for people with disabilities.\n@jscholes any thoughts on this?",
              "createdAt": "2021-09-16T15:35:16Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1342991"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@benjiallen\n\nwhat happens if you can only access a feature via keyboard shortcut?\n\nThat feature is fundamentally inaccessible to someone, regardless of keyboard-related settings.  For example, how does a user, assistive technology user or not, activate the feature on an iPhone with no Bluetooth keyboard connected?  So the most ideal scenario is that a critical priority ticket is raised with the product team responsible for that feature, insisting that they add a corresponding control to the UI posthaste.\n\nIs it ok that we don't provide another option to activate the web editor via the UI?\n\nNo, it is very much broken.",
              "createdAt": "2021-09-16T16:07:51Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1343155"
            },
            {
              "author": {
                "login": "alliethu"
              },
              "bodyText": "Save Pattern thoughts\nAfter reading through our Messaging Feedback UI-Pattern, my initial reaction was to propose we use the Toast component to inform the user their setting has been saved. However, I came across @ichelsea Accessibility feedback on Toast usage, which made me feel Toasts might not be the best solution.\nOut of the save patterns that are currently live, I propose we move forward with the inline validation pattern, with the caveat that we also include a more detailed response for Screen Reader users to let them know their setting has been saved.\ncc: @yaili We should probably update our Interface Guidelines to include this pattern for messaging.\nCurrent SR Experience\nThe Screen Reader informs the user they have checked/unchecked the checkbox, but not that their setting has been saved.\n\n  \n    \n    \n\n    checkbox_current.mov\n    \n  \n\n  \n\n  \n\n\n\nProposed SR Experience\nThe Screen Reader informs the user they have checked/unchecked the checkbox, and their setting has been saved.\n\n  \n    \n    \n\n    checkbox_proposed.mov\n    \n  \n\n  \n\n  \n\n\n\nAccessibility annotation of the checkbox component\n\ncc: @benjiallen I've updated the hint text based on your suggestion. I'm also open to alternatives for, \"Setting Saved.\"",
              "createdAt": "2021-09-16T17:12:06Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1343461"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "The Screen Reader informs the user they have checked/unchecked the checkbox, and their setting has been saved.\n\nI'm going to push back on this, because it's an incorrect use of semantics.  Check boxes do not carry out actions, they allow a user to declaratively specify their preferences before submitting them at a later point.  If it were implemented, PAC would raise the proposed pattern as a WCAG violation in any future audit, and it definitely seems suboptimal to implement anything where we know that to be the case.\nI will always lobby for an explicit save mechanism wherever one makes sense and/or is possible.  However, if it has been determined that such a pattern is not feasible here, a possible alternative to a check box would be a toggle button.  That is, a <button> with aria-pressed, that would carry binary state like a check box, while also explicitly declaring that \"hey, this control does something\".\nWe have to be careful with toggle button labelling, though; the label shouldn't change based on state because this gets confusing very quickly.  For example, imagine hearing something like, \"Disable keyboard shortcuts toggle button pressed\".  Does this imply that shortcuts are currently enabled and that the button will disable them?  Or the other way around?  I'd suggest:\n\nLabel in all states: \"Enable keyboard shortcuts\" (or similar)\naria-pressed=\"true\" means that shortcuts are switched on.\naria-pressed=\"false\" means that they are not.",
              "createdAt": "2021-09-16T17:22:08Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1343506"
            },
            {
              "author": {
                "login": "alliethu"
              },
              "bodyText": "@jscholes - Update: It appears that we do have not have a toggle component in Primer at this point. I plan to ping the appropriate people to get this added, and potentially prioritized to our backlog. Stay tuned for a different saving option...",
              "createdAt": "2021-09-16T20:57:45Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1344482"
            },
            {
              "author": {
                "login": "alliethu"
              },
              "bodyText": "Save Pattern - Take 2\nDesign summary\n\nContinue using the checkbox to enable/disable shortcuts\n\n\nUse aria-describedby to programmatically tie the hint text to the input\n\n\nInclude an explicit save button\nUse the Flash Alert component to inform the user their updated setting has been saved.\n\n\nThe current component does not have an accessible status, so I would suggest using aria-live=\"polite\"\n\n\n\nFeedback\n\nDoes this pattern seem doable for the MVP?\nWould you suggest making any changes to the proposed copy for the following?:\n\n\nSave button: \"Save keyboard shortcut preferences\"\n\n\n\n\nSuccess Flash Alert: \"Keyboard shortcuts updated successfully\"\n\n\n\nMVP interaction\nDirect MVP Figma link",
              "createdAt": "2021-09-17T16:06:14Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1348312"
            },
            {
              "author": {
                "login": "alliethu"
              },
              "bodyText": "cc @khiga8 @benjiallen\nDesign Updates\n\nReplace the success alert (green) with the informational alert (blue), since that is the pattern being used across settings at the moment.\n\nCreate a separate issue to update alert types across settings\n\n\nMove the shortcut menu verbiage below the Enable/Disable shortcut checkbox\n\nHide the verbiage when the shortcuts are not enabled, as the user will no longer be able to access the dialog when their shortcuts are disabled.\n\n\n\nDirect MVP Figma link",
              "createdAt": "2021-09-20T20:46:09Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1359370"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "When shortcuts are enabled, press ? to show available shortcuts\n\nThis should be reworded to explicitly spell out the keystroke, as a screen reader is extremely unlikely to announce the questionmark otherwise.",
              "createdAt": "2021-09-21T15:24:08Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1362883"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "Does the <kbd> tag help?\n\nNot at all.\n\nIs this a good use case for screen reader only text?\n\nIt's a reasonable use case if you don't want to display the full symbol name to all users.",
              "createdAt": "2021-09-21T15:51:40Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1363031"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "@ichelsea @alliethu\nTough UX trade off\nIf you go over to \"Sheet1\" of this Google Sheet and take a look at \"Column F\", you'll see some notes I made about the accessibility of a feature without GitHub keyboard shortcuts. You'll notice that there are several features which are only accessible via keyboard shortcuts (no other option is available in the UI). Here are the main problem areas:\n\nCode editing experience (this is not VS Code in the browser)\n\nAccommodation within ecosystem: text editor\n\n\nCommenting on multiple lines of a pull request\n\nAccommodation within ecosystem: text editor with extension, maybe?\n\n\nProject boards\n\nAccommodation within ecosystem: none that I can think of.\n\n\nNetwork graph\n\nAccommodation within ecosystem: none that I can think of.\n\n\nCommand palette\n\nAccommodation within ecosystem: none that I can think of.\n\n\n\nApproaches\nIdeally, we'd like GitHub to be accessible no matter what setting has been chosen. That includes the keyboard setting. I can think of a few ways to approach this but I'd like your feedback and input.\n\nDo nothing, live with another a11y issue.\nDo something\n\nRemove these shortcuts from the scope of the shortcuts toggle. This means these features are still keyboard accessible but the toggle now becomes difficult to understand.\nWork on some quick wins which would improve the situation but do not address the root cause. For example, we could add a link to the command palette using the \"skip link\" method. This makes the feature available to keyboard and screen reader users without implementing a big change in the design.\n\n\nDo a lot\n\nImplement remap - this solves the issue but purists would argue that it doesn't solve the root cause\nRethink the UI of the features listed so that there is always an option in the UI which users can access when they have keyboard shortcuts turned off\n\n\n\nWhat do you think? What should we ship with?\nCC: @khiga8 @bolonio",
              "createdAt": "2021-09-28T12:33:14Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1395882"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "And we're back!\nMVP Proposal...update...V2...\nV2 Figma file\nInstead of enabling all/ disabling all shortcuts, which was discovered to cause more usability issues than it solves, we're pivoting directions to just disable the character key shortcuts (shortcuts created without the use of modifier keys).\nI've included a GIF of the new experience, though the checkbox mechanics are the same. Flow description below.\n\nKeyboard shortcut setting flow\nThis feature is enabled by default.\nH2: Keyboard shortcuts\nSubtext: View link-GitHub shortcuts-end link by activating the question mark key anywhere on GitHub\nCheckbox: (selected): Enable character key shortcuts\nHelper text: Character key shortcuts are activated without modifier keys control or command.\nButton: Save\nSave functionality is the same as the original.  If unselected, the change to the subtext under the H2 would read, \"View all of link-GitHub’s shortcuts-end link.\"\nThe save button's text has been shortened from \"save keyboard shortcuts preference\" to \"save\". There should be enough context in the area to know what's being saved. I would like to know if we need screen reader text on this button to be more descriptive for screen reader users though.\ncc: @benjiallen @jscholes @khiga8 @bolonio",
              "createdAt": "2021-10-07T21:20:05Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1444809"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@ichelsea\n\nHelper text: Character key shortcuts are activated without modifier keys control or command.\n\n\nThis wording is a bit ambiguous and could be suggesting that the checkbox controls the presence of modifiers, rather than the enabled state of character key shortcuts.\nThe modifiers list doesn't contain all possible keys, and is macOS-specific.\n\nI'd suggest something like:\n\nWhen enabled, character key shortcuts are those that don't require one or more modifiers (Control, Alt, Shift, Option and/or Command).\n\n\nThe save button's text has been shortened from \"save keyboard shortcuts preference\" to \"save\". ... I would like to know if we need screen reader text on this button to be more descriptive for screen reader users though.\n\nIt depends if it'ss the only \"Save\" button on the page (or if more will definitely be added in the future).  I've highlighted problems with GitHub's use of multiple \"Save\" buttons before, e.g. in github/github#144988, so I'll let that issue speak for itself.",
              "createdAt": "2021-10-08T14:38:06Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1448655"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@khiga8 That's fair, but keystrokes could still include Shift and/or Alt and not end up disabled by the setting.  For example, Ctrl+Shift+P to toggle between the \"Write\" and \"Preview\" tabs in the comment editor.",
              "createdAt": "2021-10-08T17:39:57Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1449722"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "@khiga8 We're somewhat talking at cross purposes here.  A definition of modifiers that doesn't include Alt, Shift and Option is incomplete, regardless of:\n\nthe technical implementation behind the scenes; or\nthe fact that right now, there are, e.g. no GitHub shortcuts that use Alt+Shift.\n\nAs instructions for users, the current text will not convey all of the context that I think we're all aware of from this thread.",
              "createdAt": "2021-10-08T18:01:09Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1449821"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Proposal\nWe get rid of the helper text immediately below the checkbox label because it's too hard to describe character keys succinctly. We use a hide/show component. In the collapsed state we say something like \"What shortcuts are controlled by this setting?\". In the expanded state we say the following:\nThis setting enables/disables character key shortcuts. These are shortcuts that only use the following:\n\nlowercase characters e.g., g or gg\nuppercase characters e.g., shift + g\nsymbols e.g., alt + g\npunctuation e.g., ., ?, \\, space\n\nShortcuts that are not controlled by this setting include:\n\nAny shortcut that uses control or command e.g., command + k or control k\nAny shortcut that uses arrow keys\nAny shortcut that uses keyboard and mouse input e.g., shift + left mouse button click\nThe escape key\n\nAccessibility note\nIf we put the hide/show before the checkbox then it will be accessible to all. If it goes after then we need to think about how we tell screen reader users. Could we associate this text to the checkbox somehow?\ncc: @ichelsea @khiga8 @jscholes",
              "createdAt": "2021-10-08T21:17:38Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1450537"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "MVP update....V3!\nMVP Figma V3\n\nChanges:\n\nH2 is now \"Accessibility\" instead \"Keyboard shortcuts\" to start following patterns that will come in Q2.\nDescription / help text under the checkbox is now more descriptive, with an option to learn more: \"This setting can enable linkGitHub shortcutsend link that don’t use modifier keys in their activation. For example, the 'g key and n key' shortcut to navigate to notifications, or 'period key' to view context relevant GitHub’s shortcuts. linkLearn more about character key shortcuts.end link\nRemoved subtitle text under the H2",
              "createdAt": "2021-10-19T21:32:02Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1504872"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "Make sure that when the help text is connected as the accessible description of the checkbox, the element referenced in aria-describedby doesn't include the \"learn more\" link.  Semantics aren't conveyed in accessible descriptions and it wouldn't make any sense.",
              "createdAt": "2021-10-20T13:11:05Z",
              "url": "https://github.com/github/accessibility/discussions/221#discussioncomment-1508335"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "When triaging issues related to Windows High Contrast mode, this Slack thread on getting VMware set up will be helpful.",
              "createdAt": "2021-10-08T15:00:36Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1448825"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "@benjiallen recorded a video on toggling color values in devtools to find the correct hex values.",
              "createdAt": "2021-10-08T15:01:44Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1448833"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Also, please reference the #accessibility-triage channel in Slack for more context and resources.",
              "createdAt": "2021-10-08T15:02:18Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1448841"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Recommend that no animated gifs are used. Prefer video. Videos enable the viewer to control playback, don't auto-play, and help avoid any \"triggering events\".",
              "createdAt": "2021-10-11T22:34:33Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1461467"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Personally, I found it easier to complete both Step 1 and Step 2 for the issue described before moving on to another.",
              "createdAt": "2021-10-12T19:37:20Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1466788"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Do we have/want standardized “Page name” (custom field) values? I noticed @benjiallen uses “Discussions thread”, @smockle uses “Discussion thread”, and @inkblotty uses “Single Discussion”—I think we’re all referring to the same thing.",
              "createdAt": "2021-10-12T21:02:48Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1467080"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "Tools I’m using:\n\nQuickTime Player for screen recording (built-in to macOS)\nLoopback for routing system audio (specifically, to record VoiceOver)\nKeystroke Pro for visualizing key presses (QuickTime Player can visualize mouse clicks)\nVMWare Fusion 12 Pro for running Windows (Windows Virtual Desktop, a Microsoft-favored solution, blocks third-party software installation (e.g. JAWS), so is unsuitable for accessibility work)\nWindows 11 for testing Windows contrast themes (and Windows-only assistive tools)",
              "createdAt": "2021-10-12T21:12:00Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1467109"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "When reviewing \"component names\" for accuracy, I'm finding a \"group by\" by \"component name\" and \"sort by\" of \"scenario\" works really well. It creates less context switching during review.",
              "createdAt": "2021-10-14T11:57:03Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1476630"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "What is the role of the \"component name\"? @inkblotty and I have been thinking about this problem and we don't have a clear answer yet.\n\nIs it just a way of helping write more issues which will document the work to be done?\nDoes it directly translate to a component we hope to build?\nSomething else?",
              "createdAt": "2021-10-14T14:46:30Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1477565"
            },
            {
              "author": {
                "login": "inkblotty"
              },
              "bodyText": "Lots of insights came out in our Triage Retro, summarized here",
              "createdAt": "2021-10-19T14:57:52Z",
              "url": "https://github.com/github/accessibility/discussions/295#discussioncomment-1503022"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Note: Updating this as our understanding of shortcuts evolve and story requirements have changed (and since there are no other answers yet).\n@koddsson had previously tried to implement this enable/disable feature in github/github#106636, and may have some valuable input! It looks like we can revive or pick up some things from his implementation at least with regards to the enable/disable feature.\nHow are keyboard shortcuts currently setup?\n\ngithub/hotkey lib: data-hotkey set on HTML elements in the view. The element action can be triggered with the custom hotkey.\ncustom implementations (app/assets/modules/command-palette.ts, app/assets/modules/projects.ts, and more)\nwe have a few site-wide shortcuts, but many are unique to certain parts of the app.\nshortcuts are documented in keyboard shortcut docs. ? will also show the shortcuts available on a page. (looks like the available shortcuts are determined by parsing the URL in app/helpers/keyboard_shortcuts_helper.rb)\napp/view_models/site/keyboard_shortcuts.rb seems to be the most \"centralized\" location for all shortcuts, but is something more for rendering help dialog content. (I think this is dependent on people remembering to update with new shortcuts?)\n\nSteps for enabling and disabling all keyboard shortcuts\n\nUpdate view with new form that provides options to enable/disable shortcut. Might be new page and tab, depending on design.\nAdd getter/setter methods for keyboard preferences in User::Settings.\nAdd new route and controller action for persisting user preferences submitted by form.\nEmbed user preference in the DOM with a meta tag.\nFetch user preference from meta tag and respect preference in JavaScript triggering hotkey action. app/assets/modules/github/behaviors/hotkey-map.ts takes care of a majority of hotkeys, but also need to ensure we update other custom implementations.\n\nHow should we persist user keyboard preferences?\nWe've decided to persist the user's keyboard preference on the settings JSON column on user_settings table. user_settings is a new table introduced in: github/github#192502,  intended to be a paved path for storing settings on a User. Particularly, it is intended to hold data we won't need to query in aggregate often.\nUsing a JSON column allows for:\n\na flexible schema.  (relevant as we later add support for custom mappings. sample gist by @srt32)\nsaving key/value preferences that may not be present for every user. (relevant because not every user will change the default settings or add custom keys)",
              "createdAt": "2021-09-03T22:08:36Z",
              "url": "https://github.com/github/accessibility/discussions/214#discussioncomment-1279080"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Proposal from @benjiallen\nAsync:\n\nAll: fill out cards on a board (e.g. worked well, not well)\nWhile filling cards, look out for duplicates\n[edit] FR: groups cards if there are any duplicates (there shouldn't as we'll have time to read through existing cards before creating ours)\n[new] When voting opens for the retro (Friday 12am PT), cast your votes\n\nSync:\n\nLength: 45 minute sync meeting\nSchedule: before planning\nAgenda:\n\nReview cards and groups\nVote on topics\nDiscuss topics as necessary\nDetermine changes to future sprints\nCreate issues if necessary",
              "createdAt": "2021-09-27T17:48:13Z",
              "url": "https://github.com/github/accessibility/discussions/284#discussioncomment-1391888"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Added a new item to the format as something to try out\n\nWhen the retro sync meeting is done, the facilitator opens a Discussion on the a11y repo w/ anonymized notes on key takeaways from the sync conversation.\n\nFeel free to 👍  or 👎",
              "createdAt": "2021-10-01T16:30:59Z",
              "url": "https://github.com/github/accessibility/discussions/284#discussioncomment-1415374"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Thanks for opening this discussion and laying out these gaps! Gonna kick this off with my immediate thoughts for the first point:\n\nGap 1: Timezones\n\nI think that having two FR would be great if we had a larger team and even distribution of teammates in different timezones. As you mention, at our current team size&distribution, if we go with a FR in every major timezone, you would end up being on first responder every week which is not great...  I would think the biggest issue with timezone would be for urgent requests that come in while a first responder is offline.\nMaybe there is something we can learn from how ui-frameworks has been handling time zone differences with a similar distribution of team members and just one first responder (cc: @smockle and @JoseInTheArena?). I noticed that in the #js channel description, there's some expectations set around what to do for urgent requests:\n\n🚨 FR: @_______ For urgent requests: https://github.com/github/ui-frameworks/blob/main/first_responder.md\n\nSpecifically, in the linked doc, there's an expectation set that the team is distributed:\n\n@github/ui-frameworks-reviewers is a distributed team, and team members that can help more quickly might be online. You can find us in the #ui-frameworks channel.\n\nWe could set a similar expectation that it is okay to reach out to #accessibility-internal if a request is urgent and is going unnoticed because the first responder is not immediately available.",
              "createdAt": "2021-09-24T23:02:06Z",
              "url": "https://github.com/github/accessibility/discussions/280#discussioncomment-1382253"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "I would like to invite you to take a look at the FR documentation [in the github/coding] repo. Is very complete and we could maybe take it as a template for our new FR doc (I would be open to take the lead on modifying the current document to adapt it to that \"template\").\n\nI have a couple reservations about using Coding’s FR process as our template:\n\n\nCoding (the team that owns github/coding) is a feature team (that maintains Pull Requests, Repos, Codespaces, Gists, and Atom). In contrast, Accessibility is a platform team. Coding’s list of “FR Duties” includes “Questions and calls for help by other teams”. I suspect Coding has a relatively high volume of such requests as far as feature teams go (since Codespaces is the platform for github/github development), but in general, I suspect platform teams face a higher volume of internal support requests. Coding’s process may not scale to higher internal support volumes.\n\n\nExcluding managers, leads, product, and research, Coding has 25 engineering ICs. In contrast, Accessibility has 4 engineering ICs. We do not have capacity as a team to dedicate engineers to internal support; instead, as noted in our FR doc, this is a responsibility that is added to existing commitments. Maintaining this balance is easier with a lightweight FR process. Coding’s process may not be compatible with reduced staffing.\n\n\nReservations aside, I do appreciate you linking to Coding’s doc, @bolonio! It describes tactics that would be useful for us to adopt—in particular, I like the triage matrix and slash-command.",
              "createdAt": "2021-09-25T03:02:45Z",
              "url": "https://github.com/github/accessibility/discussions/280#discussioncomment-1382551"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Another gap: documentation for prioritizing issues found by the FR.",
              "createdAt": "2021-09-27T15:02:22Z",
              "url": "https://github.com/github/accessibility/discussions/280#discussioncomment-1390996"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "bolonio"
              },
              "bodyText": "I can only speak from past experiences in my previous company, but what I've seen when we were estimating with fibonacci numbers is that no one wants to put a 1, because it seems really easy thing to do, and not a lot of people estimate with a 13 or 21 because that means we need to break the issue is small issues to later estimate them again (with probably something between 2 and 8). What I want to say with this is that I've seen most of the issues in my previous company being estimated with numbers between 2 and 8, which is exactly the same as 4 categories of estimation where the name of the categories (rocks sizes, t-shirt sizes, numbers...) don't really matter. Now my vote would be to continue with rocks, not only because of my 4 categories theory, but as well to be consistent within GitHub (someone else is using the same scale, even if the complexity is not shared across teams). Said that, I'm open for everything :)",
              "createdAt": "2021-09-28T08:41:02Z",
              "url": "https://github.com/github/accessibility/discussions/285#discussioncomment-1394742"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "I also vote for rock sizes mostly from familiarity the past few sprints. The thoughts I have regarding Fibonacci numbers:\n\nWhat's the difference between point 1 and point 2, and point 2 and point 3? Is this difference really significant for gauging the complexity of work.\nSomething that is size 21 sounds like an epic!?!\n\nThat said, I haven't had much experience with story estimation as my previous team abandoned it so this whole practice feels pretty new to me. I can be convinced :-)",
              "createdAt": "2021-09-28T16:33:20Z",
              "url": "https://github.com/github/accessibility/discussions/285#discussioncomment-1397400"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Thanks for your input. These are all really valid points. Let's go w/ rock sizes. I'll update the board to reflect the 4 rock sizes and consolidate some of the columns based on this comment:\n\nThe calibration memex has 6 columns, which map to the first 6 fib numbers. If we want to use rock sizes instead, we can group some of those columns together. Potentially ending with two groups for columns C/D and E/F, then taking another look at what ends up in the resulting columns and moving things in/out accordingly\n\nthen, we can look at the merged columns to make sure things look accurate from a relative sizing perspective",
              "createdAt": "2021-09-28T20:43:08Z",
              "url": "https://github.com/github/accessibility/discussions/285#discussioncomment-1398774"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "From meeting notes:\nPossible list of stuff to include in a definition of ready:\n\nProblem statement\nUser story\nACs/exit criteria\nDependencies\nDiscussions/open questions\nRelated issues\nSub-tasks (more discussion needed here)\n\ndefinition: how we would break down the problem to satisfy the ACs\nquestions: when do we need sub-tasks vs. new issues?",
              "createdAt": "2021-09-27T19:37:00Z",
              "url": "https://github.com/github/accessibility/discussions/286#discussioncomment-1392415"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Related issues\n\n#89\n#257\n#261",
              "createdAt": "2021-09-20T20:30:22Z",
              "url": "https://github.com/github/accessibility/discussions/262#discussioncomment-1359316"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "Depending on PAC's level of involvement in the data side of things (or even just to practice what we all preach), accessibility should be a consideration in the selection of tools.",
              "createdAt": "2021-09-20T20:46:59Z",
              "url": "https://github.com/github/accessibility/discussions/262#discussioncomment-1359374"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Answered in #197",
              "createdAt": "2021-09-03T06:37:33Z",
              "url": "https://github.com/github/accessibility/discussions/187#discussioncomment-1275432"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "UPDATE (2021-08-30): Discussion to continue in #205 (re: FR rotation & responsibilities) and #156 (re: automatic pre-triage).\n⁂\nProposal\nResponders\nA 5-person weekly rotation (set up in PagerDuty): Clay, Kate, José, Ben, Adrián\nResponsibilities\nEach week, the FR is responsible for ensuring all the team’s at-mentions (either in github.com or Slack) appear on the FR project board. The .fr chatop may be a helpful tool for finding at-mentions, but it should not replace the board, because only the board enables us to observe patterns over time (e.g. in retros). The FR board will include at least two columns—“Needs Triage” and “Triaged“—and the FR should make an effort to promote cards. However, as the FR remains responsible for their non-FR commitments, FR duties should be timeboxed to <1 hour/day. The FR should update the channel topic of #accessibility and #accessibility-internal with their name for discoverability.",
              "createdAt": "2021-08-24T17:47:35Z",
              "url": "https://github.com/github/accessibility/discussions/197#discussioncomment-1228860"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "React-based apps often rely on tools like eslint-plugin-jsx-a11y and jest-axe  to help detect code-level accessibility violations. As of now, I'm not aware of  many code-level accessibility linting tools available for Rails/ERB. One I came across that integrates with GitHub actions and lints ERB is AccessLint. It's not super invasive to developer workflow in that it will only lint newly changed code. To note though, this linter will not catch accessibility errors for Rails-y helpers like label_tag, image_tag, etc since it lints HTML. Regardless, it might still be worth looking into.\nThe most commonly used tool for automated accessibility testing in Rails is  axe-core-gems which allows for accessibility testing to be integrated into system tests. Currently there isn't support for minitest so we'll want to write our own wrapper around axe-core-api if we want this to work with our existing minitest specs.\nOne thing we did at my previous workplace with this axe gem was override all Capybara methods that would trigger a page change so that the axe assertion gets run whenever a page changed:\nexample:\noverriding capybara click_link method:\ndef click_link(link, accessible: true, **kwargs)\n  click_link(link, **kwargs)\n  if accessible?\n    expect(page).to be_axe_clean\n end\nend\n\nThis approach let us integrate accessibility checks within our existing system tests and we tracked accessibility regression based on how many accessible: false flags were set. Not sure we'd want to take this approach in dotcom but just one idea. Other things we might be able to do using axe-core-api is generate a report of all the detected accessibility violations across all integration tests, or on select key flows.",
              "createdAt": "2021-05-03T19:48:45Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196951"
            },
            {
              "author": {
                "login": "ferBonnin"
              },
              "bodyText": "A few ideas (I work in the Accessibility Insights team):\n\nThe Accessibility Insights team is working on a GitHub Action MVP that would help run automated checks (same as axe-core, showing only WCAG violations and not best-practices / experimental rules) with a crawler, so the whole site gets scanned. We are looking for pilot teams to try out this experience\nBeyond automated checks, to help with testing, you can also leverage manual and assisted tests in Accessibility Insights for Web. The FastPass feature takes 5 minutes to run and helps catch common accessibility issues and the Assessment feature guides you through a full WCAG 2.1 compliance assessment. We recommend teams run FastPass before completing a PR and an Assessment for each feature.",
              "createdAt": "2021-05-03T20:16:16Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196952"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "The Accessibility Insights team is working on a GitHub Action MVP that would help run automated checks (same as axe-core, showing only WCAG violations and not best-practices / experimental rules) with a crawler, so the whole site gets scanned. We are looking for pilot teams to try out this experience\n\n\nHey @ferBonnin! Thanks for sharing.\nA few questions:\n\nWhat is a crawler?\nCould you elaborate what you mean when you say, the whole site gets scanned? I am envisioning the scan can only happen on pages that are accessed in the browser through an integration test flow (similar to how the axe-core-gems integrate).",
              "createdAt": "2021-05-03T20:39:16Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196953"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Shared by @koddsson --\nWe currently have some custom ERB linters github/.erb-linters for some accessibility checks.",
              "createdAt": "2021-05-04T15:27:18Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196954"
            },
            {
              "author": {
                "login": "koddsson"
              },
              "bodyText": "We currently have some custom ERB linters github/.erb-linters for some accessibility checks.\n\nThis is powered by the erb_lint gem. There's also some ESLint rules that we have such as no-blur.",
              "createdAt": "2021-05-05T12:28:17Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196955"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "Meeting notes for posterity:\nhttps://github.com/github/primer/issues/148",
              "createdAt": "2021-05-05T23:20:44Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196956"
            },
            {
              "author": {
                "login": "koddsson"
              },
              "bodyText": "Maybe we can incorporate something like https://github.com/muan/headings to help developers not make bad heading levels as they develop their features. Similar to how we draw red boxes around bad accessibility code in development.",
              "createdAt": "2021-05-18T16:12:28Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196957"
            },
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "Maybe we can incorporate something like https://github.com/muan/headings to help developers not make bad heading levels as they develop their features. Similar to how we draw red boxes around bad accessibility code in development.\n\nI'm also of the camp that if a designer passes off a mock/spec to a developer and it has a headings change or adds new headings, if those are not labeled then the developer should ask for that from the designer. It's something that should be in every hand-off project. If you all have to guess which headings to use then we're not doing our jobs properly.",
              "createdAt": "2021-05-18T16:45:39Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196958"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "What we have currently in dotcom:\nCustom ERB Linters\n\nCustom rubocop rules \nCustom axe-core rules",
              "createdAt": "2021-06-02T20:52:17Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196959"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "I just stumbled upon this https://github.com/marketplace/axe-linter. I'm not sure how updated it is. It'd be interesting to try it out though.",
              "createdAt": "2021-06-15T05:55:39Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196960"
            },
            {
              "author": {
                "login": "ferBonnin"
              },
              "bodyText": "I just stumbled upon this https://github.com/marketplace/axe-linter. I'm not sure how updated it is. It'd be interesting to try it out though.\n\n@JoseInTheArena note that this is only free for personal projects (open source and private)\n\nThere is another open source linter, ESLint, that has a good set of rules for accessibility.",
              "createdAt": "2021-06-15T16:40:33Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196961"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "There is another open source linter, ESLint, that has a good set of rules for accessibility.\n\nESLint has an accessibility addon for linting React elements. We don't have React in the monolith so cannot make use of this plugin there, but we should enable it in projects where we do. For instance, we recently enabled the addon in the docs repo. :)\nHere is an updated list of accessibility tools we currently have enabled in various GitHub repos:\n\naxe-core - A JavaScript accessibility testing engine for websites and HTML-based user interfaces.\n\nIn use in github/github where accessibility issues are highlighted with a red box in development mode.\n\n\naxe-core-gems - Set of gems that allow accessibility checks to be integrated into browser-based Ruby tests.\n\nIn use in primer/view_components.\n\n\naddon-a11y - Storybook add-on to help build accessible UI components.\n\nIn use in primer/view_components.\n\n\neslint-plugin-jsx-a11y - An eslint plugin for linting jsx elements for accessibility issues.\n\nIn use in primer/components and github/docs.\n\n\npa11y - Runs accessibility tests via CLI.\n\nIn use in github/docs to run CI checks.\n\n\n\nAlso listed in thehub.",
              "createdAt": "2021-06-16T00:02:04Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196962"
            },
            {
              "author": {
                "login": "koddsson"
              },
              "bodyText": "ESLint has an accessibility addon for linting React elements. We don't have React in the monolith so cannot make use of this plugin there\n\nWe could achieve similar results by writing ERBLint rules for each of the supported rule in eslint-plugin-jsx-a11y. The list of rules feels short enough that we could implement them in ERBLint and possibly release them as an erblint-accessibility-ruleset gem/package.",
              "createdAt": "2021-06-23T09:24:55Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196963"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "ESLint has an accessibility addon for linting React elements. We don't have React in the monolith so cannot make use of this plugin there\n\nWe could achieve similar results by writing ERBLint rules for each of the supported rule in eslint-plugin-jsx-a11y. The list of rules feels short enough that we could implement them in ERBLint and possibly release them as an erblint-accessibility-ruleset gem/package.\n\nI like this idea! I believe @khiga8 mentioned something along these lines as well! Would you be willing to spin up an issue for this?",
              "createdAt": "2021-06-24T00:44:51Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196964"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "@JoseInTheArena I opened an issue #94 :)",
              "createdAt": "2021-06-24T15:12:21Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196965"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "I've been reading this article from smashing magazine about accessibility testing tools. It has many things we already know of plus many things I've never seen before and are very interesting. Of note, they showcase a bunch of bookmarklets to do quick testing of several things like duplicate aria roles, missing alt attributes, or issues with tabindex. There's mention of linters and browser testing as well. It's 💯 🔥\nSee below the output from the aria usage bookmarklet ran against this issue page",
              "createdAt": "2021-06-25T00:33:37Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196966"
            },
            {
              "author": {
                "login": "khiga8"
              },
              "bodyText": "@JoseInTheArena\nLove the article 🔥!!! I honestly didn't know bookmarklets were a thing until Kristjan showed me the heading one (linked above) and I've been using it frequently because it's so handy! The article linked this blog post with different bookmarklets and I am mind-blown 🤯.",
              "createdAt": "2021-06-25T02:55:34Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196967"
            },
            {
              "author": {
                "login": "koddsson"
              },
              "bodyText": "The article linked this blog post with different bookmarklets and I am mind-blown 🤯.\n\nOne of the bookmarklets in that post is to fix GitHub tables 😭",
              "createdAt": "2021-06-28T08:32:51Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196968"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "From @benjiallen  in #83\n\nTools for Trusted Tester tests",
              "createdAt": "2021-08-05T21:54:11Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196969"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Another list which might be useful for research:\nInclusion Hub",
              "createdAt": "2021-08-09T12:56:58Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196970"
            },
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "I just stumbled upon this https://github.com/marketplace/axe-linter. I'm not sure how updated it is. It'd be interesting to try it out though.\n\nI reached out to Deque support to check the status on axe linter within the GitHub marketplace because I noticed some of the docs were out of date. Here is the response:\nThis webpage https://axe-linter.deque.com/docs/configuration was for an axe-linter proof of concept only version of axe linter. It was taken down intentionally.\nHowever, we provide axe-linter vscode for the users which has documentation on this page\nhttps://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter",
              "createdAt": "2021-08-09T13:12:36Z",
              "url": "https://github.com/github/accessibility/discussions/182#discussioncomment-1196971"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "sinabahram"
              },
              "bodyText": "For building empathy, I just want to make sure there are some metrics or evidence-based evaluations being used on techniques to be adopted. So often, it builds sympathy (e.g. Dining in the Dark tends to elicit a fear response in non-a11y folks). I know that's just a suggestion, so not at all trying to push back on specifics at this ideation phase. only to strongly advocate for evidence-based measures to be used when evaluating proposed solutions.",
              "createdAt": "2021-08-10T15:13:17Z",
              "url": "https://github.com/github/accessibility/discussions/155#discussioncomment-1154834"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "benjiallen"
              },
              "bodyText": "Stuff I'd like to present\n\nUsing axe DevTools Pro, why it's better than other browser based tools\nUsing Deque University, comparison to what we get from Microsoft\nUsing the accessibility tree to debug quickly\nUsing the Deque end-to-end testing tools for monitoring\n\nStuff I'd like to know\n\nThe developer workflow at GitHub - how do devs work? how does a11y fit in?\nAccessibility linters - what we do at GitHub? what is best in class within the a11y community?",
              "createdAt": "2021-08-09T18:11:03Z",
              "url": "https://github.com/github/accessibility/discussions/151#discussioncomment-1150741"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "June 14th team meeting\nAgenda\n15 mins | Update on audit and OKR work\n15 mins | Figure out our initial collaborating model\n25 mins | Continue brainstorming about work items we could take on\nDiscussion notes:\nHow does our mission align with GitHub's vision / mission?\nGitHub's Vision and Mission\nBe the home for ALL developers / Accelerate human progress through developer collaboration\nOur Team's Mission\n\nMake GitHub accessible?\nBuild an accessible and inclusive home for all developers?\nMake GitHub Accessible by Design?\n\nDecision Tree for Addressing Accessibility Issues:\nEdit access from here\n\nHow do we go about triaging issues from the audit?\nThis needs more discussion\nGoals:\n\nA triaged and prioritized backlog\nTooling for designers and engineers to stop new issues from being shipped out to production\nAccessible components\nMetrics and monitoring to give us insights into the status of accessibility at GitHub\n\nQuestions:\n\nHow are we going to track the burn down of the accessibility issues backlog?\nIs updating the VPAT part of the quarter work?\nThe decision tree doesn't end when the issues is closed. How do we resolve or close issues? Who tests for them to be resolved?\nThe data trend show issues are concentrated on pages and navigation vs. components, should we concentrate on components even though that's not the trend?\n\nSince the audit isn't done and most if not all of GitHub core has not been audit yet, it's hard to know if these results and trends will hold.\n\n\nWhat's our collaboration model on issues that need input from design systems?\n\nAlso with other teams? e.g. getting time from feature teams to address accessibility issues\n\n\nHow are we going to handle the load to the a11y FR?\n\nWe could offset when we get heavier load by holding off on broader comms (see idea on this below) until we have documentations and content we could use to make FR more documentation driven. That would also allow for the other two team members to start working with us, thus, increasing our bandwidth to support more FR volume.\n\n\nWhere should documentation live?\n\nRepos?\nThe Hub?\nDo we want to publicly share our documentation?\n\n\n\nIdeas:\n\nWe could keep a list of solved issues other developers could use as guide for solving other issues themselves\nWe should find out who's responsible for Gloss and look into its accessibility efforts\nDesign systems has a pretty underutilized office hours we could attend to engage with them on accessibility issues we need their help on\nHow do we get the word out about our team's mission?\n\nBroader comms to let teams know we exist (e.g. content during functional onboarding, team posts, messaging on our automation, link out to ourselves every time we reach out to teams)\n\n\nWe should open source some of our work\n\nERB linters!\n\n\nOn getting feedback from customers\n\nhttps://github.slack.com/archives/C017QDW59FX/p1615404734025500\n\n\nWe should get the rest of the team join us on our next meeting! Btw, when is the new PM starting?\n\nThe team will continue working on these discussion items asynchronously and getting answers to some of the questions. We didn't have time to talk about our internal collaboration and working model, something we'll address on our next team meeting.\ncc: @gaknoll @alebourne @philipbremer",
              "createdAt": "2021-06-15T06:29:44Z",
              "url": "https://github.com/github/accessibility/discussions/88#discussioncomment-871620"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "It's becoming increasingly evident (to me) that many of the decisions on what to do and how to do it would greatly benefit from:\n\nHaving the output of the full PAC audit, and\nBeing able to extract actionable insights from said output\n\nThe audit is expected to wrap up sometime in August. Let's call that August 15th. Based on these data points, I wonder if part of the team focus for the first half of FY22 Q1 should be directed towards figuring out what \"actionable insights from the Audit\" means and getting setup to be able to extract that from the audit's data. I believe this to be related to how-do-we-track-the-issues-burn-down and the wcag-categories-trends questions.\nWhat do y'all think about this @github/accessibility?",
              "createdAt": "2021-06-16T18:56:17Z",
              "url": "https://github.com/github/accessibility/discussions/88#discussioncomment-879982"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "Hi @github/accessibility team 👋 ! I put together a summary of the conversations we've been having. Let me know if there's anything I missed or misplaced!\nI have been creating issues on our repo for things we could do to address some of these concerns. You can get to them by filtering with the proposal label\nThematic Summary\n\nProcess (Some captured on this document)\n\nBacklog grooming\nBug triage\nBug remediation\nSprint cadence and ceremonies (planning, grooming, etc)\n\n\nDocumentation\n\nAudience\n\nInternal - for our team\nInternal - for other devs at GitHub\nExternal?\n\n\nWhere should it live?\n\nThe Hub\nRepos\n\n\n\n\nMetrics / Data\n\nIssues from the audit\n\n#89\nRemediation burn down (e.g. how is our system[components] or app level[one-offs] work affecting the backlog?)\nPatterns and trends (e.g. what WCAG categories have the most issues)\n\n\nLinters\n\nWhat data can we look at from linter usage? \n\n\nLive browser\n\nWhat data can we look at from local dev axe-core runs?\nCould we setup browser testing on CI so we get a clearer signal of ships deltas in accessibility violations?\n\n\n\n\nRemediation work\n\nSystem level fixes (components?)\nApp level fixes (one-offs?)\nTesting\n\nAutomated tools (e.g. #85)\nManual\n\nPart of the development life cycle\nAs a way to validate fixes",
              "createdAt": "2021-06-21T23:47:33Z",
              "url": "https://github.com/github/accessibility/discussions/88#discussioncomment-900267"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "The @github/accessibility meet on June 28th to review the FY21 Q1 OKRs, provide feedback on these, and start looking into what epics we could commit to working on to accomplish the Q1 KRs. You can watch the video on rewatch and note meetings are posted below:\nOKRs\n1. The four GitHub product areas have achieved compliance grade D or higher on our end of quarter accessibility SLT scorecard.\nDefinition of Grade D\n\nAssessment exists and includes testing to MAS requirements. Analysis of MAS bugs by priority & severity. Action plan to remediate MAS bugs.\n\nMAS bugs of sev 1 & 2's exist\nEstablish baseline (from your first assessment, that progress is tracked against).\nIdentified MAS bugs and triage complete.\nAction Plan; specs, tasks, dashboards (add - engineering resources are assigned).\n\n\n\nWork items\n\nCreate triaging process\n\nImpact\nEffort\nSeverity (is this different from Impact?)\nMilestone (to meet MSFT Grade D requirements)\nTeam\nStatus\n\ne.g. blocked | needs design | design review | needs documentation | needs implementation | needs investigation\n\n\nGitHub Action to automate some of the triaging work (e.g. adding wcag categories as labels, adding team as label, etc)\n\n\nBuild accessibility issues dashboard (looker?)\n\nTop WCAG categories\nIssue burn-down\nIssues by milestone\nIssues by team\nData from linters\nData from local axe-core\n**Note: ** If mobile has its own team, we should remove their issues from our dashboards\nWhat else?\n\n\nDesign accessibility inclusive software development process\n\nGet together with several teams and learn about their development workflow to identify places where building for accessibility can be adopted.\nTeams should be aware of where they stand in terms of accessibility violations\n\nWe need to be able to filter issues by team\n\n\n\n\nWrite documentation\n\nTriaging process\nDevelopment process\nDashboard\n\n\n\nBuild tooling to design out accessibility violations for the top three WCAG violation categories identified from the ongoing audit, representing 71%** of all bugs filed.\nThings to consider\n\nWe don't have certainty that the top three categories will be in the subset of categories that can be tested through automation.\nDepending on what these three categories end up being, this KR could end up being overly ambitious\nShould we, instead, look at building tooling for catching as many accessibility bugs as automation allows us to catch?\nShould this KR be about both automation and remediation?\n\nWork items\n\nAutomated\n\nLinters\nLive browser testing\nRunning Accessibility Insights from the command line\n\n\nManual\n\nSystem level fixes - collaborate with design infra\nApp level fixes - collaborate with feature teams (fan-out work)",
              "createdAt": "2021-06-29T18:00:53Z",
              "url": "https://github.com/github/accessibility/discussions/88#discussioncomment-939651"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "The top three WCAG Guideline from the audit as of now can be broken down even further into success criterias as followed\n\nNote on this: of the 29 listed individual success criteria, 8 of them (or just over 27.5%) are at level AAA.  Whether or not GitHub will be targeting any degree of level AAA compliance in the future, the current audit scope is limited to A and AA so there will be zero issues filed against AAA criteria (other than in error).\nThere will also be success criteria for which we file no or few failures.  For example, within 1.4 Distinguishable, failures of 1.4.1, 1.4.3, 1.4.4, 1.4.10, 1.4.11 and 1.4.12 will represent the bulk of issues, but failures of 1.4.2 (audio control) are less likely on GitHub for example.",
              "createdAt": "2021-06-30T14:16:50Z",
              "url": "https://github.com/github/accessibility/discussions/88#discussioncomment-943592"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "ichelsea"
              },
              "bodyText": "I feel that it's certainly reasonable to test with just the top 3! Having a limited testing suite doesn't mean that we aren't also open to things our assistive technology users catch and report to us. I think what will be important there is for them to know that when they report things, we take them into our care to research and potentially find a fix for and that it doesn't just feel dismissed.\nI do think it's important to call out in the docs what we've used for testing or what we've verified use on. Definitely open to other opinions on this but I'm thinking that listing them out will:\n\nShow users that we're working towards a better GitHub and documenting our processes.\nAllows users to see a gap and fill that gap if they wish.",
              "createdAt": "2021-06-21T16:51:29Z",
              "url": "https://github.com/github/accessibility/discussions/92#discussioncomment-899096"
            },
            {
              "author": {
                "login": "smockle"
              },
              "bodyText": "We should add screen reader setup instructions to our internal docs:\n\nWhere to purchase (and how to expense) JAWS and NVDA\nWhere to obtain a Windows license (and which version to install)\nPros/cons of running Windows via Boot Camp, with VMware Fusion, or RDP’d into an Azure VM\nPros/cons of seamless vs isolated VM environments\nVM network settings to access sites served by the host\nKeybinding tips\nOther configuration tips\n\nA definite/finite set of assistive-tool/browser combinations makes documentation easier to maintain.",
              "createdAt": "2021-06-21T17:08:50Z",
              "url": "https://github.com/github/accessibility/discussions/92#discussioncomment-899167"
            },
            {
              "author": {
                "login": "jscholes"
              },
              "bodyText": "A couple of thoughts to add to this discussion, from experiences on other projects:\n\nThink of the times when you would go to a site and get a notification saying your IE version wasn't supported, well, something like that for your screen reader.\n\nThis is technically impossible and, as already highlighted, would present significant privacy concerns if it could be done.  The most you can do is present a screen-reader-only banner indicating something about your screen reader support.  But those are usually irritating and it's just better to make the product accessible full-stop.  If it follows best practices, uses valid mark-up, ARIA according to spec only when required, etc., then issues with lesser used screen readers (TalkBack, Narrator, Orca, ChromeVox) will be less frequent.\nIn terms of macOS VO/Safari testing: remember that VoiceOver is tied to the operating system.  I don't have statistics, but the majority of VO users will upgrade to new macOS releases very quickly in hopes that accessibility bugs will be fixed.  So it's critical that any in-house or external a11y testing not be carried out only on macOS 10 or something like that.  I know that in some corporate environments, OS upgrades can take a while to be rolled out, and if that is the case then some sort of accessibility-related exception must be put in place.",
              "createdAt": "2021-06-21T17:58:24Z",
              "url": "https://github.com/github/accessibility/discussions/92#discussioncomment-899335"
            },
            {
              "author": {
                "login": "JoseInTheArena"
              },
              "bodyText": "That’s great context! Thanks for sharing James! I get what you’re saying about just making the site accessible. Seems like there will always be issues that escape us because we can’t cover for all assistive technology. Does that make sense? If so, would y’all say part of the conversation becomes about how we find out there are gaps affecting other users and how do we prioritize those?\n…\n On Jun 21, 2021, at 10:58 AM, James Scholes ***@***.***> wrote:\n\n ﻿\n A couple of thoughts to add to this discussion, from experiences on other projects:\n\n Think of the times when you would go to a site and get a notification saying your IE version wasn't supported, well, something like that for your screen reader.\n\n This is technically impossible and, as already highlighted, would present significant privacy concerns if it could be done. The most you can do is present a screen-reader-only banner indicating something about your screen reader support. But those are usually irritating and it's just better to make the product accessible full-stop. If it follows best practices, uses valid mark-up, ARIA according to spec only when required, etc., then issues with lesser used screen readers (TalkBack, Narrator, Orka, ChromeVox) will be less frequent.\n\n In terms of macOS VO/Safari testing: remember that VoiceOver is tied to the operating system. I don't have statistics, but the majority of VO users will upgrade to new macOS releases very quickly in hopes that accessibility bugs will be fixed. So it's critical that any in-house or external a11y testing not be carried out only on macOS 10 or something like that. I know that in some corporate environments, OS upgrades can take a while to be rolled out, and if that is the case then some sort of accessibility-related exception must be put in place.\n\n —\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub, or unsubscribe.",
              "createdAt": "2021-06-21T18:05:10Z",
              "url": "https://github.com/github/accessibility/discussions/92#discussioncomment-899362"
            },
            {
              "author": {
                "login": "sinabahram"
              },
              "bodyText": "Loving this conversation! I want to highlight that we don't think of accessibility as satisfying or working with screen readers. First, there are tons of other assistive technologies not being listed here (totally noting the issue is only about SR testing). However, the broader point is that IMHO we should never ever have as a goal to make something work with Jaws or NVDA or VoiceOver as a primary objective. It must be standards compliant and conformant to various specifications e.g. WCAG, ARIA, etc., and then follow best practices (we've highlighted some of these in our feedback and plan on providing a ton more after the formal audit work is done) and lastly be spot-checked with the assistive technologies in question.\nThe maintainer of Orca is the co-chair of the ARIA working group where I also happen to serve as an invited expert. It doesn't mean that in a perfect world we shouldn't be testing with Orca, but if any screen reader should be expected to conform to ARIA it will be the one maintained by her :).\nThe other reason for standards conformance is to prevent future bugs being introduced by current-day fixes. We may think we are being kind and do something where we break the rules, as it were, but we know it will make a component work better with JAWS. However, if JAWS then fixes the bug six months later, our fix may end up causing things to break instead of serving as a fix because it wasn't standards conformant so therefore we shouldn't expect it to work in the future even if it does now.\nIn terms of priorities, NVDA and Jaws pair nicely with different browsers so the recommendation we would make is NVDA+FireFox, JAWS+Chrome, VoiceOver+Safari. I would note here that NVDA works pretty well with Chrome, and so that should absolutely be reached for when debugging something because NVDA is far more likely to behave a bit more consistently whereas JAWS tends to take some opinionated approaches to things that can surface as really nuanced differences for non-SR-users.\nOne additional note, and maybe this issue isn't where to put this, but I want to make sure everyone is on the same page about this fact. VoiceOver is a completely different universe than JAWS and NVDA. While the two Windows screen readers for sure have differences, they follow an incredibly similar model for how to express and interact with the digital world. VoiceOver follows a very different model. This affects how forms and interactive elements are interacted with, how the OS is navigated, and what the expectations of users on that platform are. So, if folks will be  switching between them, please note that even seasoned expert power users of decades such as @jscholes  and myself have a significant context switching burden when using a Windows VS Mac-based screen reader.\nI hope this helps.",
              "createdAt": "2021-06-21T20:58:24Z",
              "url": "https://github.com/github/accessibility/discussions/92#discussioncomment-899921"
            },
            {
              "author": {
                "login": "sinabahram"
              },
              "bodyText": "great question. If something is not truly supported then we won't recommend it. That combobox pattern should have never been in 1.1. It was just simply terrible. Only January of this year, if I recall my dates correctly, saw the major screen readers even supporting it. 1.2 on the other hand has been widely accepted by those working on the AT and the browsers like Chrome, etc., already works, and is far less technical debt to implement. In short, it's a win/win/win.\nBut, let's explore another example just to exercise the point you're correctly making. If there's a bug in Chrome that prevents aria-label from working correctly and we know it is being fixed, let's not go putting title attributes on things as a hack. Or, alternatively, if we know there's a bug in NVDA where it doesn't support lists with selection, but that this is well-documented in the ARIA spec and let's say beta already has a fix, then we should proceed. In short, I don't know that I would go so far as to suggest implementing something we know isn't supported by most AT, but if we know of a well-defined bug in one of them, we should direct our efforts to fixing the problem there not patching it here, if that makes sense.\nI hope that's clear, but apologies if not.",
              "createdAt": "2021-06-21T23:07:49Z",
              "url": "https://github.com/github/accessibility/discussions/92#discussioncomment-900199"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "becca"
              },
              "bodyText": "Let's plan for making this happen before July 1",
              "createdAt": "2020-06-01T15:54:06Z",
              "url": "https://github.com/github/accessibility/discussions/31#discussioncomment-20867"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "becca"
              },
              "bodyText": "Let's add a few more:\n\nReact to the original post of a Discussion\nAdd a THREADED/NESTED comment within a Discussion\nEdit the Category of where a Discussion lives\nUnsubscribe to a Discussion\nSubscribe to a Discussion\nLock a Discussion\nEdit the title of a Discussion\nEdit the content of any comment within a Discussion",
              "createdAt": "2020-06-01T15:55:55Z",
              "url": "https://github.com/github/accessibility/discussions/34#discussioncomment-20871"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "becca"
              },
              "bodyText": "WCAG = Web Content Accessibility Guidelines\nThis is a set of recommendations for making web content more accessible to a wide range of people with disabilities",
              "createdAt": "2020-06-01T15:53:51Z",
              "url": "https://github.com/github/accessibility/discussions/30#discussioncomment-20866"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "becca"
              },
              "bodyText": "It should be! Especially if we are the home to all developers.",
              "createdAt": "2020-06-01T15:50:54Z",
              "url": "https://github.com/github/accessibility/discussions/29#discussioncomment-20864"
            }
          ]
        }
      },
      {
        "comments": {
          "nodes": []
        }
      },
      {
        "comments": {
          "nodes": []
        }
      }
    ]
  }
}